{"version":3,"file":"index-legacy-rR-5obof.js","sources":["../../src/doc/inplace/Documentation.vue","../../src/doc/inplace/SourceCode.vue","../../src/doc/inplace/index.vue","../../src/views/inplace/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>Inplace requires <i>display</i> and <i>content</i> templates to define the content of each state.</p>\n    <DocSectionCode :code=\"baseCode\" />\n\n    <h5>Closable</h5>\n    <p>\n      <i>closable</i> property is handy within forms as it enables to switch back to output mode after editing is\n      completed using a button displayed next to the form field.\n    </p>\n    <DocSectionCode :code=\"closableCode\" />\n\n    <h5>Lazy Data</h5>\n    <p>\n      Inplace allows lazy loading content so that the content gets initialized after getting opened instead of on load.\n      Here is an example that loads, data of a table if the user decides to open the inplace.\n    </p>\n    <DocSectionCode :code=\"lazyDataCode\" />\n    <DocSectionCode :code=\"lazyDataCode2\" importCode />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>active</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Whether the content is displayed or not.</td>\n          </tr>\n          <tr>\n            <td>closable</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Displays a button to switch back to display mode.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>open</td>\n            <td>event: browser event</td>\n            <td>Callback to invoke when inplace is opened.</td>\n          </tr>\n          <tr>\n            <td>close</td>\n            <td>event: browser event</td>\n            <td>Callback to invoke when inplace is closed.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>display</td>\n            <td>-</td>\n          </tr>\n          <tr>\n            <td>content</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-inplace</td>\n            <td>Container element</td>\n          </tr>\n          <tr>\n            <td>p-inplace-display</td>\n            <td>Display container</td>\n          </tr>\n          <tr>\n            <td>p-inplace-content</td>\n            <td>Content container</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Inplace from 'primevue2/inplace';\n        `\n      },\n      baseCode: {\n        basic: `\n<Inplace>\n    <template #display>\n        <span class=\"pi pi-search\" style=\"vertical-align: middle\"></span>\n        <span style=\"margin-left:.5rem; vertical-align: middle\">View Picture</span>\n    </template>\n    <template #content>\n        <img src=\"demo/images/nature/nature1.jpg\" />\n    </template>\n</Inplace>\n        `\n      },\n      closableCode: {\n        basic: `\n<Inplace :closable=\"true\">\n    <template #display>\n        {{text || 'Click to Edit'}}\n    </template>\n    <template #content>\n        <InputText v-model=\"text\" autoFocus />\n    </template>\n</Inplace>\n        `\n      },\n      lazyDataCode: {\n        basic: `\n<Inplace @open=\"loadData\">\n    <template #display>\n        View Data\n    </template>\n    <template #content>\n        <DataTable :value=\"cars\">\n            <Column field=\"vin\" header=\"Vin\"></Column>\n            <Column field=\"year\" header=\"Year\"></Column>\n            <Column field=\"brand\" header=\"Brand\"></Column>\n            <Column field=\"color\" header=\"Color\"></Column>\n        </DataTable>\n    </template>\n</Inplace>\n        `\n      },\n      lazyDataCode2: {\n        basic: `\nimport CarService from '../../service/CarService';\n\nexport default {\n     data() {\n        return {\n            cars: null\n        }\n    },\n    carService: null,\n    created() {\n        this.carService = new CarService();\n    },\n    methods: {\n        loadData() {\n             this.carService.getCarsSmall().then(data => this.cars = data);\n        }\n    }\n}\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/inplace\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h3>Input</h3>\n<Inplace :closable=\"true\">\n    <template #display>\n        {{text || 'Click to Edit'}}\n    </template>\n    <template #content>\n        <InputText v-model=\"text\" autoFocus />\n    </template>\n</Inplace>\n\n<h3>Image</h3>\n<Inplace>\n    <template #display>\n        <span className=\"pi pi-search\" style=\"vertical-align: middle\"></span>\n        <span style=\"margin-left:.5rem; vertical-align: middle\">View Picture</span>\n    </template>\n    <template #content>\n        <img src=\"demo/images/nature/nature1.jpg\" />\n    </template>\n</Inplace>\n\n<h3>Lazy Data</h3>\n<Inplace @open=\"loadData\">\n    <template #display>\n        View Data\n    </template>\n    <template #content>\n        <DataTable :value=\"products\">\n            <Column field=\"code\" header=\"Code\"></Column>\n            <Column field=\"name\" header=\"Name\"></Column>\n            <Column field=\"category\" header=\"Category\"></Column>\n            <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n    </template>\n</Inplace>\n        `\n      },\n      sourceCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n     data() {\n        return {\n            text: null,\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    methods: {\n        loadData() {\n             this.productService.getProductsSmall().then(data => this.products = data);\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Inplace</h1>\n        <p>\n          Inplace provides an easy to do editing and display at the same time where clicking the output displays the\n          actual content.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Input</h5>\n        <Inplace :closable=\"true\">\n          <template #display>\n            {{ text || \"Click to Edit\" }}\n          </template>\n          <template #content>\n            <InputText v-model=\"text\" autoFocus />\n          </template>\n        </Inplace>\n\n        <h5>Image</h5>\n        <Inplace>\n          <template #display>\n            <span class=\"pi pi-search\" style=\"vertical-align: middle\"></span>\n            <span style=\"margin-left: 0.5rem; vertical-align: middle\">View Picture</span>\n          </template>\n          <template #content>\n            <img :src=\"$publicUrl('demo/images/nature/nature1.jpg')\" />\n          </template>\n        </Inplace>\n\n        <h5>Lazy Data</h5>\n        <Inplace @open=\"loadData\">\n          <template #display> View Data </template>\n          <template #content>\n            <DataTable :value=\"products\">\n              <Column field=\"code\" header=\"Code\"></Column>\n              <Column field=\"name\" header=\"Name\"></Column>\n              <Column field=\"category\" header=\"Category\"></Column>\n              <Column field=\"quantity\" header=\"Quantity\"></Column>\n            </DataTable>\n          </template>\n        </Inplace>\n      </div>\n    </div>\n\n    <InplaceDoc />\n  </div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService'\nimport InplaceDoc from '@/doc/inplace/index.vue'\n\nexport default {\n  data() {\n    return {\n      text: null,\n      products: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  methods: {\n    loadData() {\n      this.productService.getProductsSmall().then(data => this.products = data)\n    }\n  },\n  components: {\n    'InplaceDoc': InplaceDoc\n  }\n}\n</script>\n"],"names":["name","data","importCode","basic","baseCode","closableCode","lazyDataCode","lazyDataCode2","sourceCode1","sourceCode2","components","Documentation","SourceCode","text","products","productService","created","this","ProductService","methods","loadData","_this","getProductsSmall","then","InplaceDoc"],"mappings":"qXA2IA,QAAA,CACAA,KAAA,gBACAC,KAAA,WACA,MAAA,CACAC,WAAA,CACAC,MAAA,wDAIAC,SAAA,CACAD,MAWA,+UACAE,aAAA,CACAF,MAUA,iOACAG,aAAA,CACAH,MAAA,gcAgBAI,cAAA,CACAJ,MAoBA,uYAEA,m8GCrMA,CACAH,KAAA,aACAC,KAAAA,WACA,MAAA,CACAO,YAAA,CACAL,MAqCA,kiCACAM,YAAA,CACAN,0cAuBA,kcCnEA,CACAO,WAAA,CAAAC,cAAAA,EAAAC,WAAAA,kSCyCA,CACAX,gBACA,MAAA,CACAY,KAAA,KACAC,SAAA,KAEA,EACAC,eAAA,KACAC,QAAA,WACAC,KAAAF,eAAA,IAAAG,CACA,EACAC,QAAA,CACAC,SAAAA,WAAAC,IAAAA,EACAJ,KAAAA,KAAAF,eAAAO,mBAAAC,MAAA,SAAAtB,GAAA,OAAAoB,EAAAP,SAAAb,CAAA,GACA,GAEAS,WAAA,CACAc,WAAAA"}