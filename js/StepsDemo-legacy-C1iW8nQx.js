!function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function n(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(t,n,a){var o;return o=function(t,n){if("object"!=e(t)||!t)return t;var a=t[Symbol.toPrimitive];if(void 0!==a){var o=a.call(t,n||"default");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(t)}(n,"string"),(n="symbol"==e(o)?o:o+"")in t?Object.defineProperty(t,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[n]=a,t}System.register(["./app.component-legacy-cLUjg6K2.js","./resize-observer-polyfill-legacy-0iJwNYH9.js","./app.fullcalendar-legacy-DHW3cqgj.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-DJ-X2bns.js"],(function(e,t){"use strict";var a;return{setters:[function(e){a=e.n},null,null,null,null],execute:function(){var t=document.createElement("style");t.textContent="[data-v-5fd94149] b{display:block}[data-v-5fd94149] .p-card-body{padding:2rem}\n/*$vite$:1*/",document.head.appendChild(t);var o=a({name:"Documentation",data:function(){return{importCode:{basic:"\nimport Steps from 'primevue2/steps';\n        "},baseCode:{basic:'\n<Steps :model="items" />\n<router-view />\n        '},baseCode2:{basic:"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\titems: [{\n                label: 'Personal',\n                to: '/steps'\n            },\n            {\n                label: 'Seat',\n                to: '/steps/seat'\n            },\n            {\n                label: 'Payment',\n                to: '/steps/payment'\n            },\n            {\n                label: 'Confirmation',\n                to: '/steps/confirmation'\n            }]\n\t\t}\n\t}\n}\n        "},interactiveCode:{basic:'\n<Steps :model="items" :readonly="false" />\n<router-view />\n        '}}}},(function(){var e=this,t=e._self._c;return t("div",[t("h5",[e._v("Import")]),t("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),t("h5",[e._v("MenuModel")]),t("p",[e._v(" Steps uses the common MenuModel API to define the items, visit "),t("router-link",{attrs:{to:"/menumodel"}},[e._v("MenuModel API")]),e._v(" for details. ")],1),t("h5",[e._v("Getting Started")]),t("p",[e._v(" Steps is integrated with Vue Router and requires a collection of menuitems as its model. ")]),t("DocSectionCode",{attrs:{code:e.baseCode}}),t("DocSectionCode",{attrs:{code:e.baseCode2,importCode:""}}),t("h5",[e._v("Interactive")]),e._m(0),t("DocSectionCode",{attrs:{code:e.interactiveCode}}),t("h5",[e._v("Properties")]),t("p",[e._v(" Any property as style and class are passed to the main container element. Following are the additional properties to configure the component. ")]),e._m(1),t("h5",[e._v("Styling")]),t("p",[e._v(" Following is the list of structural style classes, for theming classes visit "),t("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page. ")],1),e._m(2),t("h5",[e._v("Dependencies")]),t("p",[e._v("None.")])],1)}),[function(){var e=this,t=e._self._c;return t("p",[e._v(" Items are readonly by default, if you'd like to make them interactive then disable "),t("i",[e._v("readonly")]),e._v(" property. ")])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Type")]),t("th",[e._v("Default")]),t("th",[e._v("Description")])])]),t("tbody",[t("tr",[t("td",[e._v("id")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Unique identifier of the element.")])]),t("tr",[t("td",[e._v("model")]),t("td",[e._v("array")]),t("td",[e._v("null")]),t("td",[e._v("An array of menuitems.")])]),t("tr",[t("td",[e._v("readonly")]),t("td",[e._v("boolean")]),t("td",[e._v("true")]),t("td",[e._v("Whether the items are clickable or not.")])]),t("tr",[t("td",[e._v("exact")]),t("td",[e._v("boolean")]),t("td",[e._v("true")]),t("td",[e._v(" Whether to apply 'router-link-active-exact' class if route exactly matches the item path. ")])])])])])},function(){var e=this,t=e._self._c;return t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Element")])])]),t("tbody",[t("tr",[t("td",[e._v("p-steps")]),t("td",[e._v("Container element.")])]),t("tr",[t("td",[e._v("p-steps-item")]),t("td",[e._v("Menuitem element.")])]),t("tr",[t("td",[e._v("p-steps-number")]),t("td",[e._v("Number of menuitem.")])]),t("tr",[t("td",[e._v("p-steps-title")]),t("td",[e._v("Label of menuitem.")])])])])])}],!1,null,null).exports,r=a({name:"SourceCode",data:function(){return{sourceCode1:{basic:'\n<Steps :model="items" :readonly="true"  style="margin-bottom: 1rem" />\n<keep-alive>\n    <router-view :formData="formObject" @prevPage="prevPage($event)" @nextPage="nextPage($event)" @complete="complete" />\n</keep-alive>\n        '},sourceCode2:{basic:"\nexport default {\n    data() {\n        return {\n            items: [{\n                label: 'Personal',\n                to: '/steps'\n            },\n            {\n                label: 'Seat',\n                to: '/steps/seat'\n            },\n            {\n                label: 'Payment',\n                to: '/steps/payment'\n            },\n            {\n                label: 'Confirmation',\n                to: '/steps/confirmation'\n            }],\n            formObject: {}\n        }\n    },\n    components: {\n        'StepsDoc': StepsDoc\n    },\n    methods: {\n        nextPage(event) {\n            for (let field in event.formData) {\n                this.formObject[field] = event.formData[field];\n            }\n\n            this.$router.push(this.items[event.pageIndex + 1].to);\n        },\n        prevPage(event) {\n            this.$router.push(this.items[event.pageIndex - 1].to);\n        },\n        complete() {\n            this.$toast.add({severity:'success', summary:'Order submitted', detail: 'Dear, ' + this.formObject.firstname + ' ' + this.formObject.lastname + ' your order completed.'});\n        }\n    }\n}\n        "}}}},(function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("DocSectionCode",{attrs:{code:e.sourceCode1}}),t("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)}),[function(){var e=this._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/steps",target:"_blank",rel:"noopener noreferrer"}},[e("span",[this._v("View on GitHub")])])}],!1,null,null).exports,s=a({name:"SourceCode",data:function(){return{sourceCode1:{basic:'\n<div class="stepsdemo-content">\n    <Card>\n        <template #title>\n            Personal Information\n        </template>\n        <template #subtitle>\n            Enter your information\n        </template>\n        <template #content>\n            <p class="p-text-secondary">Enter your information</p>\n            <div class="p-fluid">\n                <div class="field">\n                    <label for="firstname">Firstname</label>\n                    <InputText id="firstname" v-model="$v.firstname.$model" :class="{\'p-invalid\':$v.firstname.$invalid && submitted}" />\n                    <small v-show="$v.firstname.$invalid && submitted" class="p-error">Firstname is required.</small>\n                </div>\n                <div class="field">\n                    <label for="lastname">Lastname</label>\n                    <InputText v-model="$v.lastname.$model" :class="{\'p-invalid\':$v.lastname.$invalid && submitted}" />\n                    <small v-show="$v.lastname.$invalid && submitted" class="p-error">Lastname is required.</small>\n                </div>\n                <div class="field">\n                    <label for="age">Age</label>\n                    <InputText id="age" v-model="$v.age.$model" :class="{\'p-invalid\':$v.age.$error && submitted}" />\n                    <small v-show="$v.age.$invalid && submitted" class="p-error">Age should be a number.</small>\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <div class="grid grid-nogutter justify-content-between">\n                <i></i>\n                <Button label="Next" @click="nextPage(!$v.$invalid)" icon="pi pi-angle-right" iconPos="right" />\n            </div>\n        </template>\n    </Card>\n</div>\n        '},sourceCode2:{basic:"\nimport {required, integer} from 'vuelidate/lib/validators';\n\nexport default {\n    data () {\n        return {\n            firstname: '',\n            lastname: '',\n            age: '',\n            submitted: false\n        }\n    },\n    validations: {\n        firstname: {\n            required\n        },\n        lastname: {\n            required\n        },\n        age: {\n            integer\n        }\n    },\n    methods: {\n        nextPage(isFormValid) {\n            this.submitted = true;\n\n            if (!isFormValid) {\n                return;\n            }\n\n            this.$emit('nextPage', {formData: {firstname: this.firstname, lastname: this.lastname, age: this.age}, pageIndex: 0});\n        }\n    }\n}\n        "}}}},(function(){var e=this,t=e._self._c;return t("div",[t("DocSectionCode",{attrs:{code:e.sourceCode1}}),t("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)}),[],!1,null,null).exports,i=a({name:"SourceCode",data:function(){return{sourceCode1:{basic:'\n<div class="stepsdemo-content">\n    <Card>\n        <template #title>\n            Seat Information\n        </template>\n        <template #subtitle>\n            Choose your seat\n        </template>\n        <template #content>\n            <div class="p-fluid formgrid grid">\n                <div class="field col-12 md:col-6">\n                    <label for="class">Class</label>\n                    <Dropdown inputId="class" v-model="selectedClass" :options="classes" @change="setVagons($event)" optionLabel="name" placeholder="Select a Class" />\n                </div>\n                <div class="field col-12 md:col-6">\n                    <label for="lastname">Wagon</label>\n                    <Dropdown inputId="wagon" v-model="selectedVagon" :options="vagons" @change="setSeats($event)" optionLabel="vagon" placeholder="Select a Vagon" />\n                </div>\n                <div class="field col-12">\n                    <label for="seat">Seat</label>\n                    <Dropdown inputId="seat" v-model="selectedSeat" :options="seats" optionLabel="seat" placeholder="Select a Seat" />\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <div class="grid grid-nogutter justify-content-between">\n                <Button label="Back" @click="prevPage()" icon="pi pi-angle-left" />\n                <Button label="Next" @click="nextPage()" icon="pi pi-angle-right" iconPos="right" />\n            </div>\n        </template>\n    </Card>\n</div>\n        '},sourceCode2:{basic:"\nexport default {\n    data () {\n        return {\n            selectedClass: '',\n            classes: [\n                {name: 'First Class', code: 'A', factor: 1},\n                {name: 'Second Class', code: 'B', factor: 2},\n                {name: 'Third Class', code: 'C', factor: 3}\n            ],\n            vagons: [],\n            selectedVagon: '',\n            seats: [],\n            selectedSeat: ''\n        }\n    },\n    methods: {\n        setVagons(event) {\n            if (this.selectedClass && event.value) {\n                this.vagons = [];\n                this.seats = [];\n                for (let i = 1; i < 3 * event.value.factor; i++) {\n                    this.vagons.push({vagon: i + event.value.code, type: event.value.name, factor: event.value.factor});\n                }\n            }\n        },\n        setSeats(event) {\n            if (this.selectedVagon && event.value) {\n                this.seats = [];\n                for (let i = 1; i < 10 * event.value.factor; i++) {\n                    this.seats.push({seat: i, type: event.value.type});\n                }\n            }\n        },\n        nextPage() {\n            this.$emit('nextPage', {formData: {class: this.selectedClass.name, vagon: this.selectedVagon.vagon, seat: this.selectedSeat.seat}, pageIndex: 1});\n        },\n        prevPage() {\n            this.$emit('prevPage', {pageIndex: 1});\n        }\n    }\n}\n        "}}}},(function(){var e=this,t=e._self._c;return t("div",[t("DocSectionCode",{attrs:{code:e.sourceCode1}}),t("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)}),[],!1,null,null).exports,l=a({name:"SourceCode",data:function(){return{sourceCode1:{basic:'\n<div class="stepsdemo-content">\n    <Card>\n        <template #title>\n            Payment Information\n        </template>\n        <template #subtitle>\n            Enter your card details\n        </template>\n        <template #content>\n            <div class="p-fluid formgrid grid">\n                <div class="field col-12">\n                    <label for="class">Class</label>\n                    <InputText type="text" v-model="cardholderName" />\n                </div>\n                <div class="field col-8">\n                    <label id="number" for="lastname">Number</label>\n                    <InputMask id="number" mask="9999-9999-9999-9999" v-model="cardholderNumber" />\n                </div>\n                <div class="field col-2">\n                    <label id="date" for="date">Date</label>\n                    <InputMask id="date" mask="99/99" v-model="date" />\n                </div>\n                <div class="field col-2">\n                    <label for="cvv">CVV</label>\n                    <InputMask id="cvv" mask="999" v-model="cvv" />\n                </div>\n                <div class="field-checkbox col-12">\n                    <Checkbox id="remember" v-model="remember" :binary="true" />\n                    <label for="remember" class="p-checkbox-label">Save credit card information for future</label>\n                </div>\n            </div>\n        </template>\n        <template #footer>\n            <div class="grid grid-nogutter justify-content-between">\n                <Button label="Back" @click="prevPage()" icon="pi pi-angle-left" />\n                <Button label="Next" @click="nextPage()" icon="pi pi-angle-right" iconPos="right" />\n            </div>\n        </template>\n    </Card>\n</div>\n        '},sourceCode2:{basic:"\nexport default {\n    data () {\n        return {\n            cardholderName:'',\n            cardholderNumber:'',\n            date:'',\n            cvv:'',\n            remember:false\n        }\n    },\n    methods: {\n        nextPage() {\n            this.$emit('nextPage', {formData: {cardholderName: this.cardholderName, cardholderNumber: this.cardholderNumber, date: this.date, cvv: this.cvv}, pageIndex: 2});\n        },\n        prevPage() {\n            this.$emit('prevPage', {pageIndex: 2});\n        }\n    }\n}\n        "}}}},(function(){var e=this,t=e._self._c;return t("div",[t("DocSectionCode",{attrs:{code:e.sourceCode1}}),t("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)}),[],!1,null,null).exports,d=a({name:"SourceCode",data:function(){return{sourceCode1:{basic:'\n<div class="stepsdemo-content">\n    <Card>\n        <template #title>\n            Confirmation\n        </template>\n        <template #content>\n            <div class="field col-12">\n                <label for="class">Name</label>\n                <b>{{formData.firstname ? formData.firstname : \'-\'}} {{formData.lastname ? formData.lastname : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Age</label>\n                <b>{{formData.age ? formData.age : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Seat Class</label>\n                <b>{{formData.class ? formData.class : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Wagon Number</label>\n                <b>{{formData.vagon ? formData.vagon : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Seat</label>\n                <b>{{formData.seat ? formData.seat : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Cardholder Name</label>\n                <b>{{formData.cardholderName ? formData.cardholderName : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Card Number</label>\n                <b>{{formData.cardholderNumber ? formData.cardholderNumber : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">Date</label>\n                <b>{{formData.date ? formData.date : \'-\'}}</b>\n            </div>\n            <div class="field col-12">\n                <label for="Age">CVV</label>\n                <b>{{formData.cvv && formData.cvv.length === 3  ? \'**\' + formData.cvv[2] : \'-\'}}</b>\n            </div>\n        </template>\n        <template #footer>\n            <div class="grid grid-nogutter justify-content-between">\n                <Button label="Back" @click="prevPage()"  icon="pi pi-angle-left" />\n                <Button label="Complete" @click="complete()" icon="pi pi-check" iconPos="right" class="p-button-success"/>\n            </div>\n        </template>\n    </Card>\n</div>\n        '},sourceCode2:{basic:"\nexport default {\n    props: {\n        formData: Object\n    },\n    methods: {\n        prevPage() {\n            this.$emit('prevPage', {pageIndex: 3});\n        },\n        complete() {\n            this.$emit('complete');\n        }\n    },\n}\n        "}}}},(function(){var e=this,t=e._self._c;return t("div",[t("DocSectionCode",{attrs:{code:e.sourceCode1}}),t("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)}),[],!1,null,null).exports,c=a({components:{Documentation:o,SourceCode:r,Personal:s,Seat:i,Payment:l,Confirmation:d}},(function(){var e=this._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Documentation"}},[e("Documentation")],1),e("TabPanel",{attrs:{header:"Source"}},[e("SourceCode")],1),e("TabPanel",{attrs:{header:"Personal"}},[e("Personal")],1),e("TabPanel",{attrs:{header:"Seat"}},[e("Seat")],1),e("TabPanel",{attrs:{header:"Payment"}},[e("Payment")],1),e("TabPanel",{attrs:{header:"Confirmation"}},[e("Confirmation")],1)],1)],1)}),[],!1,null,null).exports;e("default",a({data:function(){return{items:[{label:"Personal",to:"/steps"},{label:"Seat",to:"/steps/seat"},{label:"Payment",to:"/steps/payment"},{label:"Confirmation",to:"/steps/confirmation"}],formObject:{}}},components:{StepsDoc:c},methods:{nextPage:function(e){this.formObject=n(n({},this.formObject),e.formData),this.$router.push(this.items[e.pageIndex+1].to)},prevPage:function(e){this.$router.push(this.items[e.pageIndex-1].to)},complete:function(){this.$toast.add({severity:"success",summary:"Order submitted",detail:"Dear, "+this.formObject.firstname+" "+this.formObject.lastname+" your order completed."})}}},(function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("Steps",{attrs:{model:e.items,readonly:!0}})],1),t("keep-alive",[t("router-view",{attrs:{formData:e.formObject},on:{prevPage:function(t){return e.prevPage(t)},nextPage:function(t){return e.nextPage(t)},complete:e.complete}})],1)],1),t("StepsDoc")],1)}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[e._v("Steps")]),t("p",[e._v(" Steps components is an indicator for the steps in a wizard workflow. Example below uses nested routes with Steps. ")])])])}],!1,null,"5fd94149").exports)}}}))}();
//# sourceMappingURL=StepsDemo-legacy-C1iW8nQx.js.map
