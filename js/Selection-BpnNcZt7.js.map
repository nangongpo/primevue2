{"version":3,"file":"Selection-BpnNcZt7.js","sources":["../../src/doc/datatable/Selection.vue","../../src/views/datatable/Selection.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"baseCode\" />\n        <DocSectionCode :code=\"baseCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\n<div class=\"card\">\n    <h5>Single</h5>\n    <DataTable :value=\"products\" :selection.sync=\"selectedProduct1\" selectionMode=\"single\" responsiveLayout=\"scroll\" dataKey=\"id\">\n        <Column field=\"code\" header=\"Code\"></Column>\n        <Column field=\"name\" header=\"Name\"></Column>\n        <Column field=\"category\" header=\"Category\"></Column>\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\n    </DataTable>\n</div>\n\n<div class=\"card\">\n    <h5>Multiple</h5>\n    <DataTable :value=\"products\" :selection.sync=\"selectedProducts1\" selectionMode=\"multiple\" responsiveLayout=\"scroll\" dataKey=\"id\">\n        <template #header>\n            Multiple Selection with MetaKey\n        </template>\n        <Column field=\"code\" header=\"Code\"></Column>\n        <Column field=\"name\" header=\"Name\"></Column>\n        <Column field=\"category\" header=\"Category\"></Column>\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\n    </DataTable>\n\n    <DataTable :value=\"products\" :selection.sync=\"selectedProducts2\" selectionMode=\"multiple\" responsiveLayout=\"scroll\" dataKey=\"id\" :metaKeySelection=\"false\" style=\"margin-top: 2em\">\n        <template #header>\n            Multiple Selection without MetaKey\n        </template>\n        <Column field=\"code\" header=\"Code\"></Column>\n        <Column field=\"name\" header=\"Name\"></Column>\n        <Column field=\"category\" header=\"Category\"></Column>\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\n    </DataTable>\n</div>\n\n<div class=\"card\">\n    <h5>Events</h5>\n    <DataTable :value=\"products\" :selection.sync=\"selectedProduct2\" selectionMode=\"single\" responsiveLayout=\"scroll\" dataKey=\"id\"\n        @row-select=\"onRowSelect\" @row-unselect=\"onRowUnselect\">\n        <Column field=\"code\" header=\"Code\"></Column>\n        <Column field=\"name\" header=\"Name\"></Column>\n        <Column field=\"category\" header=\"Category\"></Column>\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\n    </DataTable>\n</div>\n\n<div class=\"card\">\n    <h5>RadioButton</h5>\n    <DataTable :value=\"products\" :selection.sync=\"selectedProduct3\" responsiveLayout=\"scroll\" dataKey=\"id\">\n        <Column selectionMode=\"single\" :headerStyle=\"{'width': '3em'}\"></Column>\n        <Column field=\"code\" header=\"Code\"></Column>\n        <Column field=\"name\" header=\"Name\"></Column>\n        <Column field=\"category\" header=\"Category\"></Column>\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\n    </DataTable>\n</div>\n\n<div class=\"card\">\n    <h5>Checkbox</h5>\n    <DataTable :value=\"products\" :selection.sync=\"selectedProducts3\" responsiveLayout=\"scroll\" dataKey=\"id\">\n        <Column selectionMode=\"multiple\" :headerStyle=\"{'width': '3em'}\"></Column>\n        <Column field=\"code\" header=\"Code\"></Column>\n        <Column field=\"name\" header=\"Name\"></Column>\n        <Column field=\"category\" header=\"Category\"></Column>\n        <Column field=\"quantity\" header=\"Quantity\"></Column>\n    </DataTable>\n</div>\n        `\n      },\n      baseCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct1: null,\n            selectedProduct2: null,\n            selectedProduct3: null,\n            selectedProducts1: null,\n            selectedProducts2: null,\n            selectedProducts3: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowSelect(event) {\n            this.$toast.add({severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000});\n        },\n        onRowUnselect(event) {\n            this.$toast.add({severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000});\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>DataTable <span>Selection</span></h1>\n        <p>\n          DataTable provides single and multiple selection modes based on row click or using radio button and checkbox\n          elements.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Single</h5>\n        <p>\n          In single mode, a row is selected on click event of a row. If the row is already selected then the row gets\n          unselected.\n        </p>\n        <DataTable\n          :value=\"products\"\n          :selection.sync=\"selectedProduct1\"\n          selectionMode=\"single\"\n          responsiveLayout=\"scroll\"\n          dataKey=\"id\">\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n      </div>\n\n      <div class=\"card\">\n        <h5>Multiple</h5>\n        <p>\n          In multiple mode, selection binding should be an array. For touch enabled devices, selection is managed by\n          tapping and for other devices metakey or shiftkey are required. Setting metaKeySelection property as false\n          enables multiple selection without meta key.\n        </p>\n        <DataTable\n          :value=\"products\"\n          :selection.sync=\"selectedProducts1\"\n          selectionMode=\"multiple\"\n          responsiveLayout=\"scroll\"\n          dataKey=\"id\">\n          <template #header> Multiple Selection with MetaKey </template>\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n\n        <DataTable\n          :value=\"products\"\n          :selection.sync=\"selectedProducts2\"\n          selectionMode=\"multiple\"\n          dataKey=\"id\"\n          :metaKeySelection=\"false\"\n          responsiveLayout=\"scroll\"\n          style=\"margin-top: 2em\">\n          <template #header> Multiple Selection without MetaKey </template>\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n      </div>\n\n      <div class=\"card\">\n        <h5>Events</h5>\n        <p>row-select and row-unselects are available as selection events.</p>\n        <DataTable\n          :value=\"products\"\n          :selection.sync=\"selectedProduct2\"\n          selectionMode=\"single\"\n          dataKey=\"id\"\n          responsiveLayout=\"scroll\"\n          @row-select=\"onRowSelect\"\n          @row-unselect=\"onRowUnselect\">\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n      </div>\n\n      <div class=\"card\">\n        <h5>RadioButton</h5>\n        <p>\n          Single selection can also be handled using radio buttons by enabling the selectionMode property of column as\n          \"single\".\n        </p>\n        <DataTable :value=\"products\" :selection.sync=\"selectedProduct3\" responsiveLayout=\"scroll\" dataKey=\"id\">\n          <Column selectionMode=\"single\" :headerStyle=\"{ width: '3em' }\"></Column>\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n      </div>\n\n      <div class=\"card\">\n        <h5>Checkbox</h5>\n\n        <DataTable :value=\"products\" :selection.sync=\"selectedProducts3\" responsiveLayout=\"scroll\" dataKey=\"id\">\n          <Column selectionMode=\"multiple\" :headerStyle=\"{ width: '3em' }\"></Column>\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n        </DataTable>\n      </div>\n    </div>\n\n    <DataTableSelectionDoc />\n  </div>\n</template>\n\n<script>\nimport DataTableSelectionDoc from '@/doc/datatable/Selection.vue'\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  components: { DataTableSelectionDoc },\n  data() {\n    return {\n      products: null,\n      selectedProduct1: null,\n      selectedProduct2: null,\n      selectedProduct3: null,\n      selectedProducts1: null,\n      selectedProducts2: null,\n      selectedProducts3: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  },\n  methods: {\n    onRowSelect(event) {\n      this.$toast.add({ severity: 'info', summary: 'Product Selected', detail: 'Name: ' + event.data.name, life: 3000 })\n    },\n    onRowUnselect(event) {\n      this.$toast.add({ severity: 'warn', summary: 'Product Unselected', detail: 'Name: ' + event.data.name, life: 3000 })\n    }\n  }\n}\n</script>\n"],"names":["_sfc_main","DataTableSelectionDoc","ProductService","data","event"],"mappings":"mPAYA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,CACA,MAAA,i8FAmEA,EACA,UAAA,CACA,MAAA,i9BAgCA,CACA,CACA,CACA,qUCEAA,EAAA,CACA,WAAA,CAAA,sBAAAC,CAAA,EACA,MAAA,CACA,MAAA,CACA,SAAA,KACA,iBAAA,KACA,iBAAA,KACA,iBAAA,KACA,kBAAA,KACA,kBAAA,KACA,kBAAA,IACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAC,CACA,EACA,SAAA,CACA,KAAA,eAAA,iBAAA,EAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,EACA,QAAA,CACA,YAAAC,EAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,mBAAA,OAAA,SAAAA,EAAA,KAAA,KAAA,KAAA,GAAA,CAAA,CACA,EACA,cAAAA,EAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,qBAAA,OAAA,SAAAA,EAAA,KAAA,KAAA,KAAA,GAAA,CAAA,CACA,CACA,CACA"}