System.register(["./app.component-legacy-cLUjg6K2.js","./resize-observer-polyfill-legacy-0iJwNYH9.js","./app.fullcalendar-legacy-DHW3cqgj.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-DJ-X2bns.js"],(function(e,n){"use strict";var t,r;return{setters:[function(e){t=e.n,r=e.aL},null,null,null,null],execute:function(){var n=document.createElement("style");n.textContent="p[data-v-a3f04b6b]{margin-top:0}[data-v-a3f04b6b] .dark-demo-terminal{background-color:#212121;color:#fff}[data-v-a3f04b6b] .dark-demo-terminal .p-terminal-command{color:#80cbc4}[data-v-a3f04b6b] .dark-demo-terminal .p-terminal-prompt{color:#ffd54f}[data-v-a3f04b6b] .dark-demo-terminal .p-terminal-response{color:#9fa8da}\n/*$vite$:1*/",document.head.appendChild(n);var a=t({name:"Documentation",data:function(){return{importCode:{basic:"\nimport Terminal from 'primevue2/terminal';\nimport TerminalService from 'primevue2/terminalservice';\n        "},baseCode:{basic:'\n<Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" />\n        '},baseCode2:{basic:"\nimport TerminalService from 'primevue2/terminalservice';\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.$emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.$on('command', this.commandHandler);\n    },\n    beforeDestroy() {\n        TerminalService.$off('command', this.commandHandler);\n    }\n}\n        "}}}},(function(){var e=this,n=e._self._c;return n("div",[n("h5",[e._v("Import")]),n("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),n("h5",[e._v("Getting Started")]),e._m(0),n("DocSectionCode",{attrs:{code:e.baseCode}}),n("DocSectionCode",{attrs:{code:e.baseCode2,importCode:""}}),n("h5",[e._v("Properties")]),n("p",[e._v("Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.")]),e._m(1),n("h5",[e._v("Styling")]),n("p",[e._v("Following is the list of structural style classes, for theming classes visit "),n("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page.")],1),e._m(2),n("h5",[e._v("Dependencies")]),n("p",[e._v("None.")])],1)}),[function(){var e=this,n=e._self._c;return n("p",[e._v("Commands are processed using an EventBus implementation called TerminalService. Import this service into your component and subscribe to the "),n("i",[e._v("command")]),e._v(" event to process the commands by sending replies with the "),n("i",[e._v("response")]),e._v(" event.")])},function(){var e=this,n=e._self._c;return n("div",{staticClass:"doc-tablewrapper"},[n("table",{staticClass:"doc-table"},[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Type")]),n("th",[e._v("Default")]),n("th",[e._v("Description")])])]),n("tbody",[n("tr",[n("td",[e._v("welcomeMessage")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Initial text to display on terminal.")])]),n("tr",[n("td",[e._v("prompt")]),n("td",[e._v("string")]),n("td",[e._v("null")]),n("td",[e._v("Prompt text for each command.")])])])])])},function(){var e=this,n=e._self._c;return n("div",{staticClass:"doc-tablewrapper"},[n("table",{staticClass:"doc-table"},[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Element")])])]),n("tbody",[n("tr",[n("td",[e._v("p-terminal")]),n("td",[e._v("Container element.")])]),n("tr",[n("td",[e._v("p-terminal-content")]),n("td",[e._v("Content of terminal.")])]),n("tr",[n("td",[e._v("p-terminal-prompt")]),n("td",[e._v("Prompt text.")])]),n("tr",[n("td",[e._v("p-terminal-response")]),n("td",[e._v("Command response.")])]),n("tr",[n("td",[e._v("p-terminal-input")]),n("td",[e._v("Input element to enter commands.")])])])])])}],!1,null,null).exports,o=t({name:"SourceCode",data:function(){return{sourceCode1:{basic:'\n<p>Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.</p>\n<Terminal welcomeMessage="Welcome to PrimeVue" prompt="primevue $" class="dark-demo-terminal" />\n        '},sourceCode2:{basic:"\nimport TerminalService from 'primevue2/terminalservice';\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.on('command', this.commandHandler);\n    },\n    beforeDestroy() {\n        TerminalService.off('command', this.commandHandler);\n    }\n}\n        "},sourceCode3:{basic:"\np {\n    margin-top: 0;\n}\n\n:deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n        "}}}},(function(){var e=this,n=e._self._c;return n("div",[e._m(0),n("DocSectionCode",{attrs:{code:e.sourceCode1}}),n("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}}),n("DocSectionCode",{attrs:{code:e.sourceCode3,importStyle:""}})],1)}),[function(){var e=this._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/terminal",target:"_blank",rel:"noopener noreferrer"}},[e("span",[this._v("View on GitHub")])])}],!1,null,null).exports,s=t({components:{Documentation:a,SourceCode:o}},(function(){var e=this._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Documentation"}},[e("Documentation")],1),e("TabPanel",{attrs:{header:"Source"}},[e("SourceCode")],1)],1)],1)}),[],!1,null,null).exports;e("default",t({methods:{commandHandler:function(e){var n,t=e.indexOf(" "),a=-1!==t?e.substring(0,t):e;switch(a){case"date":n="Today is "+(new Date).toDateString();break;case"greet":n="Hola "+e.substring(t+1);break;case"random":n=Math.floor(100*Math.random());break;default:n="Unknown command: "+a}r.emit("response",n)}},mounted:function(){r.on("command",this.commandHandler)},beforeDestroy:function(){r.off("command",this.commandHandler)},components:{TerminalDoc:s}},(function(){var e=this,n=e._self._c;return n("div",[e._m(0),n("div",{staticClass:"content-section implementation"},[n("div",{staticClass:"card"},[n("p",[e._v('Enter "date" to display the current date, "greet {0}" for a message and "random" to get a random number.')]),n("Terminal",{staticClass:"dark-demo-terminal",attrs:{welcomeMessage:"Welcome to PrimeVue",prompt:"primevue $"}})],1)]),n("TerminalDoc")],1)}),[function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section introduction"},[n("div",{staticClass:"feature-intro"},[n("h1",[e._v("Terminal")]),n("p",[e._v("Terminal is a text based user interface.")])])])}],!1,null,"a3f04b6b").exports)}}}));
//# sourceMappingURL=TerminalDemo-legacy-ju8nF7h5.js.map
