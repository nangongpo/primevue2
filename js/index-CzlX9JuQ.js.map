{"version":3,"file":"index-CzlX9JuQ.js","sources":["../../src/doc/confirmpopup/Documentation.vue","../../src/doc/confirmpopup/SourceCode.vue","../../src/doc/confirmpopup/index.vue","../../src/views/confirmpopup/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>ConfirmationService</h5>\n    <p>\n      ConfirmDialog is controlled via the <i>ConfirmationService</i> that needs to be installed globally before the\n      application instance is created.\n    </p>\n\n    <DocSectionCode :code=\"usageCode\" importCode />\n\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      ConfirmPopup is displayed by calling the <i>require</i> method of the <i>$confirm</i> instance by passing the\n      options to customize the Popup.<i>target</i> attribute is mandatory to align the popup to its caller.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Close Confirmation</h5>\n    <p>The popup can also be hidden programmatically using the <i>close</i> method.</p>\n    <DocSectionCode :code=\"closeConfirmationCode\" importCode />\n\n    <h5>Confirmation Options</h5>\n    <p>ConfirmDialog can be customized with various options listed here.</p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>target</td>\n            <td>DomElement</td>\n            <td>null</td>\n            <td>Element to align the overlay.</td>\n          </tr>\n          <tr>\n            <td>message</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Message of the confirmation.</td>\n          </tr>\n          <tr>\n            <td>group</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Optional key to match the key of the confirmation, useful to target a specific confirm dialog instance.\n            </td>\n          </tr>\n          <tr>\n            <td>icon</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Icon to display next to the message.</td>\n          </tr>\n          <tr>\n            <td>accept</td>\n            <td>Function</td>\n            <td>null</td>\n            <td>Callback to execute when action is confirmed.</td>\n          </tr>\n          <tr>\n            <td>reject</td>\n            <td>Function</td>\n            <td>null</td>\n            <td>Callback to execute when action is rejected.</td>\n          </tr>\n          <tr>\n            <td>acceptLabel</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Label of the accept button. Defaults to PrimeVue\n              <router-link to=\"/locale\">Locale</router-link> configuration.\n            </td>\n          </tr>\n          <tr>\n            <td>rejectLabel</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Label of the reject button. Defaults to PrimeVue\n              <router-link to=\"/locale\">Locale</router-link> configuration.\n            </td>\n          </tr>\n          <tr>\n            <td>acceptIcon</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Icon of the accept button.</td>\n          </tr>\n          <tr>\n            <td>rejectIcon</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Icon of the reject button.</td>\n          </tr>\n          <tr>\n            <td>acceptClass</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Style class of the accept button.</td>\n          </tr>\n          <tr>\n            <td>rejectClass</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Style class of the reject button.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>group</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Optional key to match the key of the confirmation, useful to target a specific confirm dialog instance.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>message</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      ConfirmDialog inherits all the classes from the Dialog component, visit\n      <router-link to=\"/dialog\">dialog</router-link> for more information.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-confirm-popup</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-confirm-content</td>\n            <td>Content element.</td>\n          </tr>\n          <tr>\n            <td>p-confirm-popup-icon</td>\n            <td>Message icon.</td>\n          </tr>\n          <tr>\n            <td>p-confirm-popup-message</td>\n            <td>Message text.</td>\n          </tr>\n          <tr>\n            <td>p-confirm-popup-footer</td>\n            <td>Footer element for buttons.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      usageCode: {\n        basic: `\nimport ConfirmationService from 'primevue2/confirmationservice';\nVue.use(ConfirmationService);\n\n//example application instance\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');\n        `\n      },\n      importCode: {\n        basic: `\nimport ConfirmPopup from 'primevue2/confirmpopup';\n        `\n      },\n      baseCode: {\n        basic: `\n<ConfirmPopup></ConfirmPopup>\n\n<Button @click=\"delete()\" icon=\"pi pi-check\" label=\"Confirm\"></Button>\n        `\n      },\n      baseCode2: {\n        basic: `\nexport default {\n\tmethods: {\n        delete(event) {\n            this.$confirm.require({\n                target: event.currentTarget,\n                message: 'Are you sure you want to proceed?',\n                icon: 'pi pi-exclamation-triangle',\n                accept: () => {\n                    //callback to execute when user confirms the action\n                },\n                reject: () => {\n                    //callback to execute when user rejects the action\n                }\n            });\n        },\n    }\n}\n        `\n      },\n      closeConfirmationCode: {\n        basic: `\nexport default {\n\tmethods: {\n        discard() {\n            this.$confirm.close();\n        }\n    }\n}\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/confirmpopup\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<ConfirmPopup></ConfirmPopup>\n\n<div class=\"card\">\n    <Button @click=\"confirm1($event)\" icon=\"pi pi-check\" label=\"Confirm\" class=\"mr-2\"></Button>\n    <Button @click=\"confirm2($event)\" icon=\"pi pi-times\" label=\"Delete\" class=\"p-button-danger p-button-outlined\"></Button>\n</div>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    methods: {\n        confirm1(event) {\n            this.$confirm.require({\n                target: event.currentTarget,\n                message: 'Are you sure you want to proceed?',\n                icon: 'pi pi-exclamation-triangle',\n                accept: () => {\n                    this.$toast.add({severity:'info', summary:'Confirmed', detail:'You have accepted', life: 3000});\n                },\n                reject: () => {\n                    this.$toast.add({severity:'info', summary:'Rejected', detail:'You have rejected', life: 3000});\n                }\n            });\n        },\n        confirm2(event) {\n            this.$confirm.require({\n                target: event.currentTarget,\n                message: 'Do you want to delete this record?',\n                icon: 'pi pi-info-circle',\n                acceptClass: 'p-button-danger',\n                accept: () => {\n                    this.$toast.add({severity:'info', summary:'Confirmed', detail:'Record deleted', life: 3000});\n                },\n                reject: () => {\n                    this.$toast.add({severity:'info', summary:'Rejected', detail:'You have rejected', life: 3000});\n                }\n            });\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>ConfirmPopup</h1>\n        <p>ConfirmPopup displays a confirmation overlay displayed relatively to its target.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <ConfirmPopup></ConfirmPopup>\n\n      <div class=\"card\">\n        <Button @click=\"confirm1($event)\" icon=\"pi pi-check\" label=\"Confirm\" class=\"mr-2\"></Button>\n        <Button\n          @click=\"confirm2($event)\"\n          icon=\"pi pi-times\"\n          label=\"Delete\"\n          class=\"p-button-danger p-button-outlined\"></Button>\n      </div>\n    </div>\n\n    <ConfirmPopupDoc />\n  </div>\n</template>\n\n<script>\nimport ConfirmPopupDoc from '@/doc/confirmpopup/index.vue'\nexport default {\n  methods: {\n    confirm1(event) {\n      this.$confirm.require({\n        target: event.currentTarget,\n        message: 'Are you sure you want to proceed?',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.$toast.add({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 })\n        },\n        reject: () => {\n          this.$toast.add({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 })\n        }\n      })\n    },\n    confirm2(event) {\n      this.$confirm.require({\n        target: event.currentTarget,\n        message: 'Do you want to delete this record?',\n        icon: 'pi pi-info-circle',\n        acceptClass: 'p-button-danger',\n        accept: () => {\n          this.$toast.add({ severity: 'info', summary: 'Confirmed', detail: 'Record deleted', life: 3000 })\n        },\n        reject: () => {\n          this.$toast.add({ severity: 'info', summary: 'Rejected', detail: 'You have rejected', life: 3000 })\n        }\n      })\n    }\n  },\n  components: {\n    'ConfirmPopupDoc': ConfirmPopupDoc\n  }\n}\n</script>\n"],"names":["_sfc_main","Documentation","SourceCode","event","ConfirmPopupDoc"],"mappings":"6LAoNA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,UAAA,CACA,MAAA,gNAUA,EACA,WAAA,CACA,MAAA,gEAGA,EACA,SAAA,CACA,MAAA,qHAKA,EACA,UAAA,CACA,MAAA,4iBAmBA,EACA,sBAAA,CACA,MAAA,yHASA,CACA,CACA,CACA,o3LClQAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,uSAQA,EACA,YAAA,CACA,MAAA,mwCAiCA,CACA,CACA,CACA,6dCnDAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCUAF,EAAA,CACA,QAAA,CACA,SAAAG,EAAA,CACA,KAAA,SAAA,QAAA,CACA,OAAAA,EAAA,cACA,QAAA,oCACA,KAAA,6BACA,OAAA,IAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,YAAA,OAAA,oBAAA,KAAA,GAAA,CAAA,CACA,EACA,OAAA,IAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,WAAA,OAAA,oBAAA,KAAA,GAAA,CAAA,CACA,CACA,CAAA,CACA,EACA,SAAAA,EAAA,CACA,KAAA,SAAA,QAAA,CACA,OAAAA,EAAA,cACA,QAAA,qCACA,KAAA,oBACA,YAAA,kBACA,OAAA,IAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,YAAA,OAAA,iBAAA,KAAA,GAAA,CAAA,CACA,EACA,OAAA,IAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,WAAA,OAAA,oBAAA,KAAA,GAAA,CAAA,CACA,CACA,CAAA,CACA,CACA,EACA,WAAA,CACA,gBAAAC,CACA,CACA"}