import{n}from"./app.component-CxwrbeA3.js";import{_ as i}from"./flag_placeholder-BDuXeLXp.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const c={name:"Documentation",data(){return{importCode:{basic:"\nimport CascadeSelect from 'primevue2/cascadeselect';\n        "},baseCode:{basic:'\n<CascadeSelect v-model="selectedCity" :options="countries" optionLabel="cname" optionGroupLabel="name" \n    :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" />\n        '},baseCode2:{basic:"\nexports default {\n	data() {\n        return {\n            selectedCity: null,\n            countries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'Canada',\n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}\n        "},templatingCode:{basic:'\n<CascadeSelect v-model="selectedCity" :options="countries" optionLabel="cname" optionGroupLabel="name" \n    :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem">\n    <template #option="slotProps">\n        <div class="country-item">\n            <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" v-if="slotProps.option.states" />\n            <i class="pi pi-compass mr-2" v-if="slotProps.option.cities"></i>\n            <i class="pi pi-map-marker mr-2" v-if="slotProps.option.cname"></i>\n            <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n        </div>\n    </template>\n</CascadeSelect>\n        '}}}};var s=function(){var e=this,o=e._self._c;return o("div",[o("h5",[e._v("Import")]),o("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),o("h5",[e._v("Getting Started")]),e._m(0),o("DocSectionCode",{attrs:{code:e.baseCode}}),o("DocSectionCode",{attrs:{code:e.baseCode2,importCode:""}}),o("h5",[e._v("Templating")]),e._m(1),o("DocSectionCode",{attrs:{code:e.templatingCode}}),o("h5",[e._v("Properties")]),o("p",[e._v(" Any property as style and class are passed to the main container element. Following are the additional properties to configure the component. ")]),e._m(2),o("h5",[e._v("Events")]),e._m(3),o("h5",[e._v("Slots")]),e._m(4),o("h5",[e._v("Styling")]),o("p",[e._v(" Following is the list of structural style classes, for theming classes visit "),o("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page. ")],1),e._m(5),o("h5",[e._v("Dependencies")]),o("p",[e._v("None.")])],1)},r=[function(){var t=this,e=t._self._c;return e("p",[t._v(" CascadeSelect requires a value to bind and a collection of arbitrary objects with a nested hierarchy. "),e("i",[t._v("optionGroupLabel")]),t._v(" is used for the text of a category and "),e("i",[t._v("optionGroupChildren")]),t._v(" is to define the children of the category. Note that order of the "),e("i",[t._v("optionGroupChildren")]),t._v(" matters and it should correspond to the data hierarchy. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v("Content of an item can be customized with the "),e("i",[t._v("option")]),t._v(" template.")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value of the component.")])]),e("tr",[e("td",[t._v("options")]),e("td",[t._v("array")]),e("td",[t._v("null")]),e("td",[t._v("An array of selectitems to display as the available options.")])]),e("tr",[e("td",[t._v("optionLabel")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the label of an option.")])]),e("tr",[e("td",[t._v("optionValue")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v(" Property name or getter function to use as the value of an option, defaults to the option itself when not defined. ")])]),e("tr",[e("td",[t._v("optionGroupLabel")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the label of an option group.")])]),e("tr",[e("td",[t._v("optionGroupChildren")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to retrieve the items of a group.")])]),e("tr",[e("td",[t._v("placeholder")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Default text to display when no option is selected.")])]),e("tr",[e("td",[t._v("disabled")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When present, it specifies that the component should be disabled.")])]),e("tr",[e("td",[t._v("dataKey")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("A property to uniquely identify an option.")])]),e("tr",[e("td",[t._v("tabindex")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Index of the element in tabbing order.")])]),e("tr",[e("td",[t._v("inputId")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Identifier of the underlying input element.")])]),e("tr",[e("td",[t._v("ariaLabelledBy")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v(" Establishes relationships between the component and label(s) where its value should be one or more element IDs. ")])]),e("tr",[e("td",[t._v("appendTo")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v('Id of the element or "body" for document where the overlay should be appended to.')])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("change")]),e("td",[t._v(" event.originalEvent: Original event "),e("br"),t._v(" event.value: Selected option value ")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("group-change")]),e("td",[t._v(" event.originalEvent: Original event "),e("br"),t._v(" event.value: Selected option group ")]),e("td",[t._v("Callback to invoke when a group changes.")])]),e("tr",[e("td",[t._v("before-show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is shown.")])]),e("tr",[e("td",[t._v("before-hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is hidden.")])]),e("tr",[e("td",[t._v("show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is shown.")])]),e("tr",[e("td",[t._v("hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is hidden.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v(" value: Value of the component "),e("br"),t._v(" placeholder: Placeholder text to show ")])]),e("tr",[e("td",[t._v("option")]),e("td",[t._v("option: Option instance")])]),e("tr",[e("td",[t._v("indicator")]),e("td",[t._v("-")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-cascadeselect")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-cascadeselect-label")]),e("td",[t._v("Element to display label of selected option.")])]),e("tr",[e("td",[t._v("p-cascadeselect-trigger")]),e("td",[t._v("Icon element.")])]),e("tr",[e("td",[t._v("p-cascadeselect-panel")]),e("td",[t._v("Icon element.")])]),e("tr",[e("td",[t._v("p-cascadeselect-items-wrapper")]),e("td",[t._v("Wrapper element of items list.")])]),e("tr",[e("td",[t._v("p-cascadeselect-items")]),e("td",[t._v("List element of items.")])]),e("tr",[e("td",[t._v("p-cascadeselect-item")]),e("td",[t._v("An item in the list.")])])])])])}],l=n(c,s,r,!1,null,null);const d=l.exports,m={name:"SourceCode",data(){return{sourceCode1:{basic:'\n<h5>Basic</h5>\n<CascadeSelect v-model="selectedCity1" :options="countries" optionLabel="cname" optionGroupLabel="name"\n        :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" placeholder="Select a City" />\n\n<h5>Templating</h5>\n<CascadeSelect v-model="selectedCity2" :options="countries" optionLabel="cname" optionGroupLabel="name"\n        :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" placeholder="Select a City">\n    <template #option="slotProps">\n        <div class="country-item">\n            <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" v-if="slotProps.option.states" />\n            <i class="pi pi-compass mr-2" v-if="slotProps.option.cities"></i>\n            <i class="pi pi-map-marker mr-2" v-if="slotProps.option.cname"></i>\n            <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n        </div>\n    </template>\n</CascadeSelect>\n        '},sourceCode2:{basic:"\nexport default {\n    data() {\n        return {\n            selectedCity1: null,\n            selectedCity2: null,\n            countries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'Canada',\n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}\n        "}}}};var p=function(){var e=this,o=e._self._c;return o("div",[e._m(0),o("DocSectionCode",{attrs:{code:e.sourceCode1}}),o("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)},_=[function(){var t=this,e=t._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/cascadeselect",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])])}],v=n(m,p,_,!1,null,null);const u=v.exports,h={components:{Documentation:d,SourceCode:u}};var C=function(){var e=this,o=e._self._c;return o("div",{staticClass:"content-section documentation"},[o("TabView",[o("TabPanel",{attrs:{header:"Documentation"}},[o("Documentation")],1),o("TabPanel",{attrs:{header:"Source"}},[o("SourceCode")],1)],1)],1)},f=[],b=n(h,C,f,!1,null,null);const S=b.exports,g={data(){return{selectedCity1:null,selectedCity2:null,countries:[{name:"Australia",code:"AU",states:[{name:"New South Wales",cities:[{cname:"Sydney",code:"A-SY"},{cname:"Newcastle",code:"A-NE"},{cname:"Wollongong",code:"A-WO"}]},{name:"Queensland",cities:[{cname:"Brisbane",code:"A-BR"},{cname:"Townsville",code:"A-TO"}]}]},{name:"Canada",code:"CA",states:[{name:"Quebec",cities:[{cname:"Montreal",code:"C-MO"},{cname:"Quebec City",code:"C-QU"}]},{name:"Ontario",cities:[{cname:"Ottawa",code:"C-OT"},{cname:"Toronto",code:"C-TO"}]}]},{name:"United States",code:"US",states:[{name:"California",cities:[{cname:"Los Angeles",code:"US-LA"},{cname:"San Diego",code:"US-SD"},{cname:"San Francisco",code:"US-SF"}]},{name:"Florida",cities:[{cname:"Jacksonville",code:"US-JA"},{cname:"Miami",code:"US-MI"},{cname:"Tampa",code:"US-TA"},{cname:"Orlando",code:"US-OR"}]},{name:"Texas",cities:[{cname:"Austin",code:"US-AU"},{cname:"Dallas",code:"US-DA"},{cname:"Houston",code:"US-HO"}]}]}]}},components:{CascadeSelectDoc:S}};var y=function(){var e=this,o=e._self._c;return o("div",[o("div",{staticClass:"content-section introduction"},[e._m(0),o("AppInputStyleSwitch")],1),o("div",{staticClass:"content-section implementation"},[o("div",{staticClass:"card"},[o("h5",[e._v("Basic")]),o("CascadeSelect",{staticStyle:{minWidth:"14rem"},attrs:{options:e.countries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"],placeholder:"Select a City"},model:{value:e.selectedCity1,callback:function(a){e.selectedCity1=a},expression:"selectedCity1"}}),o("h5",[e._v("Templating")]),o("CascadeSelect",{staticStyle:{minWidth:"14rem"},attrs:{options:e.countries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"],placeholder:"Select a City"},scopedSlots:e._u([{key:"option",fn:function(a){return[o("div",{staticClass:"country-item"},[a.option.states?o("img",{class:"flag flag-"+a.option.code.toLowerCase(),attrs:{src:i}}):e._e(),a.option.cities?o("i",{staticClass:"pi pi-compass mr-2"}):e._e(),a.option.cname?o("i",{staticClass:"pi pi-map-marker mr-2"}):e._e(),o("span",[e._v(e._s(a.option.cname||a.option.name))])])]}}]),model:{value:e.selectedCity2,callback:function(a){e.selectedCity2=a},expression:"selectedCity2"}})],1)]),o("CascadeSelectDoc")],1)},A=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"feature-intro"},[e("h1",[t._v("CascadeSelect")]),e("p",[t._v("CascadeSelect displays a nested structure of options.")])])}],U=n(g,y,A,!1,null,null);const G=U.exports;export{G as default};
//# sourceMappingURL=index-BeAJi2so.js.map
