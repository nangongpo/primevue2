System.register(["./app.component-legacy-cLUjg6K2.js","./resize-observer-polyfill-legacy-0iJwNYH9.js","./app.fullcalendar-legacy-DHW3cqgj.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-DJ-X2bns.js"],(function(e,n){"use strict";var t;return{setters:[function(e){t=e.n},null,null,null,null],execute:function(){var n=t({data:function(){return{sourceCode1:{basic:'\n<TreeTable :value="nodes" :paginator="true" :rows="10">\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column field="size" header="Size"></Column>\n    <Column field="type" header="Type"></Column>\n</TreeTable>\n        '},sourceCode2:{basic:"\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    created() {\n        let files = [];\n        for(let i = 0; i < 50; i++) {\n            let node = {\n                key: i,\n                data: {\n                    name: 'Item ' + i,\n                    size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n                    type: 'Type ' + i\n                },\n                children: [\n                    {\n                        key: i + ' - 0',\n                        data: {\n                            name: 'Item ' + i + ' - 0',\n                            size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n                            type: 'Type ' + i\n                        }\n                    }\n                ]\n            };\n\n            files.push(node);\n        }\n\n        this.nodes = files;\n    }\n}\n        "}}}},(function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section documentation"},[n("TabView",[n("TabPanel",{attrs:{header:"Source"}},[n("DocSectionCode",{attrs:{code:e.sourceCode1}}),n("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)],1)],1)}),[],!1,null,null).exports;e("default",t({data:function(){return{nodes:null}},created:function(){for(var e=[],n=0;n<50;n++){var t={key:n,data:{name:"Item "+n,size:Math.floor(1e3*Math.random())+1+"kb",type:"Type "+n},children:[{key:n+" - 0",data:{name:"Item "+n+" - 0",size:Math.floor(1e3*Math.random())+1+"kb",type:"Type "+n}}]};e.push(t)}this.nodes=e},components:{TreeTablePaginatorDoc:n}},(function(){var e=this,n=e._self._c;return n("div",[e._m(0),n("div",{staticClass:"content-section implementation"},[n("div",{staticClass:"card"},[n("TreeTable",{attrs:{value:e.nodes,paginator:!0,rows:10}},[n("Column",{attrs:{field:"name",header:"Name",expander:!0}}),n("Column",{attrs:{field:"size",header:"Size"}}),n("Column",{attrs:{field:"type",header:"Type"}})],1)],1)]),n("TreeTablePaginatorDoc")],1)}),[function(){var e=this,n=e._self._c;return n("div",{staticClass:"content-section introduction"},[n("div",{staticClass:"feature-intro"},[n("h1",[e._v("TreeTable "),n("span",[e._v("Paginator")])]),n("p",[e._v("Pagination is enabled by setting paginator property to true and defining the rows attribute as the number of root level nodes per page.")])])])}],!1,null,null).exports)}}}));
//# sourceMappingURL=TreeTablePaginatorDemo-legacy-BT93YVNW.js.map
