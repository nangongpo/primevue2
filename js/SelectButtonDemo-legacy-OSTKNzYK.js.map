{"version":3,"file":"SelectButtonDemo-legacy-OSTKNzYK.js","sources":["../../src/doc/selectbutton/Documentation.vue","../../src/doc/selectbutton/SourceCode.vue","../../src/doc/selectbutton/index.vue","../../src/views/selectbutton/SelectButtonDemo.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      SelectButton requires a value to bind and a collection of arbitrary\n      objects along with the <i>optionLabel</i> property to specify the label\n      property of the option.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Multiple</h5>\n    <p>\n      SelectButton allows selecting only one item by default and setting\n      <i>multiple</i> option enables choosing more than one item. In multiple\n      case, model property should be an array.\n    </p>\n    <DocSectionCode :code=\"multipleCode\" />\n\n    <h5>Templating</h5>\n    <p>\n      Label of an option is used as the display text of an item by default, for\n      custom content support define an <i>option</i> template that gets the\n      option instance as a parameter.\n    </p>\n    <DocSectionCode :code=\"templatingCode\" />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element.\n      Following are the additional properties to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>options</td>\n            <td>array</td>\n            <td>null</td>\n            <td>\n              An array of selectitems to display as the available options.\n            </td>\n          </tr>\n          <tr>\n            <td>optionLabel</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the label of an option.\n            </td>\n          </tr>\n          <tr>\n            <td>optionValue</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the value of an option,\n              defaults to the option itself when not defined.\n            </td>\n          </tr>\n          <tr>\n            <td>optionDisabled</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the disabled flag of an\n              option, defaults to false when not defined.\n            </td>\n          </tr>\n          <tr>\n            <td>multiple</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When specified, allows selecting multiple values.</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>\n              When present, it specifies that the element should be disabled.\n            </td>\n          </tr>\n          <tr>\n            <td>dataKey</td>\n            <td>string</td>\n            <td>null</td>\n            <td>A property to uniquely identify an option.</td>\n          </tr>\n          <tr>\n            <td>ariaLabelledBy</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Establishes relationships between the component and label(s) where\n              its value should be one or more element IDs.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>input</td>\n            <td>\n              event: Single value or an array of values that are selected.\n            </td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>focus</td>\n            <td>event: Browser event</td>\n            <td>Callback to invoke on focus.</td>\n          </tr>\n          <tr>\n            <td>blur</td>\n            <td>event: Browser event</td>\n            <td>Callback to invoke on blur.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>option</td>\n            <td>\n              option: Option instance<br />\n              index: Index of the option\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport SelectButton from 'primevue2/selectbutton';\n        `\n      },\n      baseCode: {\n        basic: `\n<SelectButton v-model=\"selectedCity\" :options=\"cities\" optionLabel=\"name\" />\n        `\n      },\n      baseCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tselectedCity: null,\n\t\t\tcities: [\n\t\t\t\t{name: 'London', code: 'LND'},\n\t\t\t\t{name: 'Paris', code: 'PRS'},\n\t\t\t\t{name: 'Rome', code: 'RM'}\n\t\t\t]\n\t\t}\n\t}\n}\n        `\n      },\n      multipleCode: {\n        basic: `\n<SelectButton v-model=\"selectedCity\" :options=\"cities\" optionLabel=\"brand\" :multiple=\"true\" />\n        `\n      },\n      templatingCode: {\n        basic: `\n<SelectButton v-model=\"selectedCar\" :options=\"cars\" optionLabel=\"brand\">\n\t<template #option=\"slotProps\">\n        <div class=\"car-option\">\n            <img :alt=\"slotProps.option.brand\" :src=\"'demo/images/car/' + slotProps.option.brand + '.png'\" />\n            <div>{{slotProps.option.brand}}</div>\n        </div>\n\t</template>\n</SelectButton>\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/selectbutton\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h5>Single Selection</h5>\n<SelectButton v-model=\"value1\" :options=\"options\" />\n\n<h5>Multiple Selection</h5>\n<SelectButton v-model=\"value2\" :options=\"paymentOptions\" optionLabel=\"name\" multiple />\n\n<h5>Custom Content</h5>\n<SelectButton v-model=\"value3\" :options=\"justifyOptions\" dataKey=\"value\">\n    <template #option=\"slotProps\">\n        <i :class=\"slotProps.option.icon\"></i>\n    </template>\n</SelectButton>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    data() {\n        return {\n            value1: 'Off',\n            value2: null,\n            value3: null,\n            options: ['Off', 'On'],\n            paymentOptions: [\n                {name: 'Option 1', value: 1},\n                {name: 'Option 2', value: 2},\n                {name: 'Option 3', value: 3}\n            ],\n            justifyOptions: [\n                {icon: 'pi pi-align-left', value: 'left'},\n                {icon: 'pi pi-align-right', value: 'Right'},\n                {icon: 'pi pi-align-center', value: 'Center'},\n                {icon: 'pi pi-align-justify', value: 'Justify'}\n            ]\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>SelectButton</h1>\n                <p>SelectButton is a form component to choose a value from a list of options using button elements.</p>\n            </div>\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Single Selection</h5>\n                <SelectButton v-model=\"value1\" :options=\"options\" />\n\n                <h5>Multiple Selection</h5>\n                <SelectButton v-model=\"value2\" :options=\"paymentOptions\" optionLabel=\"name\" multiple />\n\n                <h5>Custom Content</h5>\n                <SelectButton v-model=\"value3\" :options=\"justifyOptions\" dataKey=\"value\">\n                    <template #option=\"slotProps\">\n                        <i :class=\"slotProps.option.icon\"></i>\n                    </template>\n                </SelectButton>\n            </div>\n        </div>\n\n        <SelectButtonDoc/>\n    </div>\n</template>\n\n<script>\nimport SelectButtonDoc from '@/doc/selectbutton/index.vue'\n\nexport default {\n  data() {\n    return {\n      value1: 'Off',\n      value2: null,\n      value3: null,\n      options: ['Off', 'On'],\n      paymentOptions: [\n        {name: 'Option 1', value: 1},\n        {name: 'Option 2', value: 2},\n        {name: 'Option 3', value: 3}\n      ],\n      justifyOptions: [\n        {icon: 'pi pi-align-left', value: 'left'},\n        {icon: 'pi pi-align-right', value: 'Right'},\n        {icon: 'pi pi-align-center', value: 'Center'},\n        {icon: 'pi pi-align-justify', value: 'Justify'}]\n    }\n  },\n  components: {\n    'SelectButtonDoc': SelectButtonDoc\n  }\n}\n</script>\n"],"names":["name","data","importCode","basic","baseCode","baseCode2","multipleCode","templatingCode","sourceCode1","sourceCode2","components","Documentation","SourceCode","value1","value2","value3","options","paymentOptions","value","justifyOptions","icon","SelectButtonDoc"],"mappings":"0TAkLA,QAAA,CACAA,KAAA,gBACAC,KAAAA,WACA,MAAA,CACAC,WAAA,CACAC,MAAA,kEAIAC,SAAA,CACAD,MAAA,4FAIAE,UAAA,CACAF,MAcA,iPACAG,aAAA,CACAH,MAGA,8GACAI,eAAA,CACAJ,wXAYA,k3IClNA,CACAH,KAAA,aACAC,KAAAA,WACA,MAAA,CACAO,YAAA,CACAL,MAcA,mbACAM,YAAA,CACAN,MAuBA,grBAEA,ucC9CA,CACAO,WAAA,CAAAC,cAAAA,EAAAC,WAAAA,kSCgBA,CACAX,KAAAA,WACA,MAAA,CACAY,OAAA,MACAC,OAAA,KACAC,OAAA,KACAC,QAAA,CAAA,MAAA,MACAC,eAAA,CACA,CAAAjB,KAAA,WAAAkB,MAAA,GACA,CAAAlB,KAAA,WAAAkB,MAAA,GACA,CAAAlB,KAAA,WAAAkB,MAAA,IAEAC,eAAA,CACA,CAAAC,KAAA,mBAAAF,MAAA,QACA,CAAAE,KAAA,oBAAAF,MAAA,SACA,CAAAE,KAAA,qBAAAF,MAAA,UACA,CAAAE,KAAA,sBAAAF,MAAA,YAEA,EACAR,WAAA,CACAW,gBAAAA"}