{"version":3,"file":"GridLines-BKH4ErBQ.js","sources":["../../src/doc/datatable/GridLines.vue","../../src/views/datatable/GridLines.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"baseCode\" />\n        <DocSectionCode :code=\"baseCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\n<DataTable :value=\"products\" showGridlines responsiveLayout=\"scroll\">\n    <template #header>\n        Header\n    </template>\n    <Column field=\"code\" header=\"Code\"></Column>\n    <Column field=\"name\" header=\"Name\"></Column>\n    <Column field=\"category\" header=\"Category\"></Column>\n    <Column field=\"quantity\" header=\"Quantity\"></Column>\n    <template #footer>\n        Footer\n    </template>\n</DataTable>\n        `\n      },\n      baseCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>DataTable <span>GridLines</span></h1>\n        <p>\n          Enabling <b>showGridlines</b> displays borders between cells. Note: Some themes may always display gridlines\n          by design.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <DataTable :value=\"products\" showGridlines responsiveLayout=\"scroll\">\n          <template #header> Header </template>\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"quantity\" header=\"Quantity\"></Column>\n          <template #footer> Footer </template>\n        </DataTable>\n      </div>\n    </div>\n\n    <DataTableGridLinesDoc />\n  </div>\n</template>\n\n<script>\nimport DataTableGridLinesDoc from '@/doc/datatable/GridLines.vue'\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  components: { DataTableGridLinesDoc },\n  data() {\n    return {\n      products: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  }\n}\n</script>\n"],"names":["_sfc_main","DataTableGridLinesDoc","ProductService","data"],"mappings":"mPAYA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,CACA,MAAA,2aAcA,EACA,UAAA,CACA,MAAA,mYAkBA,CACA,CACA,CACA,qUCpBAA,EAAA,CACA,WAAA,CAAA,sBAAAC,CAAA,EACA,MAAA,CACA,MAAA,CACA,SAAA,IACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAC,CACA,EACA,SAAA,CACA,KAAA,eAAA,iBAAA,EAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,CACA"}