import{n}from"./app.component-BAbvz7X_.js";import{_ as l}from"./flag_placeholder-BDuXeLXp.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const s={name:"Documentation",data(){return{importCode:{basic:"\nimport MultiSelect from 'primevue2/multiselect';\n        "},baseCode:{basic:'\n<MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" />\n        '},baseCode2:{basic:"\ndata() {\n	return {\n		selectedCars: null,\n		cars: [\n			{brand: 'Audi', value: 'Audi'},\n			{brand: 'BMW', value: 'BMW'},\n			{brand: 'Fiat', value: 'Fiat'},\n			{brand: 'Honda', value: 'Honda'},\n			{brand: 'Jaguar', value: 'Jaguar'},\n			{brand: 'Mercedes', value: 'Mercedes'},\n			{brand: 'Renault', value: 'Renault'},\n			{brand: 'Volkswagen', value: 'Volkswagen'},\n			{brand: 'Volvo', value: 'Volvo'}\n		]\n	}\n}\n        "},chipsDisplayCode:{basic:'\n<MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" display="chip"/>\n        '},customContentCode:{basic:'\n<MultiSelect v-model="selectedCars2" :options="cars" optionLabel="brand" placeholder="Select a Car">\n	<template #value="slotProps">\n		<div class="p-multiselect-car-token" v-for="option of slotProps.value" :key="option.brand">\n			<img :alt="option.brand" :src="\'demo/images/car/\' + option.brand + \'.png\'" />\n			<span>{{option.brand}}</span>\n		</div>\n		<template v-if="!slotProps.value || slotProps.value.length === 0">\n            Select Brands\n        <template>\n	</template>\n	<template #option="slotProps">\n		<div class="p-multiselect-car-option">\n			<img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n			<span>{{slotProps.option.brand}}</span>\n		</div>\n	</template>\n</MultiSelect>\n        '},filterCode:{basic:'\n<MultiSelect v-model="selectedCars" :options="cars" :filter="true" optionLabel="brand" placeholder="Select Brands"/>\n        '}}}};var r=function(){var e=this,o=e._self._c;return o("div",[o("h5",[e._v("Import")]),o("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),o("h5",[e._v("Getting Started")]),e._m(0),o("DocSectionCode",{attrs:{code:e.baseCode}}),o("DocSectionCode",{attrs:{code:e.baseCode2,importCode:""}}),o("h5",[e._v("Chips Display")]),e._m(1),o("DocSectionCode",{attrs:{code:e.chipsDisplayCode}}),o("h5",[e._v("Custom Content")]),e._m(2),e._m(3),o("DocSectionCode",{attrs:{code:e.customContentCode}}),o("h5",[e._v("Filter")]),e._m(4),o("DocSectionCode",{attrs:{code:e.filterCode}}),o("h5",[e._v("Properties")]),o("p",[e._v(" Any property as style and class are passed to the main container element. Following are the additional properties to configure the component. ")]),e._m(5),o("h5",[e._v("Events")]),e._m(6),o("h5",[e._v("Methods")]),e._m(7),o("h5",[e._v("Slots")]),e._m(8),o("h5",[e._v("Styling")]),o("p",[e._v(" Following is the list of structural style classes, for theming classes visit "),o("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page. ")],1),e._m(9),o("h5",[e._v("Dependencies")]),o("p",[e._v("None.")])],1)},d=[function(){var t=this,e=t._self._c;return e("p",[t._v(" MultiSelect requires a value to bind and a collection of arbitrary objects along with the "),e("i",[t._v("optionLabel")]),t._v(" property to specify the label property of the option. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the "),e("i",[t._v("display")]),t._v(" property to visualize the items as tokens. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" Label of an option is used as the display text of an item by default, for custom content support define an "),e("i",[t._v("option")]),t._v(" template that gets the option instance as a parameter. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" In addition the "),e("i",[t._v("value")]),t._v(" template can be used to customize the selected values display instead of the default comma separated list. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable the "),e("i",[t._v("filter")]),t._v(" property. ")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value of the component.")])]),e("tr",[e("td",[t._v("options")]),e("td",[t._v("array")]),e("td",[t._v("null")]),e("td",[t._v("An array of selectitems to display as the available options.")])]),e("tr",[e("td",[t._v("optionLabel")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the label of an option.")])]),e("tr",[e("td",[t._v("optionValue")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v(" Property name or getter function to use as the value of an option, defaults to the option itself when not defined. ")])]),e("tr",[e("td",[t._v("optionDisabled")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v(" Property name or getter function to use as the disabled flag of an option, defaults to false when not defined. ")])]),e("tr",[e("td",[t._v("scrollHeight")]),e("td",[t._v("string")]),e("td",[t._v("200px")]),e("td",[t._v("Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.")])]),e("tr",[e("td",[t._v("placeholder")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Label to display when there are no selections.")])]),e("tr",[e("td",[t._v("disabled")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When present, it specifies that the component should be disabled.")])]),e("tr",[e("td",[t._v("filter")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When specified, displays an input field to filter the items on keyup.")])]),e("tr",[e("td",[t._v("tabindex")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Index of the element in tabbing order.")])]),e("tr",[e("td",[t._v("inputId")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Identifier of the underlying input element.")])]),e("tr",[e("td",[t._v("dataKey")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("A property to uniquely identify an option.")])]),e("tr",[e("td",[t._v("filterPlaceholder")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Placeholder text to show when filter input is empty.")])]),e("tr",[e("td",[t._v("filterLocale")]),e("td",[t._v("string")]),e("td",[t._v("undefined")]),e("td",[t._v("Locale to use in filtering. The default locale is the host environment's current locale.")])]),e("tr",[e("td",[t._v("ariaLabelledBy")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v(" Establishes relationships between the component and label(s) where its value should be one or more element IDs. ")])]),e("tr",[e("td",[t._v("appendTo")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v('Id of the element or "body" for document where the overlay should be appended to.')])]),e("tr",[e("td",[t._v("emptyFilterMessage")]),e("td",[t._v("string")]),e("td",[t._v("No results found")]),e("td",[t._v("Text to display when filtering does not return any results.")])]),e("tr",[e("td",[t._v("display")]),e("td",[t._v("string")]),e("td",[t._v("comma")]),e("td",[t._v('Defines how the selected items are displayed, valid values are "comma" and "chip".')])]),e("tr",[e("td",[t._v("selectionLimit")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Maximum number of selectable items.")])]),e("tr",[e("td",[t._v("showToggleAll")]),e("td",[t._v("boolean")]),e("td",[t._v("true")]),e("td",[t._v("Whether to show the header checkbox to toggle the selection of all items at once.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("change")]),e("td",[t._v(" event.originalEvent: Original event "),e("br"),t._v(" event.value: Selected option value ")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("input")]),e("td",[t._v("value: New value")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("before-show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is shown.")])]),e("tr",[e("td",[t._v("before-hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is hidden.")])]),e("tr",[e("td",[t._v("show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is shown.")])]),e("tr",[e("td",[t._v("hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is hidden.")])]),e("tr",[e("td",[t._v("filter")]),e("td",[t._v(" event.originalEvent: Original event "),e("br"),t._v(" event.value: Filter value ")]),e("td",[t._v("Callback to invoke on filter input.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("show")]),e("td",[t._v("-")]),e("td",[t._v("Shows the overlay.")])]),e("tr",[e("td",[t._v("hide")]),e("td",[t._v("-")]),e("td",[t._v("Hides the overlay.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v(" value: Value of the component "),e("br"),t._v(" placeholder: Placeholder prop value ")])]),e("tr",[e("td",[t._v("options")]),e("td",[t._v(" option: Option instance "),e("br"),t._v(" index: Index of the option ")])]),e("tr",[e("td",[t._v("indicator")]),e("td",[t._v("-")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-multiselect")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-multiselect-label-container")]),e("td",[t._v("Container of the label to display selected items.")])]),e("tr",[e("td",[t._v("p-multiselect-label-container")]),e("td",[t._v("Label to display selected items.")])]),e("tr",[e("td",[t._v("p-multiselect-trigger")]),e("td",[t._v("Dropdown button.")])]),e("tr",[e("td",[t._v("p-multiselect-filter-container")]),e("td",[t._v("Container of filter input.")])]),e("tr",[e("td",[t._v("p-multiselect-panel")]),e("td",[t._v("Overlay panel for items.")])]),e("tr",[e("td",[t._v("p-multiselect-items")]),e("td",[t._v("List container of items.")])]),e("tr",[e("td",[t._v("p-multiselect-item")]),e("td",[t._v("An item in the list.")])])])])])}],c=n(s,r,d,!1,null,null);const v=c.exports,_={name:"SourceCode",data(){return{sourceCode1:{basic:'\n<h5>Basic</h5>\n<MultiSelect v-model="selectedCities1" :options="cities" optionLabel="name" placeholder="Select a City" />\n\n<h5>Chips</h5>\n<MultiSelect v-model="selectedCities2" :options="cities" optionLabel="name" placeholder="Select a City" display="chip"/>\n\n<h5>Advanced with Templating and Filtering</h5>\n<MultiSelect v-model="selectedCountries" :options="countries" optionLabel="name" placeholder="Select Countries" :filter="true" class="multiselect-custom">\n    <template #value="slotProps">\n        <div class="country-item country-item-value" v-for="option of slotProps.value" :key="option.code">\n            <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + option.code.toLowerCase()" />\n            <div>{{option.name}}</div>\n        </div>\n        <template v-if="!slotProps.value || slotProps.value.length === 0">\n            Select Countries\n        </template>\n    </template>\n    <template #option="slotProps">\n        <div class="country-item">\n            <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" />\n            <div>{{slotProps.option.name}}</div>\n        </div>\n    </template>\n</MultiSelect>\n        '},sourceCode2:{basic:"\nexport default {\n    data() {\n        return {\n            selectedCities: null,\n            selectedCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ]\n        }\n    }\n}\n        "},sourceCode3:{basic:"\n.p-multiselect {\n    min-width: 15rem;\n}\n\n:deep(.multiselect-custom) {\n    .p-multiselect-label:not(.p-placeholder) {\n        padding-top: .25rem;\n        padding-bottom: .25rem;\n    }\n\n    .country-item-value {\n        padding: .25rem .5rem;\n        border-radius: 3px;\n        display: inline-flex;\n        margin-right: .5rem;\n        background-color: var(--primary-color);\n        color: var(--primary-color-text);\n\n        img.flag {\n            width: 17px;\n        }\n    }\n}\n        "}}}};var p=function(){var e=this,o=e._self._c;return o("div",[e._m(0),o("DocSectionCode",{attrs:{code:e.sourceCode1}}),o("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}}),o("DocSectionCode",{attrs:{code:e.sourceCode3,importStyle:""}})],1)},u=[function(){var t=this,e=t._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/multiselect",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])])}],m=n(_,p,u,!1,null,null);const h=m.exports,f={components:{Documentation:v,SourceCode:h}};var b=function(){var e=this,o=e._self._c;return o("div",{staticClass:"content-section documentation"},[o("TabView",[o("TabPanel",{attrs:{header:"Documentation"}},[o("Documentation")],1),o("TabPanel",{attrs:{header:"Source"}},[o("SourceCode")],1)],1)],1)},C=[],g=n(f,b,C,!1,null,null);const y=g.exports,S={data(){return{selectedCities1:null,selectedCities2:null,selectedCountries:null,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}]}},components:{MultiSelectDoc:y}};var w=function(){var e=this,o=e._self._c;return o("div",[o("div",{staticClass:"content-section introduction"},[e._m(0),o("AppInputStyleSwitch")],1),o("div",{staticClass:"content-section implementation"},[o("div",{staticClass:"card"},[o("h5",[e._v("Basic")]),o("MultiSelect",{attrs:{options:e.cities,optionLabel:"name",placeholder:"Select a City"},model:{value:e.selectedCities1,callback:function(a){e.selectedCities1=a},expression:"selectedCities1"}}),o("h5",[e._v("Chips")]),o("MultiSelect",{attrs:{options:e.cities,optionLabel:"name",placeholder:"Select a City",display:"chip"},model:{value:e.selectedCities2,callback:function(a){e.selectedCities2=a},expression:"selectedCities2"}}),o("h5",[e._v("Advanced with Templating and Filtering")]),o("MultiSelect",{staticClass:"multiselect-custom",attrs:{options:e.countries,optionLabel:"name",placeholder:"Select Countries",filter:!0},scopedSlots:e._u([{key:"value",fn:function(a){return[e._l(a.value,function(i){return o("div",{key:i.code,staticClass:"country-item country-item-value"},[o("img",{class:"flag flag-"+i.code.toLowerCase(),attrs:{src:l}}),o("div",[e._v(e._s(i.name))])])}),!a.value||a.value.length===0?[e._v(" Select Countries ")]:e._e()]}},{key:"option",fn:function(a){return[o("div",{staticClass:"country-item"},[o("img",{class:"flag flag-"+a.option.code.toLowerCase(),attrs:{src:l}}),o("div",[e._v(e._s(a.option.name))])])]}}]),model:{value:e.selectedCountries,callback:function(a){e.selectedCountries=a},expression:"selectedCountries"}})],1)]),o("MultiSelectDoc")],1)},k=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"feature-intro"},[e("h1",[t._v("MultiSelect")]),e("p",[t._v("MultiSelect is used to multiple values from a list of options.")])])}],D=n(S,w,k,!1,null,"bfb54f4f");const N=D.exports;export{N as default};
//# sourceMappingURL=index-cYmhYxAu.js.map
