{"version":3,"file":"index-WS0EkNep.js","sources":["../../src/doc/dropdown/Documentation.vue","../../src/doc/dropdown/SourceCode.vue","../../src/doc/dropdown/index.vue","../../src/views/dropdown/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      Dropdown requires a value to bind and a collection of arbitrary objects along with the <i>optionLabel</i> property\n      to specify the label property of the option.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Placeholder</h5>\n    <p>\n      Common pattern is providing an empty option as the placeholder when using native selects, however Dropdown has\n      built-in support using the placeholder option so it is suggested to use it instead of creating an empty option.\n    </p>\n\n    <h5>Filtering</h5>\n    <p>Options can be filtered using an input field in the overlay by enabling the <i>filter</i> property.</p>\n    <DocSectionCode :code=\"filteringCode\" />\n\n    <h5>Custom Content</h5>\n    <p>\n      Label of an option is used as the display text of an item by default, for custom content support define an\n      <i>option</i> template that gets the option instance as a parameter.\n    </p>\n    <p>In addition the <i>value</i> template can be used to customize the selected value.</p>\n    <DocSectionCode :code=\"customContentCode\" />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>options</td>\n            <td>array</td>\n            <td>null</td>\n            <td>An array of selectitems to display as the available options.</td>\n          </tr>\n          <tr>\n            <td>optionLabel</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>Property name or getter function to use as the label of an option.</td>\n          </tr>\n          <tr>\n            <td>optionValue</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the value of an option, defaults to the option itself when not\n              defined.\n            </td>\n          </tr>\n          <tr>\n            <td>optionDisabled</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the disabled flag of an option, defaults to false when not\n              defined.\n            </td>\n          </tr>\n          <tr>\n            <td>scrollHeight</td>\n            <td>string</td>\n            <td>200px</td>\n            <td>Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</td>\n          </tr>\n          <tr>\n            <td>filter</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When specified, displays an input field to filter the items on keyup.</td>\n          </tr>\n          <tr>\n            <td>filterPlaceholder</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Placeholder text to show when filter input is empty.</td>\n          </tr>\n          <tr>\n            <td>filterLocale</td>\n            <td>string</td>\n            <td>undefined</td>\n            <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\n          </tr>\n          <tr>\n            <td>editable</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>\n              When present, custom value instead of predefined options can be entered using the editable input field.\n            </td>\n          </tr>\n          <tr>\n            <td>placeholder</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Default text to display when no option is selected.</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When present, it specifies that the component should be disabled.</td>\n          </tr>\n          <tr>\n            <td>dataKey</td>\n            <td>string</td>\n            <td>null</td>\n            <td>A property to uniquely identify an option.</td>\n          </tr>\n          <tr>\n            <td>showClear</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When enabled, a clear icon is displayed to clear the value.</td>\n          </tr>\n          <tr>\n            <td>tabindex</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Index of the element in tabbing order.</td>\n          </tr>\n          <tr>\n            <td>inputId</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Identifier of the underlying input element.</td>\n          </tr>\n          <tr>\n            <td>ariaLabelledBy</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Establishes relationships between the component and label(s) where its value should be one or more element\n              IDs.\n            </td>\n          </tr>\n          <tr>\n            <td>appendTo</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Id of the element or \"body\" for document where the overlay should be appended to.</td>\n          </tr>\n          <tr>\n            <td>emptyFilterMessage</td>\n            <td>string</td>\n            <td>No results found</td>\n            <td>Text to display when filtering does not return any results.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>change</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Selected option value\n            </td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>input</td>\n            <td>value: New value</td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>before-show</td>\n            <td>-</td>\n            <td>Callback to invoke before the overlay is shown.</td>\n          </tr>\n          <tr>\n            <td>before-hide</td>\n            <td>-</td>\n            <td>Callback to invoke before the overlay is hidden.</td>\n          </tr>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Callback to invoke when the overlay is shown.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Callback to invoke when the overlay is hidden.</td>\n          </tr>\n          <tr>\n            <td>filter</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Filter value\n            </td>\n            <td>Callback to invoke on filter input.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Methods</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Shows the overlay.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Hides the overlay.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>option</td>\n            <td>\n              option: Option instance <br />\n              index: Index of the option\n            </td>\n          </tr>\n          <tr>\n            <td>value</td>\n            <td>\n              value: Value of the component <br />\n              placeholder: Placeholder prop value\n            </td>\n          </tr>\n          <tr>\n            <td>indicator</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-dropdown</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-label</td>\n            <td>Element to display label of selected option.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-trigger</td>\n            <td>Icon element.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-panel</td>\n            <td>Icon element.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-items-wrapper</td>\n            <td>Wrapper element of items list.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-items</td>\n            <td>List element of items.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-item</td>\n            <td>An item in the list.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-filter-container</td>\n            <td>Container of filter input.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-filter</td>\n            <td>Filter element.</td>\n          </tr>\n          <tr>\n            <td>p-dropdown-open</td>\n            <td>Container element when overlay is visible.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Dropdown from 'primevue2/dropdown';\n        `\n      },\n      baseCode: {\n        basic: `\n<Dropdown v-model=\"selectedCity\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select a City\" />\n        `\n      },\n      baseCode2: {\n        basic: `\ndata() {\n\treturn {\n\t\tselectedCity: null,\n\t\tcities: [\n\t\t\t{name: 'New York', code: 'NY'},\n\t\t\t{name: 'Rome', code: 'RM'},\n\t\t\t{name: 'London', code: 'LDN'},\n\t\t\t{name: 'Istanbul', code: 'IST'},\n\t\t\t{name: 'Paris', code: 'PRS'}\n\t\t]\n\t}\n}\n        `\n      },\n      filteringCode: {\n        basic: `\n<Dropdown v-model=\"selectedCar\" :options=\"cars\" optionLabel=\"brand\" placeholder=\"Select a Car\" :filter=\"true\" filterPlaceholder=\"Find Car\"/>\n        `\n      },\n      customContentCode: {\n        basic: `\n<Dropdown v-model=\"selectedCar\" :options=\"cars\" optionLabel=\"brand\" :filter=\"true\" placeholder=\"Select a Car\" :showClear=\"true\">\n\t<template #value=\"slotProps\">\n        <div class=\"p-dropdown-car-value\" v-if=\"slotProps.value\">\n            <img :alt=\"slotProps.value.brand\" :src=\"'demo/images/car/' + slotProps.value.brand + '.png'\" />\n            <span>{{slotProps.value.brand}}</span>\n        </div>\n        <span v-else>\n            {{slotProps.placeholder}}\n        </span>\n    </template>\n    <template #option=\"slotProps\">\n\t\t<div class=\"p-dropdown-car-option\">\n\t\t\t<img :alt=\"slotProps.option.brand\" :src=\"'demo/images/car/' + slotProps.option.brand + '.png'\" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</Dropdown>\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/dropdown\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h5>Basic</h5>\n<Dropdown v-model=\"selectedCity1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select a City\" />\n\n<h5>Editable</h5>\n<Dropdown v-model=\"selectedCity2\" :options=\"cities\" optionLabel=\"name\" :editable=\"true\"/>\n\n<h5>Advanced with Templating, Filtering and Clear Icon</h5>\n<Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :showClear=\"true\">\n    <template #value=\"slotProps\">\n        <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.value.code.toLowerCase()\" />\n            <div>{{slotProps.value.name}}</div>\n        </div>\n        <span v-else>\n            {{slotProps.placeholder}}\n        </span>\n    </template>\n    <template #option=\"slotProps\">\n        <div class=\"country-item\">\n            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" />\n            <div>{{slotProps.option.name}}</div>\n        </div>\n    </template>\n</Dropdown>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    data() {\n        return {\n            selectedCity1: null,\n            selectedCity2: null,\n            selectedCountry: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ]\n        }\n    },\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Dropdown</h1>\n        <p>Dropdown is used to select an item from a list of options.</p>\n      </div>\n      <AppInputStyleSwitch />\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Basic</h5>\n        <Dropdown\n          v-model=\"selectedCity1\"\n          :options=\"cities\"\n          optionLabel=\"name\"\n          optionValue=\"code\"\n          placeholder=\"Select a City\" />\n\n        <h5>Editable</h5>\n        <Dropdown v-model=\"selectedCity2\" :options=\"cities\" optionLabel=\"name\" :editable=\"true\" />\n\n        <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n        <Dropdown\n          v-model=\"selectedCountry\"\n          :options=\"countries\"\n          optionLabel=\"name\"\n          :filter=\"true\"\n          placeholder=\"Select a Country\"\n          :showClear=\"true\">\n          <template #value=\"slotProps\">\n            <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n              <img\n                src=\"../../assets/images/flag_placeholder.png\"\n                :class=\"'flag flag-' + slotProps.value.code.toLowerCase()\" />\n              <div>{{ slotProps.value.name }}</div>\n            </div>\n            <span v-else>\n              {{ slotProps.placeholder }}\n            </span>\n          </template>\n          <template #option=\"slotProps\">\n            <div class=\"country-item\">\n              <img\n                src=\"../../assets/images/flag_placeholder.png\"\n                :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" />\n              <div>{{ slotProps.option.name }}</div>\n            </div>\n          </template>\n        </Dropdown>\n      </div>\n    </div>\n\n    <DropdownDoc />\n  </div>\n</template>\n\n<script>\nimport DropdownDoc from '@/doc/dropdown/index.vue'\n\nexport default {\n  data() {\n    return {\n      selectedCity1: null,\n      selectedCity2: null,\n      selectedCountry: null,\n      cities: [\n        { name: 'New York', code: 1 },\n        { name: 'Rome', code: 2 },\n        { name: 'London', code: 0 },\n        { name: 'Istanbul', code: 4 },\n        { name: 'Paris', code: 5 }\n      ],\n      countries: [\n        { name: 'Australia', code: 'AU' },\n        { name: 'Brazil', code: 'BR' },\n        { name: 'China', code: 'CN' },\n        { name: 'Egypt', code: 'EG' },\n        { name: 'France', code: 'FR' },\n        { name: 'Germany', code: 'DE' },\n        { name: 'India', code: 'IN' },\n        { name: 'Japan', code: 'JP' },\n        { name: 'Spain', code: 'ES' },\n        { name: 'United States', code: 'US' }\n      ]\n    }\n  },\n  components: {\n    'DropdownDoc': DropdownDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.p-dropdown {\n  width: 14rem;\n}\n\n.country-item-value {\n  img.flag {\n    width: 17px;\n  }\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","DropdownDoc"],"mappings":"qPAiWA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,wDAGA,EACA,SAAA,CACA,MAAA,kHAGA,EACA,UAAA,CACA,MAAA,8PAcA,EACA,cAAA,CACA,MAAA,0JAGA,EACA,kBAAA,CACA,MAAA,4wBAmBA,CACA,CACA,CACA,s+RC3YAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,6nCA0BA,EACA,YAAA,CACA,MAAA,q9BA8BA,CACA,CACA,CACA,ydClEAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTC2CAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,cAAA,KACA,cAAA,KACA,gBAAA,KACA,OAAA,CACA,CAAA,KAAA,WAAA,KAAA,CAAA,EACA,CAAA,KAAA,OAAA,KAAA,CAAA,EACA,CAAA,KAAA,SAAA,KAAA,CAAA,EACA,CAAA,KAAA,WAAA,KAAA,CAAA,EACA,CAAA,KAAA,QAAA,KAAA,CAAA,CACA,EACA,UAAA,CACA,CAAA,KAAA,YAAA,KAAA,IAAA,EACA,CAAA,KAAA,SAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,SAAA,KAAA,IAAA,EACA,CAAA,KAAA,UAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,gBAAA,KAAA,IAAA,CACA,CACA,CACA,EACA,WAAA,CACA,YAAAG,CACA,CACA"}