{"version":3,"file":"Filter-DQ9BvlW6.js","sources":["../../src/doc/datatable/Filter.vue","../../src/views/datatable/Filter.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"baseCode\" />\n        <DocSectionCode :code=\"baseCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\n<div class=\"card\">\n    <DataTable :value=\"customers1\" :paginator=\"true\" class=\"p-datatable-customers\" showGridlines :rows=\"10\"\n        dataKey=\"id\" :filters.sync=\"filters1\" filterDisplay=\"menu\" :loading=\"loading1\" responsiveLayout=\"scroll\"\n        :globalFilterFields=\"['name','country.name','representative.name','balance','status']\">\n        <template #header>\n            <div class=\"flex justify-content-between\">\n                <Button type=\"button\" icon=\"pi pi-filter-slash\" label=\"Clear\" class=\"p-button-outlined\" @click=\"clearFilter1()\"/>\n                <span class=\"p-input-icon-left\">\n                    <i class=\"pi pi-search\" />\n                    <InputText v-model=\"filters1['global'].value\" placeholder=\"Keyword Search\" />\n                </span>\n            </div>\n        </template>\n        <template #empty>\n            No customers found.\n        </template>\n        <template #loading>\n            Loading customers data. Please wait.\n        </template>\n        <Column field=\"name\" header=\"Name\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                {{data.name}}\n            </template>\n            <template #filter=\"{filterModel}\">\n                <InputText type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" placeholder=\"Search by name\"/>\n            </template>\n        </Column>\n        <Column header=\"Country\" filterField=\"country.name\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + data.country.code\" width=\"30\" />\n                <span class=\"image-text\">{{data.country.name}}</span>\n            </template>\n            <template #filter=\"{filterModel}\">\n                <InputText type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" placeholder=\"Search by country\"/>\n            </template>\n            <template #filterclear=\"{filterCallback}\">\n                <Button type=\"button\" icon=\"pi pi-times\" @click=\"filterCallback()\" class=\"p-button-secondary\"></Button>\n            </template>\n            <template #filterapply=\"{filterCallback}\">\n                <Button type=\"button\" icon=\"pi pi-check\" @click=\"filterCallback()\" class=\"p-button-success\"></Button>\n            </template>\n            <template #filterfooter>\n                <div class=\"px-3 pt-0 pb-3 text-center font-bold\">Customized Buttons</div>\n            </template>\n        </Column>\n        <Column header=\"Agent\" filterField=\"representative\" :showFilterMatchModes=\"false\" :filterMenuStyle=\"{'width':'14rem'}\" :styles=\"{'min-width':'14rem'}\">\n            <template #body=\"{data}\">\n                <img :alt=\"data.representative.name\" :src=\"'demo/images/avatar/' + data.representative.image\" width=\"32\" style=\"vertical-align: middle\" />\n                <span class=\"image-text\">{{data.representative.name}}</span>\n            </template>\n            <template #filter=\"{filterModel}\">\n                <div class=\"mb-3 font-bold\">Agent Picker</div>\n                <MultiSelect v-model=\"filterModel.value\" :options=\"representatives\" optionLabel=\"name\" placeholder=\"Any\" class=\"p-column-filter\">\n                    <template #option=\"slotProps\">\n                        <div class=\"p-multiselect-representative-option\">\n                            <img :alt=\"slotProps.option.name\" :src=\"'demo/images/avatar/' + slotProps.option.image\" width=\"32\" style=\"vertical-align: middle\" />\n                            <span class=\"image-text\">{{slotProps.option.name}}</span>\n                        </div>\n                    </template>\n                </MultiSelect>\n            </template>\n        </Column>\n        <Column header=\"Date\" filterField=\"date\" dataType=\"date\" :styles=\"{'min-width':'10rem'}\">\n            <template #body=\"{data}\">\n                {{formatDate(data.date)}}\n            </template>\n            <template #filter=\"{filterModel}\">\n                <Calendar v-model=\"filterModel.value\" dateFormat=\"mm/dd/yy\" placeholder=\"mm/dd/yyyy\" />\n            </template>\n        </Column>\n        <Column header=\"Balance\" filterField=\"balance\" dataType=\"numeric\" :styles=\"{'min-width':'10rem'}\">\n            <template #body=\"{data}\">\n                {{formatCurrency(data.balance)}}\n            </template>\n            <template #filter=\"{filterModel}\">\n                <InputNumber v-model=\"filterModel.value\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n            </template>\n        </Column>\n        <Column field=\"status\" header=\"Status\" :filterMenuStyle=\"{'width':'14rem'}\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                <span :class=\"'customer-badge status-' + data.status\">{{data.status}}</span>\n            </template>\n            <template #filter=\"{filterModel}\">\n                <Dropdown v-model=\"filterModel.value\" :options=\"statuses\" placeholder=\"Any\" class=\"p-column-filter\" :showClear=\"true\">\n                    <template #value=\"slotProps\">\n                        <span :class=\"'customer-badge status-' + slotProps.value\" v-if=\"slotProps.value\">{{slotProps.value}}</span>\n                        <span v-else>{{slotProps.placeholder}}</span>\n                    </template>\n                    <template #option=\"slotProps\">\n                        <span :class=\"'customer-badge status-' + slotProps.option\">{{slotProps.option}}</span>\n                    </template>\n                </Dropdown>\n            </template>\n        </Column>\n        <Column field=\"activity\" header=\"Activity\" :showFilterMatchModes=\"false\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                <ProgressBar :value=\"data.activity\" :showValue=\"false\"></ProgressBar>\n            </template>\n            <template #filter=\"{filterModel}\">\n                <!-- <InputText type=\"text\" v-model=\"filterModel.value\" placeholder=\"Minimum\"/> -->\n                <Slider v-model=\"filterModel.value\" range class=\"m-3\"></Slider>\n                <div class=\"flex align-items-center justify-content-between px-2\">\n                    <span>{{filterModel.value ? filterModel.value[0] : 0}}</span>\n                    <span>{{filterModel.value ? filterModel.value[1] : 100}}</span>\n                </div>\n            </template>\n        </Column>\n        <Column field=\"verified\" header=\"Verified\" dataType=\"boolean\" bodyClass=\"text-center\" :styles=\"{'min-width':'8rem'}\">\n            <template #body=\"{data}\">\n                <i class=\"pi\" :class=\"{'true-icon pi-check-circle': data.verified, 'false-icon pi-times-circle': !data.verified}\"></i>\n            </template>\n            <template #filter={filterModel}>\n                <TriStateCheckbox v-model=\"filterModel.value\" />\n            </template>\n        </Column>\n    </DataTable>\n</div>\n\n<div class=\"card\">\n    <DataTable :value=\"customers2\" :paginator=\"true\" class=\"p-datatable-customers\" :rows=\"10\"\n        dataKey=\"id\" :filters.sync=\"filters2\" filterDisplay=\"row\" :loading=\"loading2\" responsiveLayout=\"scroll\"\n        :globalFilterFields=\"['name','country.name','representative.name','status']\">\n        <template #header>\n            <div class=\"flex justify-content-end\">\n                <span class=\"p-input-icon-left \">\n                    <i class=\"pi pi-search\" />\n                    <InputText v-model=\"filters2['global'].value\" placeholder=\"Keyword Search\" />\n                </span>\n            </div>\n        </template>\n        <template #empty>\n            No customers found.\n        </template>\n        <template #loading>\n            Loading customers data. Please wait.\n        </template>\n        <Column field=\"name\" header=\"Name\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                {{data.name}}\n            </template>\n            <template #filter=\"{filterModel,filterCallback}\">\n                <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" :placeholder=\"\\`Search by name - \\${filterModel.matchMode}\\`\" v-tooltip.top.focus=\"'Hit enter key to filter'\"/>\n            </template>\n        </Column>\n        <Column header=\"Country\" filterField=\"country.name\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + data.country.code\" width=\"30\" />\n                <span class=\"image-text\">{{data.country.name}}</span>\n            </template>\n            <template #filter=\"{filterModel,filterCallback}\">\n                <InputText type=\"text\" v-model=\"filterModel.value\" @input=\"filterCallback()\" class=\"p-column-filter\" placeholder=\"Search by country\" v-tooltip.top.focus=\"'Filter as you type'\"/>\n            </template>\n        </Column>\n        <Column header=\"Agent\" filterField=\"representative\" :showFilterMenu=\"false\" :styles=\"{'min-width':'14rem'}\">\n            <template #body=\"{data}\">\n                <img :alt=\"data.representative.name\" :src=\"'demo/images/avatar/' + data.representative.image\" width=\"32\" style=\"vertical-align: middle\" />\n                <span class=\"image-text\">{{data.representative.name}}</span>\n            </template>\n            <template #filter=\"{filterModel,filterCallback}\">\n                <MultiSelect v-model=\"filterModel.value\" @change=\"filterCallback()\" :options=\"representatives\" optionLabel=\"name\" placeholder=\"Any\" class=\"p-column-filter\">\n                    <template #option=\"slotProps\">\n                        <div class=\"p-multiselect-representative-option\">\n                            <img :alt=\"slotProps.option.name\" :src=\"'demo/images/avatar/' + slotProps.option.image\" width=\"32\" style=\"vertical-align: middle\" />\n                            <span class=\"image-text\">{{slotProps.option.name}}</span>\n                        </div>\n                    </template>\n                </MultiSelect>\n            </template>\n        </Column>\n        <Column field=\"status\" header=\"Status\" :showFilterMenu=\"false\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"{data}\">\n                <span :class=\"'customer-badge status-' + data.status\">{{data.status}}</span>\n            </template>\n            <template #filter=\"{filterModel,filterCallback}\">\n                <Dropdown v-model=\"filterModel.value\" @change=\"filterCallback()\" :options=\"statuses\" placeholder=\"Any\" class=\"p-column-filter\" :showClear=\"true\">\n                    <template #value=\"slotProps\">\n                        <span :class=\"'customer-badge status-' + slotProps.value\" v-if=\"slotProps.value\">{{slotProps.value}}</span>\n                        <span v-else>{{slotProps.placeholder}}</span>\n                    </template>\n                    <template #option=\"slotProps\">\n                        <span :class=\"'customer-badge status-' + slotProps.option\">{{slotProps.option}}</span>\n                    </template>\n                </Dropdown>\n            </template>\n        </Column>\n        <Column field=\"verified\" header=\"Verified\" dataType=\"boolean\" :styles=\"{'min-width':'6rem'}\">\n            <template #body=\"{data}\">\n                <i class=\"pi\" :class=\"{'true-icon pi-check-circle': data.verified, 'false-icon pi-times-circle': !data.verified}\"></i>\n            </template>\n            <template #filter=\"{filterModel,filterCallback}\">\n                <TriStateCheckbox v-model=\"filterModel.value\" @change=\"filterCallback()\"/>\n            </template>\n        </Column>\n    </DataTable>\n</div>\n        `\n      },\n      baseCode2: {\n        basic: `\nimport CustomerService from '../../service/CustomerService';\nimport {FilterMatchMode,FilterOperator} from 'primevue2/api/';\n\nexport default {\n    data() {\n        return {\n            customers: null,\n            filters: {},\n            loading: true,\n            representatives: [\n                {name: \"Amy Elsner\", image: 'amyelsner.png'},\n                {name: \"Anna Fali\", image: 'annafali.png'},\n                {name: \"Asiya Javayant\", image: 'asiyajavayant.png'},\n                {name: \"Bernardo Dominic\", image: 'bernardodominic.png'},\n                {name: \"Elwin Sharvill\", image: 'elwinsharvill.png'},\n                {name: \"Ioni Bowcher\", image: 'ionibowcher.png'},\n                {name: \"Ivan Magalhaes\",image: 'ivanmagalhaes.png'},\n                {name: \"Onyama Limba\", image: 'onyamalimba.png'},\n                {name: \"Stephen Shaw\", image: 'stephenshaw.png'},\n                {name: \"XuXue Feng\", image: 'xuxuefeng.png'}\n            ],\n            statuses: [\n                'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\n            ]\n        }\n    },\n    created() {\n        this.customerService = new CustomerService();\n    },\n    mounted() {\n        this.customerService.getCustomersLarge().then(data => this.customers = data);\n        this.loading = false;\n    },\n    methods: {\n        filterDate(value, filter) {\n            if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n                return true;\n            }\n\n            if (value === undefined || value === null) {\n                return false;\n            }\n\n            return value === this.formatDate(filter);\n        },\n        formatDate(date) {\n            let month = date.getMonth() + 1;\n            let day = date.getDate();\n\n            if (month &lt; 10) {\n                month = '0' + month;\n            }\n\n            if (day &lt; 10) {\n                day = '0' + day;\n            }\n\n            return date.getFullYear() + '-' + month + '-' + day;\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>DataTable - Filter</h1>\n        <p>\n          Filtering is enabled by defining a filter template per column to populate the filters property of the\n          DataTable.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Filter Menu</h5>\n        <p>Filters are displayed in an overlay.</p>\n        <DataTable\n          :value=\"customers1\"\n          :paginator=\"true\"\n          class=\"p-datatable-customers\"\n          showGridlines\n          :rows=\"10\"\n          dataKey=\"id\"\n          :filters.sync=\"filters1\"\n          filterDisplay=\"menu\"\n          :loading=\"loading1\"\n          responsiveLayout=\"scroll\"\n          :globalFilterFields=\"['name', 'country.name', 'representative.name', 'balance', 'status']\">\n          <template #header>\n            <div class=\"flex justify-content-between\">\n              <Button\n                type=\"button\"\n                icon=\"pi pi-filter-slash\"\n                label=\"Clear\"\n                class=\"p-button-outlined\"\n                @click=\"clearFilter1()\" />\n              <span class=\"p-input-icon-left\">\n                <i class=\"pi pi-search\" />\n                <InputText v-model=\"filters1['global'].value\" placeholder=\"Keyword Search\" />\n              </span>\n            </div>\n          </template>\n          <template #empty> No customers found. </template>\n          <template #loading> Loading customers data. Please wait. </template>\n          <Column field=\"name\" header=\"Name\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              {{ data.name }}\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <InputText type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" placeholder=\"Search by name\" />\n            </template>\n          </Column>\n          <Column header=\"Country\" filterField=\"country.name\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              <img\n                src=\"../../assets/images/flag_placeholder.png\"\n                :class=\"'flag flag-' + data.country.code\"\n                width=\"30\" />\n              <span class=\"image-text\">{{ data.country.name }}</span>\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <InputText\n                type=\"text\"\n                v-model=\"filterModel.value\"\n                class=\"p-column-filter\"\n                placeholder=\"Search by country\" />\n            </template>\n            <template #filterclear=\"{ filterCallback }\">\n              <Button type=\"button\" icon=\"pi pi-times\" @click=\"filterCallback()\" class=\"p-button-secondary\"></Button>\n            </template>\n            <template #filterapply=\"{ filterCallback }\">\n              <Button type=\"button\" icon=\"pi pi-check\" @click=\"filterCallback()\" class=\"p-button-success\"></Button>\n            </template>\n            <template #filterfooter>\n              <div class=\"px-3 pt-0 pb-3 text-center font-bold\">Customized Buttons</div>\n            </template>\n          </Column>\n          <Column\n            header=\"Agent\"\n            filterField=\"representative\"\n            :showFilterMatchModes=\"false\"\n            :filterMenuStyle=\"{ width: '14rem' }\"\n            :styles=\"{ 'min-width': '14rem' }\">\n            <template #body=\"{ data }\">\n              <img\n                :alt=\"data.representative.name\"\n                :src=\"$publicUrl('demo/images/avatar/' + data.representative.image)\"\n                width=\"32\"\n                style=\"vertical-align: middle\" />\n              <span class=\"image-text\">{{ data.representative.name }}</span>\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <div class=\"mb-3 font-bold\">Agent Picker</div>\n              <MultiSelect\n                v-model=\"filterModel.value\"\n                :options=\"representatives\"\n                optionLabel=\"name\"\n                placeholder=\"Any\"\n                class=\"p-column-filter\">\n                <template #option=\"slotProps\">\n                  <div class=\"p-multiselect-representative-option\">\n                    <img\n                      :alt=\"slotProps.option.name\"\n                      :src=\"$publicUrl('demo/images/avatar/' + slotProps.option.image)\"\n                      width=\"32\"\n                      style=\"vertical-align: middle\" />\n                    <span class=\"image-text\">{{ slotProps.option.name }}</span>\n                  </div>\n                </template>\n              </MultiSelect>\n            </template>\n          </Column>\n          <Column header=\"Date\" filterField=\"date\" dataType=\"date\" :styles=\"{ 'min-width': '10rem' }\">\n            <template #body=\"{ data }\">\n              {{ formatDate(data.date) }}\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <Calendar v-model=\"filterModel.value\" dateFormat=\"mm/dd/yy\" placeholder=\"mm/dd/yyyy\" />\n            </template>\n          </Column>\n          <Column header=\"Balance\" filterField=\"balance\" dataType=\"numeric\" :styles=\"{ 'min-width': '10rem' }\">\n            <template #body=\"{ data }\">\n              {{ formatCurrency(data.balance) }}\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <InputNumber v-model=\"filterModel.value\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n            </template>\n          </Column>\n          <Column\n            field=\"status\"\n            header=\"Status\"\n            :filterMenuStyle=\"{ width: '14rem' }\"\n            :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              <span :class=\"'customer-badge status-' + data.status\">{{ data.status }}</span>\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <Dropdown\n                v-model=\"filterModel.value\"\n                :options=\"statuses\"\n                placeholder=\"Any\"\n                class=\"p-column-filter\"\n                :showClear=\"true\">\n                <template #value=\"slotProps\">\n                  <span :class=\"'customer-badge status-' + slotProps.value\" v-if=\"slotProps.value\">{{\n                    slotProps.value\n                  }}</span>\n                  <span v-else>{{ slotProps.placeholder }}</span>\n                </template>\n                <template #option=\"slotProps\">\n                  <span :class=\"'customer-badge status-' + slotProps.option\">{{ slotProps.option }}</span>\n                </template>\n              </Dropdown>\n            </template>\n          </Column>\n          <Column field=\"activity\" header=\"Activity\" :showFilterMatchModes=\"false\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              <ProgressBar :value=\"data.activity\" :showValue=\"false\"></ProgressBar>\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <Slider v-model=\"filterModel.value\" :range=\"true\" class=\"m-3\"></Slider>\n              <div class=\"flex align-items-center justify-content-between px-2\">\n                <span>{{ filterModel.value ? filterModel.value[0] : 0 }}</span>\n                <span>{{ filterModel.value ? filterModel.value[1] : 100 }}</span>\n              </div>\n            </template>\n          </Column>\n          <Column\n            field=\"verified\"\n            header=\"Verified\"\n            dataType=\"boolean\"\n            bodyClass=\"text-center\"\n            :styles=\"{ 'min-width': '8rem' }\">\n            <template #body=\"{ data }\">\n              <i\n                class=\"pi\"\n                :class=\"{\n                  'true-icon pi-check-circle': data.verified,\n                  'false-icon pi-times-circle': !data.verified,\n                }\"></i>\n            </template>\n            <template #filter=\"{ filterModel }\">\n              <TriStateCheckbox v-model=\"filterModel.value\" />\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n\n      <div class=\"card\">\n        <h5>Filter Row</h5>\n        <p>Filters are displayed inline within a separate row.</p>\n        <DataTable\n          :value=\"customers2\"\n          :paginator=\"true\"\n          class=\"p-datatable-customers\"\n          :rows=\"10\"\n          dataKey=\"id\"\n          :filters.sync=\"filters2\"\n          filterDisplay=\"row\"\n          :loading=\"loading2\"\n          responsiveLayout=\"scroll\"\n          :globalFilterFields=\"['name', 'country.name', 'representative.name', 'status']\">\n          <template #header>\n            <div class=\"flex justify-content-end\">\n              <span class=\"p-input-icon-left\">\n                <i class=\"pi pi-search\" />\n                <InputText v-model=\"filters2['global'].value\" placeholder=\"Keyword Search\" />\n              </span>\n            </div>\n          </template>\n          <template #empty> No customers found. </template>\n          <template #loading> Loading customers data. Please wait. </template>\n          <Column field=\"name\" header=\"Name\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              {{ data.name }}\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <InputText\n                type=\"text\"\n                v-model=\"filterModel.value\"\n                @keydown.enter=\"filterCallback()\"\n                class=\"p-column-filter\"\n                :placeholder=\"`Search by name - ${filterModel.matchMode}`\"\n                v-tooltip.top.focus=\"'Hit enter key to filter'\" />\n            </template>\n          </Column>\n          <Column header=\"Country\" filterField=\"country.name\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              <img\n                src=\"../../assets/images/flag_placeholder.png\"\n                :class=\"'flag flag-' + data.country.code\"\n                width=\"30\" />\n              <span class=\"image-text\">{{ data.country.name }}</span>\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <InputText\n                type=\"text\"\n                v-model=\"filterModel.value\"\n                @input=\"filterCallback()\"\n                class=\"p-column-filter\"\n                placeholder=\"Search by country\"\n                v-tooltip.top.focus=\"'Filter as you type'\" />\n            </template>\n          </Column>\n          <Column\n            header=\"Agent\"\n            filterField=\"representative\"\n            :showFilterMenu=\"false\"\n            :styles=\"{ 'min-width': '14rem' }\">\n            <template #body=\"{ data }\">\n              <img\n                :alt=\"data.representative.name\"\n                :src=\"$publicUrl('demo/images/avatar/' + data.representative.image)\"\n                width=\"32\"\n                style=\"vertical-align: middle\" />\n              <span class=\"image-text\">{{ data.representative.name }}</span>\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <MultiSelect\n                v-model=\"filterModel.value\"\n                @change=\"filterCallback()\"\n                :options=\"representatives\"\n                optionLabel=\"name\"\n                placeholder=\"Any\"\n                class=\"p-column-filter\">\n                <template #option=\"slotProps\">\n                  <div class=\"p-multiselect-representative-option\">\n                    <img\n                      :alt=\"slotProps.option.name\"\n                      :src=\"$publicUrl('demo/images/avatar/' + slotProps.option.image)\"\n                      width=\"32\"\n                      style=\"vertical-align: middle\" />\n                    <span class=\"image-text\">{{ slotProps.option.name }}</span>\n                  </div>\n                </template>\n              </MultiSelect>\n            </template>\n          </Column>\n          <Column field=\"status\" header=\"Status\" :showFilterMenu=\"false\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"{ data }\">\n              <span :class=\"'customer-badge status-' + data.status\">{{ data.status }}</span>\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <Dropdown\n                v-model=\"filterModel.value\"\n                @change=\"filterCallback()\"\n                :options=\"statuses\"\n                placeholder=\"Any\"\n                class=\"p-column-filter\"\n                :showClear=\"true\">\n                <template #value=\"slotProps\">\n                  <span :class=\"'customer-badge status-' + slotProps.value\" v-if=\"slotProps.value\">{{\n                    slotProps.value\n                  }}</span>\n                  <span v-else>{{ slotProps.placeholder }}</span>\n                </template>\n                <template #option=\"slotProps\">\n                  <span :class=\"'customer-badge status-' + slotProps.option\">{{ slotProps.option }}</span>\n                </template>\n              </Dropdown>\n            </template>\n          </Column>\n          <Column field=\"verified\" header=\"Verified\" dataType=\"boolean\" :styles=\"{ 'min-width': '6rem' }\">\n            <template #body=\"{ data }\">\n              <i\n                class=\"pi\"\n                :class=\"{\n                  'true-icon pi-check-circle': data.verified,\n                  'false-icon pi-times-circle': !data.verified,\n                }\"></i>\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <TriStateCheckbox v-model=\"filterModel.value\" @change=\"filterCallback()\" />\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n\n    <DataTableFilterDoc />\n  </div>\n</template>\n\n<script>\nimport DataTableFilterDoc from '@/doc/datatable/Filter.vue'\nimport CustomerService from '../../service/CustomerService'\nimport FilterMatchMode from '../../components/api/FilterMatchMode'\nimport FilterOperator from '../../components/api/FilterOperator'\n\nexport default {\n  components: { DataTableFilterDoc },\n  data() {\n    return {\n      customers1: null,\n      customers2: null,\n      filters1: null,\n      filters2: {\n        'global': { value: null, matchMode: FilterMatchMode.CONTAINS },\n        'name': { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n        'country.name': { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n        'representative': { value: null, matchMode: FilterMatchMode.IN },\n        'status': { value: null, matchMode: FilterMatchMode.EQUALS },\n        'verified': { value: null, matchMode: FilterMatchMode.EQUALS }\n      },\n      representatives: [\n        { name: 'Amy Elsner', image: 'amyelsner.png' },\n        { name: 'Anna Fali', image: 'annafali.png' },\n        { name: 'Asiya Javayant', image: 'asiyajavayant.png' },\n        { name: 'Bernardo Dominic', image: 'bernardodominic.png' },\n        { name: 'Elwin Sharvill', image: 'elwinsharvill.png' },\n        { name: 'Ioni Bowcher', image: 'ionibowcher.png' },\n        { name: 'Ivan Magalhaes', image: 'ivanmagalhaes.png' },\n        { name: 'Onyama Limba', image: 'onyamalimba.png' },\n        { name: 'Stephen Shaw', image: 'stephenshaw.png' },\n        { name: 'XuXue Feng', image: 'xuxuefeng.png' }\n      ],\n      statuses: [\n        'unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'\n      ],\n      loading1: true,\n      loading2: true\n    }\n  },\n  created() {\n    this.customerService = new CustomerService()\n    this.initFilters1()\n  },\n  mounted() {\n    this.customerService.getCustomersLarge().then(data => {\n      this.customers1 = data\n      this.loading1 = false\n      this.customers1.forEach(customer => customer.date = new Date(customer.date))\n    })\n\n    this.customerService.getCustomersLarge().then(data => {\n      this.customers2 = data\n      this.loading2 = false\n      this.customers2.forEach(customer => customer.date = new Date(customer.date))\n    })\n  },\n  methods: {\n    formatDate(value) {\n      return value.toLocaleDateString('en-US', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n      })\n    },\n    formatCurrency(value) {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n    },\n    clearFilter1() {\n      this.initFilters1()\n    },\n    initFilters1() {\n      this.filters1 = {\n        'global': { value: null, matchMode: FilterMatchMode.CONTAINS },\n        'name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\n        'country.name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\n        'representative': { value: null, matchMode: FilterMatchMode.IN },\n        'date': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }] },\n        'balance': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\n        'status': { operator: FilterOperator.OR, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\n        'activity': { value: null, matchMode: FilterMatchMode.BETWEEN },\n        'verified': { value: null, matchMode: FilterMatchMode.EQUALS }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.p-paginator) {\n  .p-paginator-current {\n    margin-left: auto;\n  }\n}\n\n:deep(.p-progressbar) {\n  height: 0.5rem;\n  background-color: #d8dadc;\n\n  .p-progressbar-value {\n    background-color: #607d8b;\n  }\n}\n\n:deep(.p-datepicker) {\n  min-width: 25rem;\n\n  td {\n    font-weight: 400;\n  }\n}\n\n:deep(.p-datatable.p-datatable-customers) {\n  .p-datatable-header {\n    padding: 1rem;\n    text-align: left;\n    font-size: 1.5rem;\n  }\n\n  .p-paginator {\n    padding: 1rem;\n  }\n\n  .p-datatable-thead > tr > th {\n    text-align: left;\n  }\n\n  .p-datatable-tbody > tr > td {\n    cursor: auto;\n  }\n}\n</style>\n"],"names":["_sfc_main","DataTableFilterDoc","FilterMatchMode","CustomerService","data","customer","value","FilterOperator"],"mappings":"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"}