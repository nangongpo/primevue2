{"version":3,"file":"TreeTablePaginatorDemo-BfHuxN0V.js","sources":["../../src/doc/treetable/Paginator.vue","../../src/views/treetable/TreeTablePaginatorDemo.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"sourceCode1\" />\n        <DocSectionCode :code=\"sourceCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<TreeTable :value=\"nodes\" :paginator=\"true\" :rows=\"10\">\n    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n    <Column field=\"size\" header=\"Size\"></Column>\n    <Column field=\"type\" header=\"Type\"></Column>\n</TreeTable>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    created() {\n        let files = [];\n        for(let i = 0; i < 50; i++) {\n            let node = {\n                key: i,\n                data: {\n                    name: 'Item ' + i,\n                    size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n                    type: 'Type ' + i\n                },\n                children: [\n                    {\n                        key: i + ' - 0',\n                        data: {\n                            name: 'Item ' + i + ' - 0',\n                            size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n                            type: 'Type ' + i\n                        }\n                    }\n                ]\n            };\n\n            files.push(node);\n        }\n\n        this.nodes = files;\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>TreeTable <span>Paginator</span></h1>\n        <p>Pagination is enabled by setting paginator property to true and defining the rows attribute as the number of\n          root level nodes per page.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <TreeTable :value=\"nodes\" :paginator=\"true\" :rows=\"10\">\n          <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n          <Column field=\"size\" header=\"Size\"></Column>\n          <Column field=\"type\" header=\"Type\"></Column>\n        </TreeTable>\n      </div>\n    </div>\n\n    <TreeTablePaginatorDoc />\n  </div>\n</template>\n\n<script>\nimport TreeTablePaginatorDoc from '@/doc/treetable/Paginator.vue'\n\nexport default {\n  data() {\n    return {\n      nodes: null\n    }\n  },\n  created() {\n    let files = []\n    for (let i = 0; i < 50; i++) {\n      let node = {\n        key: i,\n        data: {\n          name: 'Item ' + i,\n          size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n          type: 'Type ' + i\n        },\n        children: [\n          {\n            key: i + ' - 0',\n            data: {\n              name: 'Item ' + i + ' - 0',\n              size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n              type: 'Type ' + i\n            }\n          }\n        ]\n      }\n\n      files.push(node)\n    }\n\n    this.nodes = files\n  },\n  components: { TreeTablePaginatorDoc }\n}\n</script>\n"],"names":["_sfc_main","files","i","node","TreeTablePaginatorDoc"],"mappings":"6LAYA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,0PAOA,EACA,YAAA,CACA,MAAA,m5BAoCA,CACA,CACA,CACA,0UCrCAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,MAAA,IACA,CACA,EACA,SAAA,CACA,IAAAC,EAAA,CAAA,EACA,QAAAC,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACA,IAAAC,EAAA,CACA,IAAAD,EACA,KAAA,CACA,KAAA,QAAAA,EACA,KAAA,KAAA,MAAA,KAAA,OAAA,EAAA,GAAA,EAAA,EAAA,KACA,KAAA,QAAAA,CACA,EACA,SAAA,CACA,CACA,IAAAA,EAAA,OACA,KAAA,CACA,KAAA,QAAAA,EAAA,OACA,KAAA,KAAA,MAAA,KAAA,OAAA,EAAA,GAAA,EAAA,EAAA,KACA,KAAA,QAAAA,CACA,CACA,CACA,CACA,EAEAD,EAAA,KAAAE,CAAA,CACA,CAEA,KAAA,MAAAF,CACA,EACA,WAAA,CAAA,sBAAAG,CAAA,CACA"}