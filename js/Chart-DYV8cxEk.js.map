{"version":3,"file":"Chart-DYV8cxEk.js","sources":["../../src/doc/chart/Chart.vue","../../src/views/chart/Chart.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <h1>ChartModel</h1>\n    <p>\n      Chart components are based on <a href=\"https://www.chartjs.org/\">Charts.js</a>, an open source HTML5 based\n      charting library.\n    </p>\n\n    <h5>Getting Started</h5>\n    <p>\n      Chart component is a wrapper around on <a href=\"https://www.chartjs.org/docs/3.3.2/\">Chart.js 3.3.2+</a> so\n      chart.js needs to be included in your project. For a complete documentation and samples please refer to the\n      <a href=\"https://www.chartjs.org/\">chart.js website</a>.\n    </p>\n    <DocSectionCode :code=\"baseCode\" importCode />\n\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Chart Types</h5>\n    <p>\n      Chart type is defined using the <i>type</i> property. Currently there are 6 options available; <b>pie</b>,\n      <b>doughnut</b>, <b>line</b>, <b>bar</b>, <b>radar</b> and <b>polarArea</b>.\n    </p>\n\n    <h5>Data</h5>\n    <p>\n      Data of a chart is provided using a binding to the <i>data</i> property, each type has its own format of data.\n      Here is an example of a line chart. For more information refer to the\n      <a href=\"https://www.chartjs.org/\">charts.js</a> documentation.\n    </p>\n\n    <DocSectionCode :code=\"dataCode\" />\n    <DocSectionCode :code=\"dataCode2\" importCode />\n\n    <h5>Options</h5>\n    <p>\n      While a series can be customized per dataset, general chart options are defined with options property. Example\n      below adds a title and customizes the legend position of the chart. For all available options refer to the\n      <a href=\"https://www.chartjs.org/\">charts.js</a> documentation.\n    </p>\n    <DocSectionCode :code=\"optionsCode\" />\n    <DocSectionCode :code=\"optionsCode2\" importCode />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following is the additional property to\n      configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>type</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Type of the chart.</td>\n          </tr>\n          <tr>\n            <td>data</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Data to display.</td>\n          </tr>\n          <tr>\n            <td>options</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Options to customize the chart.</td>\n          </tr>\n          <tr>\n            <td>plugins</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Used to custom plugins of the chart.</td>\n          </tr>\n          <tr>\n            <td>width</td>\n            <td>number</td>\n            <td>300</td>\n            <td>Width of the chart in non-responsive mode.</td>\n          </tr>\n          <tr>\n            <td>height</td>\n            <td>number</td>\n            <td>150</td>\n            <td>Height of the chart in non-responsive mode.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Methods</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>refresh</td>\n            <td>-</td>\n            <td>Redraws the graph.</td>\n          </tr>\n          <tr>\n            <td>reinit</td>\n            <td>-</td>\n            <td>Destroys the graph first and then creates it again.</td>\n          </tr>\n          <tr>\n            <td>generateLegend</td>\n            <td>-</td>\n            <td>\n              Returns an HTML string of a legend for that chart. The legend is generated from the legendCallback in the\n              options.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>select</td>\n            <td>\n              event: original event<br />\n              event.dataset: Selected dataset<br />\n              event.element: Selected element<br />\n              event.element._datasetIndex = Index of the dataset in data<br />\n              event.element._index = Index of the data in dataset\n            </td>\n            <td>Callback to invoke when a tab gets expanded.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-chart</td>\n            <td>Container element.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\nnpm install chart.js --save\n        `\n      },\n      importCode: {\n        basic: `\nimport Chart from 'primevue2/chart';\n        `\n      },\n      dataCode: {\n        basic: `\n<Chart type=\"bar\" :data=\"basicData\" :options=\"basicOptions\" />\n        `\n      },\n      dataCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tbasicData:{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                    {\n                        label: 'My First dataset',\n                        backgroundColor: '#42A5F5',\n                        data: [65, 59, 80, 81, 56, 55, 40]\n                    },\n                    {\n                        label: 'My Second dataset',\n                        backgroundColor: '#FFA726',\n                        data: [28, 48, 40, 19, 86, 27, 90]\n                    }\n                ]\n            }\n\t\t}\n\t}\n}\n        `\n      },\n      optionsCode: {\n        basic: `\n<Chart type=\"line\" :data=\"data\" :options=\"options\" />\n        `\n      },\n      optionsCode2: {\n        basic: `\noptions: {\n\tresponsive: true,\n\thoverMode: 'index',\n\tstacked: false,\n\tscales: {\n        yAxes: [{\n            type: 'linear',\n            display: true,\n            position: 'left',\n            id: 'y-axis-1',\n        },\n        {\n            type: 'linear',\n            display: true,\n            position: 'right',\n            id: 'y-axis-2',\n            gridLines: {\n                drawOnChartArea: false\n            }\n        }]\n\t}\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <ChartDoc />\n  </div>\n</template>\n\n<script>\nimport ChartDoc from '@/doc/chart/Chart.vue'\n\nexport default {\n  components: {\n    'ChartDoc': ChartDoc\n  }\n}\n</script>\n"],"names":["_sfc_main","ChartDoc"],"mappings":"kMAoLA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,CACA,MAAA,yCAGA,EACA,WAAA,CACA,MAAA,kDAGA,EACA,SAAA,CACA,MAAA,4EAGA,EACA,UAAA,CACA,MAAA,mpBAuBA,EACA,YAAA,CACA,MAAA,mEAGA,EACA,aAAA,CACA,MAAA,ydAwBA,CACA,CACA,CACA,quKCvPAA,EAAA,CACA,WAAA,CACA,SAAAC,CACA,CACA"}