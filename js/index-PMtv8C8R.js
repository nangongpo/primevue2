import{n as a}from"./app.component-BAbvz7X_.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const s={name:"Documentation",data(){return{importCode:{basic:"\nimport ProgressBar from 'primevue2/progressbar';\n        "},baseCode:{basic:'\n<ProgressBar :value="value" />\n        '},baseCode2:{basic:"\ndata() {\n	return {\n		value: 0\n	}\n}\n\n        "},baseCode3:{basic:'\n<ProgressBar mode="indeterminate"/>\n        '},slotCode:{basic:'\n<ProgressBar :value="value">\n    Percent Complete: {{value}}%\n</ProgressBar>\n        '}}}};var o=function(){var e=this,r=e._self._c;return r("div",[r("h5",[e._v("Import")]),r("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),r("h5",[e._v("Getting Started")]),r("p",[e._v(' ProgressBar has two modes; "determinate" (default) and "indeterminate". In determinate mode, a value between 0 and 100 is required to display the progress. ')]),r("DocSectionCode",{attrs:{code:e.baseCode}}),r("DocSectionCode",{attrs:{code:e.baseCode2,importCode:""}}),e._m(0),r("DocSectionCode",{attrs:{code:e.baseCode3}}),r("h5",[e._v("Slot")]),r("p",[e._v("A custom label can be placed inside the progress bar via the default slot.")]),r("DocSectionCode",{attrs:{code:e.slotCode}}),r("h5",[e._v("Properties")]),e._m(1),r("h5",[e._v("Styling")]),r("p",[e._v(" Following is the list of structural style classes, for theming classes visit "),r("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page. ")],1),e._m(2),r("h5",[e._v("Dependencies")]),r("p",[e._v("None.")])],1)},n=[function(){var t=this,e=t._self._c;return e("p",[t._v("Indeterminate is simplly enabled using "),e("i",[t._v("mode")]),t._v(" property.")])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Current value of the progress.")])]),e("tr",[e("td",[t._v("mode")]),e("td",[t._v("string")]),e("td",[t._v("determinate")]),e("td",[t._v('Defines the mode of the progress, valid values are "determinate" and "indeterminate".')])]),e("tr",[e("td",[t._v("showValue")]),e("td",[t._v("boolean")]),e("td",[t._v("true")]),e("td",[t._v("Whether to display the progress bar value.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-progressbar")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-progressbar-determinate")]),e("td",[t._v("Container element of a determinate progressbar.")])]),e("tr",[e("td",[t._v("p-progressbar-indeterminate")]),e("td",[t._v("Container element of an indeterminate progressbar.")])]),e("tr",[e("td",[t._v("p-progressbar-value")]),e("td",[t._v("Element whose width changes according to value.")])]),e("tr",[e("td",[t._v("p-progressbar-label")]),e("td",[t._v("Label element that displays the current value.")])])])])])}],i=a(s,o,n,!1,null,null);const l=i.exports,d={name:"SourceCode",data(){return{sourceCode1:{basic:'\n<h3>Dynamic</h3>\n<ProgressBar :value="value1" />\n\n<h3>Static</h3>\n<ProgressBar :value="value2" :showValue="false" />\n\n<h3>Indeterminate</h3>\n<ProgressBar mode="indeterminate" style="height: .5em" />\n        '},sourceCode2:{basic:"\nexport default {\n	data() {\n		return {\n			value1: 0,\n			value2: 50\n		}\n	},\n	interval: null,\n	methods: {\n		startProgress() {\n			this.interval = setInterval(() => {\n				let newValue = this.value1 + Math.floor(Math.random() * 10) + 1;\n				if (newValue >= 100) {\n					newValue = 100;\n				}\n				this.value1 = newValue;\n			}, 2000);\n		},\n		endProgress() {\n			clearInterval(this.interval);\n			this.interval = null;\n		}\n	},\n	mounted() {\n		this.startProgress();\n	},\n	beforeDestroy() {\n		this.endProgress();\n	}\n}\n        "}}}};var c=function(){var e=this,r=e._self._c;return r("div",[e._m(0),r("DocSectionCode",{attrs:{code:e.sourceCode1}}),r("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)},v=[function(){var t=this,e=t._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/prograssbar",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])])}],_=a(d,c,v,!1,null,null);const u=_.exports,m={components:{Documentation:l,SourceCode:u}};var h=function(){var e=this,r=e._self._c;return r("div",{staticClass:"content-section documentation"},[r("TabView",[r("TabPanel",{attrs:{header:"Documentation"}},[r("Documentation")],1),r("TabPanel",{attrs:{header:"Source"}},[r("SourceCode")],1)],1)],1)},p=[],f=a(m,h,p,!1,null,null);const g=f.exports,b={data(){return{value1:0,value2:50}},interval:null,methods:{startProgress(){this.interval=setInterval(()=>{let t=this.value1+Math.floor(Math.random()*10)+1;t>=100&&(t=100),this.value1=t},2e3)},endProgress(){clearInterval(this.interval),this.interval=null}},mounted(){this.startProgress()},beforeDestroy(){this.endProgress()},components:{ProgressBarDoc:g}};var C=function(){var e=this,r=e._self._c;return r("div",[e._m(0),r("div",{staticClass:"content-section implementation"},[r("div",{staticClass:"card"},[r("h5",[e._v("Dynamic")]),r("ProgressBar",{attrs:{value:e.value1}}),r("h5",[e._v("Static")]),r("ProgressBar",{attrs:{value:e.value2,showValue:!1}}),r("h5",[e._v("Indeterminate")]),r("ProgressBar",{staticStyle:{height:"0.5em"},attrs:{mode:"indeterminate"}})],1)]),r("ProgressBarDoc")],1)},P=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[t._v("ProgressBar")]),e("p",[t._v("ProgressBar is a process status indicator.")])])])}],D=a(b,C,P,!1,null,null);const V=D.exports;export{V as default};
//# sourceMappingURL=index-PMtv8C8R.js.map
