{"version":3,"file":"index-DnjpOeE8.js","sources":["../../src/doc/fileupload/Documentation.vue","../../src/doc/fileupload/SourceCode.vue","../../src/doc/fileupload/index.vue","../../src/views/fileupload/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      FileUpload requires a <i>url</i> property as the upload target and a <i>name</i> to identify the files at backend.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n\n    <h5>Multiple Uploads</h5>\n    <p>\n      Only one file can be selected at a time by default, to allow selecting multiple files at once enable\n      <i>multiple</i> option.\n    </p>\n    <DocSectionCode :code=\"multipleUploadsCode\" />\n\n    <h5>Basic UI</h5>\n    <p>FileUpload basic mode provides a simpler UI as an alternative to advanced mode.</p>\n    <DocSectionCode :code=\"basicUICode\" />\n\n    <h5>DragDrop</h5>\n    <p>\n      File selection can also be done by dragging and dropping from the filesystem to the content section of the\n      component.\n    </p>\n\n    <h5>Auto Uploads</h5>\n    <p>\n      When <i>auto</i> property is enabled, upload begins as soon as file selection is completed or a file is dropped on\n      the drop area.\n    </p>\n    <DocSectionCode :code=\"autoUploadsCode\" />\n\n    <h5>File Types</h5>\n    <p>\n      Selectable file types can be restricted with <i>accept</i> property, example below only allows images to be\n      uploaded. Read more about other possible values\n      <a href=\"https://www.w3schools.com/tags/att_input_accept.asp\"> here</a>.\n    </p>\n    <DocSectionCode :code=\"fileTypesCode\" />\n\n    <h5>File Size and File Limit</h5>\n    <p>\n      Maximium file size can be restricted using <i>maxFileSize</i> property defined in bytes. Similarly\n      <i>fileLimit</i> is available to restrict the number of files to be uploaded.\n    </p>\n    <DocSectionCode :code=\"fileSizeAndFileLimitCode\" />\n\n    <p>\n      In order to customize the default messages use <i>invalidFileSizeMessage</i> and\n      <i>invalidFileLimitMessage</i> options where &#123;0&#125; placeholder refers to the filename and &#123;1&#125;\n      the file size.\n    </p>\n    <ul>\n      <li>\n        invalidFileSizeMessage: '&#123;0&#125;: Invalid file size, file size should be smaller than &#123;1&#125;.'\n      </li>\n      <li>invalidFileLimitMessage: 'Maximum number of files exceeded, limit is &#123;0&#125; at most.'</li>\n    </ul>\n\n    <h5>Request Customization</h5>\n    <p>\n      XHR request to upload the files can be customized using the before-upload callback that passes the xhr instance\n      and FormData object as event parameters.\n    </p>\n\n    <h5>Custom Upload</h5>\n    <p>\n      Uploading implementation can be overridden by enabling <i>customMode</i> property and defining a custom upload\n      handler event.\n    </p>\n    <DocSectionCode :code=\"customUploadCode\" />\n    <DocSectionCode :code=\"customUploadCode2\" importCode />\n\n    <h5>Empty Template</h5>\n    <p>When there is no file selected, you may use the empty slot to display content.</p>\n    <DocSectionCode :code=\"emptyTemplateCode\" />\n\n    <h5>Properties</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>name</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Name of the request parameter to identify the files at backend.</td>\n          </tr>\n          <tr>\n            <td>url</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Remote url to upload the files.</td>\n          </tr>\n          <tr>\n            <td>mode</td>\n            <td>string</td>\n            <td>advanced</td>\n            <td>Defines the UI of the component, possible values are \"advanced\" and \"basic\".</td>\n          </tr>\n          <tr>\n            <td>multiple</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Used to select multiple files at once from file dialog.</td>\n          </tr>\n          <tr>\n            <td>accept</td>\n            <td>string</td>\n            <td>false</td>\n            <td>Pattern to restrict the allowed file types such as \"image/*\".</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Disables the upload functionality.</td>\n          </tr>\n          <tr>\n            <td>auto</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When enabled, upload begins automatically after selection is completed.</td>\n          </tr>\n          <tr>\n            <td>maxFileSize</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Maximum file size allowed in bytes.</td>\n          </tr>\n          <tr>\n            <td>invalidFileSizeMessage</td>\n            <td>string</td>\n            <td>\"&#123;0&#125;: Invalid file size, file size should be smaller than &#123;1&#125;.\"</td>\n            <td>Message of the invalid fize size.</td>\n          </tr>\n          <tr>\n            <td>invalidFileTypeMessage</td>\n            <td>string</td>\n            <td>\"&#123;0&#125;: Invalid file type, allowed file types: &#123;1&#125;\".</td>\n            <td>Message of the invalid file type.</td>\n          </tr>\n          <tr>\n            <td>invalidFileLimitMessage</td>\n            <td>string</td>\n            <td>Maximum number of files exceeded, limit is &#123;0&#125; at most.</td>\n            <td>Message to display when number of files to be uploaded exceeeds the limit.</td>\n          </tr>\n          <tr>\n            <td>fileLimit</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Maximum number of files that can be uploaded.</td>\n          </tr>\n          <tr>\n            <td>withCredentials</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>\n              Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers\n              or TLS client certificates.\n            </td>\n          </tr>\n          <tr>\n            <td>previewWidth</td>\n            <td>number</td>\n            <td>50</td>\n            <td>Width of the image thumbnail in pixels.</td>\n          </tr>\n          <tr>\n            <td>chooseLabel</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Label of the choose button. Defaults to PrimeVue\n              <router-link to=\"/locale\">Locale</router-link> configuration.\n            </td>\n          </tr>\n          <tr>\n            <td>uploadLabel</td>\n            <td>string</td>\n            <td>Upload</td>\n            <td>\n              Label of the upload button. Defaults to PrimeVue\n              <router-link to=\"/locale\">Locale</router-link> configuration.\n            </td>\n          </tr>\n          <tr>\n            <td>cancelLabel</td>\n            <td>string</td>\n            <td>Cancel</td>\n            <td>\n              Label of the cancel button. Defaults to PrimeVue\n              <router-link to=\"/locale\">Locale</router-link> configuration.\n            </td>\n          </tr>\n          <tr>\n            <td>customUpload</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Whether to use the default upload or a manual implementation defined in uploadHandler callback.</td>\n          </tr>\n          <tr>\n            <td>showUploadButton</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to show the upload button.</td>\n          </tr>\n          <tr>\n            <td>showCancelButton</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to show the cancel button.</td>\n          </tr>\n          <tr>\n            <td>buttonStyle</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Inline style of the component.</td>\n          </tr>\n          <tr>\n            <td>buttonClass</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Style class of the component.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div classe=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>before-upload</td>\n            <td>\n              event.xhr: XmlHttpRequest instance. <br />\n              event.formData: FormData object.\n            </td>\n            <td>\n              Callback to invoke before file upload begins to customize the request such as post parameters before the\n              files.\n            </td>\n          </tr>\n          <tr>\n            <td>before-send</td>\n            <td>\n              event.xhr: XmlHttpRequest instance. <br />\n              event.formData: FormData object.\n            </td>\n            <td>Callback to invoke before file send begins to customize the request such as adding headers.</td>\n          </tr>\n          <tr>\n            <td>upload</td>\n            <td>\n              event.xhr: XmlHttpRequest instance.<br />\n              event.files: Uploaded files.\n            </td>\n            <td>Callback to invoke when file upload is complete.</td>\n          </tr>\n          <tr>\n            <td>error</td>\n            <td>\n              event.xhr: XmlHttpRequest instance.<br />\n              event.files: Files that are not uploaded.\n            </td>\n            <td>Callback to invoke if file upload fails.</td>\n          </tr>\n          <tr>\n            <td>clear</td>\n            <td>-.</td>\n            <td>Callback to invoke when files in queue are removed without uploading.</td>\n          </tr>\n          <tr>\n            <td>select</td>\n            <td>\n              event.originalEvent: Original browser event. <br />\n              event.files: List of selected files.\n            </td>\n            <td>Callback to invoke when file upload is complete.</td>\n          </tr>\n          <tr>\n            <td>progress</td>\n            <td>\n              event.originalEvent: Original browser event. <br />\n              event.progress: Calculated progress value.\n            </td>\n            <td>Callback to invoke when files are selected.</td>\n          </tr>\n          <tr>\n            <td>uploader</td>\n            <td>event.files: List of selected files.</td>\n            <td>Callback to invoke to implement a custom upload.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>empty</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-fileupload</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-fileupload-buttonbar</td>\n            <td>Header containing the buttons.</td>\n          </tr>\n          <tr>\n            <td>p-fileupload-content</td>\n            <td>Content section.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport FileUpload from 'primevue2/fileupload';\n        `\n      },\n      baseCode: {\n        basic: `\n<FileUpload name=\"demo[]\" url=\"./upload\" />\n        `\n      },\n      multipleUploadsCode: {\n        basic: `\n<FileUpload name=\"demo[]\" url=\"./upload\" :multiple=\"true\" />\n        `\n      },\n      basicUICode: {\n        basic: `\n<FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload\" />\n        `\n      },\n      autoUploadsCode: {\n        basic: `\n<FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload\" :auto=\"true\" />\n        `\n      },\n      fileTypesCode: {\n        basic: `\n<FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload\" accept=\"image/*\" />\n        `\n      },\n      fileSizeAndFileLimitCode: {\n        basic: `\n<FileUpload name=\"demo[]\" url=\"./upload\" :maxFileSize=\"1000000\" :fileLimit=\"3\" />\n        `\n      },\n      customUploadCode: {\n        basic: `\n<FileUpload name=\"demo[]\" :customUpload=\"true\" @uploader=\"myUploader\" />\n        `\n      },\n      customUploadCode2: {\n        basic: `\nmyUploader(event) {\n    //event.files == files to upload\n}\n        `\n      },\n      emptyTemplateCode: {\n        basic: `\n<FileUpload name=\"demo[]\" url=\"./upload\" />\n    <template #empty>\n        <p>Drag and drop files to here to upload.</p>\n    </template>\n</FileUpload>\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/fileupload\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h3>Advanced</h3>\n<FileUpload name=\"demo[]\" url=\"./upload.php\" @upload=\"onUpload\" :multiple=\"true\" accept=\"image/*\" :maxFileSize=\"1000000\">\n    <template #empty>\n        <p>Drag and drop files to here to upload.</p>\n    </template>\n</FileUpload>\n\n<h3>Basic</h3>\n<FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" />\n\n<h3>Basic with Auto</h3>\n<FileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" :auto=\"true\" chooseLabel=\"Browse\" />\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n\tmethods: {\n\t\tonUpload() {\n\t\t\tthis.$toast.add({severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000});\n\t\t}\n\t}\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>FileUpload</h1>\n        <p>\n          FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress\n          tracking and validations.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Advanced</h5>\n        <FileUpload\n          name=\"demo[]\"\n          url=\"./upload.php\"\n          @upload=\"onUpload\"\n          :multiple=\"true\"\n          accept=\"image/*\"\n          :maxFileSize=\"1000000\">\n          <template #empty>\n            <p>Drag and drop files to here to upload.</p>\n          </template>\n        </FileUpload>\n\n        <h5>Basic</h5>\n        <FileUpload\n          mode=\"basic\"\n          name=\"demo[]\"\n          url=\"./upload.php\"\n          accept=\"image/*\"\n          :maxFileSize=\"1000000\"\n          @upload=\"onUpload\" />\n\n        <h5>Basic with Auto</h5>\n        <FileUpload\n          mode=\"basic\"\n          name=\"demo[]\"\n          url=\"./upload.php\"\n          accept=\"image/*\"\n          :maxFileSize=\"1000000\"\n          @upload=\"onUpload\"\n          :auto=\"true\"\n          chooseLabel=\"Browse\" />\n      </div>\n    </div>\n\n    <FileUploadDoc />\n  </div>\n</template>\n\n<script>\nimport FileUploadDoc from '@/doc/fileupload/index.vue'\n\nexport default {\n  methods: {\n    onUpload() {\n      this.$toast.add({ severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000 })\n    }\n  },\n  components: {\n    'FileUploadDoc': FileUploadDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n  margin: 0;\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","FileUploadDoc"],"mappings":"kMAkXA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,4DAGA,EACA,SAAA,CACA,MAAA,yDAGA,EACA,oBAAA,CACA,MAAA,0EAGA,EACA,YAAA,CACA,MAAA,sEAGA,EACA,gBAAA,CACA,MAAA,mFAGA,EACA,cAAA,CACA,MAAA,uFAGA,EACA,yBAAA,CACA,MAAA,+FAGA,EACA,iBAAA,CACA,MAAA,sFAGA,EACA,kBAAA,CACA,MAAA,0EAKA,EACA,kBAAA,CACA,MAAA,uKAOA,CACA,CACA,CACA,8kXChaAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,0kBAcA,EACA,YAAA,CACA,MAAA,yKASA,CACA,CACA,CACA,2dCjCAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCsCAF,EAAA,CACA,QAAA,CACA,UAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,UAAA,OAAA,gBAAA,KAAA,GAAA,CAAA,CACA,CACA,EACA,WAAA,CACA,cAAAG,CACA,CACA"}