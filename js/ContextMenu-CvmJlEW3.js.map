{"version":3,"file":"ContextMenu-CvmJlEW3.js","sources":["../../src/doc/datatable/ContextMenu.vue","../../src/views/datatable/ContextMenu.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"baseCode\" />\n        <DocSectionCode :code=\"baseCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\n<DataTable :value=\"products\" contextMenu :contextMenuSelection.sync=\"selectedProduct\" @row-contextmenu=\"onRowContextMenu\" responsiveLayout=\"scroll\">\n    <Column field=\"code\" header=\"Code\"></Column>\n    <Column field=\"name\" header=\"Name\"></Column>\n    <Column field=\"category\" header=\"Category\"></Column>\n    <Column field=\"price\" header=\"Price\">\n        <template #body=\"slotProps\">\n            {{formatCurrency(slotProps.data.price)}}\n        </template>\n    </Column>\n</DataTable>\n\n<ContextMenu :model=\"menuModel\" ref=\"cm\" />\n        `\n      },\n      baseCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null,\n            menuModel: [\n                {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.selectedProduct)},\n                {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.selectedProduct)}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowContextMenu(event) {\n            this.$refs.cm.show(event.originalEvent);\n        },\n        viewProduct(product) {\n            this.$toast.add({severity: 'info', summary: 'Product Selected', detail: product.name});\n        },\n        deleteProduct(product) {\n            this.products = this.products.filter((p) => p.id !== product.id);\n            this.$toast.add({severity: 'info', summary: 'Product Deleted', detail: product.name});\n            this.selectedProduct = null;\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>DataTable <span>ContextMenu</span></h1>\n        <p>CDataTable has exclusive integration with ContextMenu.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <DataTable\n          :value=\"products\"\n          contextMenu\n          :contextMenuSelection.sync=\"selectedProduct\"\n          @row-contextmenu=\"onRowContextMenu\"\n          responsiveLayout=\"scroll\">\n          <Column field=\"code\" header=\"Code\"></Column>\n          <Column field=\"name\" header=\"Name\"></Column>\n          <Column field=\"category\" header=\"Category\"></Column>\n          <Column field=\"price\" header=\"Price\">\n            <template #body=\"slotProps\">\n              {{ formatCurrency(slotProps.data.price) }}\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n\n      <ContextMenu :model=\"menuModel\" ref=\"cm\" />\n    </div>\n\n    <DataTableContextMenuDoc />\n  </div>\n</template>\n\n<script>\nimport DataTableContextMenuDoc from '@/doc/datatable/ContextMenu.vue'\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  components: { DataTableContextMenuDoc },\n  data() {\n    return {\n      products: null,\n      selectedProduct: null,\n      menuModel: [\n        { label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.selectedProduct) },\n        { label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.selectedProduct) }\n      ]\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  },\n  methods: {\n    onRowContextMenu(event) {\n      this.$refs.cm.show(event.originalEvent)\n    },\n    viewProduct(product) {\n      this.$toast.add({ severity: 'info', summary: 'Product Selected', detail: product.name })\n    },\n    deleteProduct(product) {\n      this.products = this.products.filter((p) => p.id !== product.id)\n      this.$toast.add({ severity: 'info', summary: 'Product Deleted', detail: product.name })\n      this.selectedProduct = null\n    },\n    formatCurrency(value) {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n    }\n  }\n}\n</script>\n"],"names":["_sfc_main","DataTableContextMenuDoc","ProductService","data","event","product","p","value"],"mappings":"8OAYA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,CACA,MAAA,wiBAcA,EACA,UAAA,CACA,MAAA,21CAuCA,CACA,CACA,CACA,qUCnCAA,EAAA,CACA,WAAA,CAAA,wBAAAC,CAAA,EACA,MAAA,CACA,MAAA,CACA,SAAA,KACA,gBAAA,KACA,UAAA,CACA,CAAA,MAAA,OAAA,KAAA,qBAAA,QAAA,IAAA,KAAA,YAAA,KAAA,eAAA,CAAA,EACA,CAAA,MAAA,SAAA,KAAA,oBAAA,QAAA,IAAA,KAAA,cAAA,KAAA,eAAA,CAAA,CACA,CACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAC,CACA,EACA,SAAA,CACA,KAAA,eAAA,iBAAA,EAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,EACA,QAAA,CACA,iBAAAC,EAAA,CACA,KAAA,MAAA,GAAA,KAAAA,EAAA,aAAA,CACA,EACA,YAAAC,EAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,mBAAA,OAAAA,EAAA,IAAA,CAAA,CACA,EACA,cAAAA,EAAA,CACA,KAAA,SAAA,KAAA,SAAA,OAAAC,GAAAA,EAAA,KAAAD,EAAA,EAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,kBAAA,OAAAA,EAAA,IAAA,CAAA,EACA,KAAA,gBAAA,IACA,EACA,eAAAE,EAAA,CACA,OAAAA,EAAA,eAAA,QAAA,CAAA,MAAA,WAAA,SAAA,KAAA,CAAA,CACA,CACA,CACA"}