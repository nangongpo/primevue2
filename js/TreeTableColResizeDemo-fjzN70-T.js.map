{"version":3,"file":"TreeTableColResizeDemo-fjzN70-T.js","sources":["../../src/doc/treetable/ColResize.vue","../../src/views/treetable/TreeTableColResizeDemo.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"sourceCode1\" />\n        <DocSectionCode :code=\"sourceCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h3>Fit Mode</h3>\n<TreeTable :value=\"nodes\" :resizableColumns=\"true\" columnResizeMode=\"fit\">\n    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n    <Column field=\"size\" header=\"Size\"></Column>\n    <Column field=\"type\" header=\"Type\"></Column>\n</TreeTable>\n\n<h3>Expand Mode</h3>\n<TreeTable :value=\"nodes\" :resizableColumns=\"true\" columnResizeMode=\"expand\">\n    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n    <Column field=\"size\" header=\"Size\"></Column>\n    <Column field=\"type\" header=\"Type\"></Column>\n</TreeTable>\n        `\n      },\n      sourceCode2: {\n        basic: `\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>TreeTable <span>Column Resize</span></h1>\n        <p>\n          Columns can be resized using drag drop by setting the resizableColumns\n          to true. There are two resize modes; \"fit\" and \"expand\". Fit is the\n          default one and the overall table width does not change when a column\n          is resized. In \"expand\" mode, table width also changes along with the\n          column width.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Fit Mode</h5>\n        <TreeTable :value=\"nodes\" :resizableColumns=\"true\" columnResizeMode=\"fit\" showGridlines>\n          <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n          <Column field=\"size\" header=\"Size\"></Column>\n          <Column field=\"type\" header=\"Type\"></Column>\n        </TreeTable>\n      </div>\n\n      <div class=\"card\">\n        <h5>Expand Mode</h5>\n        <TreeTable :value=\"nodes\" :resizableColumns=\"true\" columnResizeMode=\"expand\" showGridlines>\n          <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n          <Column field=\"size\" header=\"Size\"></Column>\n          <Column field=\"type\" header=\"Type\"></Column>\n        </TreeTable>\n      </div>\n    </div>\n\n    <TreeTableColResizeDoc />\n  </div>\n</template>\n\n<script>\nimport TreeTableColResizeDoc from '@/doc/treetable/ColResize.vue'\nimport NodeService from '../../service/NodeService'\n\nexport default {\n  data() {\n    return {\n      nodes: null\n    }\n  },\n  nodeService: null,\n  created() {\n    this.nodeService = new NodeService()\n  },\n  mounted() {\n    this.nodeService.getTreeTableNodes().then((data) => (this.nodes = data))\n  },\n  components: { TreeTableColResizeDoc }\n}\n</script>\n"],"names":["_sfc_main","NodeService","data","TreeTableColResizeDoc"],"mappings":"gPAYA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,4jBAeA,EACA,YAAA,CACA,MAAA,4WAkBA,CACA,CACA,CACA,0UCXAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,MAAA,IACA,CACA,EACA,YAAA,KACA,SAAA,CACA,KAAA,YAAA,IAAAC,CACA,EACA,SAAA,CACA,KAAA,YAAA,oBAAA,KAAAC,GAAA,KAAA,MAAAA,CAAA,CACA,EACA,WAAA,CAAA,sBAAAC,CAAA,CACA"}