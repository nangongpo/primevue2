{"version":3,"file":"DynamicColumns-legacy-Bzs69cti.js","sources":["../../src/doc/datatable/DynamicColumns.vue","../../src/views/datatable/DynamicColumns.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"baseCode\" />\n        <DocSectionCode :code=\"baseCode2\" importCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\n<DataTable :value=\"products\" responsiveLayout=\"scroll\">\n    <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\"></Column>\n</DataTable>\n        `\n      },\n      baseCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            columns: null,\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'code', header: 'Code'},\n            {field: 'name', header: 'Name'},\n            {field: 'category', header: 'Category'},\n            {field: 'quantity', header: 'Quantity'}\n        ];\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>DataTable <span>Dynamic Columns</span></h1>\n        <p>Columns can be defined dynamically using the v-for directive.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n          <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\"></Column>\n        </DataTable>\n      </div>\n    </div>\n\n    <DataTableTDynamicColumnsDoc />\n  </div>\n</template>\n\n<script>\nimport DataTableTDynamicColumnsDoc from '@/doc/datatable/DynamicColumns.vue'\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  components: { DataTableTDynamicColumnsDoc },\n  data() {\n    return {\n      columns: null,\n      products: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n\n    this.columns = [\n      { field: 'code', header: 'Code' },\n      { field: 'name', header: 'Name' },\n      { field: 'category', header: 'Category' },\n      { field: 'quantity', header: 'Quantity' }\n    ]\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  }\n}\n</script>\n"],"names":["data","baseCode","basic","baseCode2","components","DataTableTDynamicColumnsDoc","columns","products","productService","created","this","ProductService","field","header","mounted","_this","getProductsSmall","then"],"mappings":"qdAYA,QAAA,CACAA,KAAAA,WACA,MAAA,CACAC,SAAA,CACAC,kMAMAC,UAAA,CACAD,MA0BA,gpBAEA,0TC1BA,CACAE,WAAA,CAAAC,4BAAAA,GACAL,gBACA,MAAA,CACAM,QAAA,KACAC,SAAA,KAEA,EACAC,eAAA,KACAC,QAAAA,WACAC,KAAAF,eAAA,IAAAG,EAEAD,KAAAJ,QAAA,CACA,CAAAM,MAAA,OAAAC,OAAA,QACA,CAAAD,MAAA,OAAAC,OAAA,QACA,CAAAD,MAAA,WAAAC,OAAA,YACA,CAAAD,MAAA,WAAAC,OAAA,YAEA,EACAC,uBAAAC,EAAAL,KACAA,KAAAF,eAAAQ,mBAAAC,MAAA,SAAAjB,GAAA,OAAAe,EAAAR,SAAAP,CAAA,GACA"}