{"version":3,"file":"SidebarDemo-BBPPqeiM.js","sources":["../../src/doc/sidebar/Documentation.vue","../../src/doc/sidebar/SourceCode.vue","../../src/doc/sidebar/index.vue","../../src/views/sidebar/SidebarDemo.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      Sidebar is used as a container and visibility is controlled with\n      <i>visible</i> property that requires the sync operator for two-way\n      binding.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n\n    <h5>Position</h5>\n    <p>\n      Sidebar can either be located on the left (default), right, top or bottom\n      of the screen depending on the <i>position</i> property.\n    </p>\n    <DocSectionCode :code=\"positionCode\" />\n\n    <h5>Size</h5>\n    <p>\n      Sidebar size can be changed using a fixed value or using one of the three\n      predefined ones.\n    </p>\n    <DocSectionCode :code=\"sizeCode\" />\n\n    <h5>Full Screen</h5>\n    <p>Full screen mode allows the sidebar to cover whole screen.</p>\n    <DocSectionCode :code=\"fullScreenCode\" />\n\n    <h5>Properties</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>visible</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Specifies the visibility of the dialog.</td>\n          </tr>\n          <tr>\n            <td>position</td>\n            <td>string</td>\n            <td>left</td>\n            <td>\n              Specifies the position of the sidebar, valid values are \"left\",\n              \"right\", \"top\", \"bottom\" and \"full\".\n            </td>\n          </tr>\n          <tr>\n            <td>baseZIndex</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Base zIndex value to use in layering.</td>\n          </tr>\n          <tr>\n            <td>autoZIndex</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to automatically manage layering.</td>\n          </tr>\n          <tr>\n            <td>dismissable</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether clicking outside closes the panel.</td>\n          </tr>\n          <tr>\n            <td>showCloseIcon</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to display a close icon inside the panel.</td>\n          </tr>\n          <tr>\n            <td>modal</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to a modal layer behind the sidebar.</td>\n          </tr>\n          <tr>\n            <td>ariaCloseLabel</td>\n            <td>string</td>\n            <td>close</td>\n            <td>Aria label of the close icon.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Callback to invoke when sidebar gets hidden.</td>\n          </tr>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Callback to invoke when sidebar gets shown.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>header</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes\n      visit <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-sidebar</td>\n            <td>Container element</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-left</td>\n            <td>Container element of left sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-right</td>\n            <td>Container element of right sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-top</td>\n            <td>Container element of top sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-bottom</td>\n            <td>Container element of bottom sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-full</td>\n            <td>Container element of a full screen sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-active</td>\n            <td>Container element when sidebar is visible.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-close</td>\n            <td>Close anchor element.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-sm</td>\n            <td>Small sized sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-md</td>\n            <td>Medium sized sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-lg</td>\n            <td>Large sized sidebar.</td>\n          </tr>\n          <tr>\n            <td>p-sidebar-mask</td>\n            <td>Modal layer of the sidebar.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Sidebar from 'primevue2/sidebar';\n        `\n      },\n      baseCode: {\n        basic: `\n<Sidebar :visible.sync=\"visibleLeft\">\n\tContent\n</Sidebar>\n\n<Button icon=\"pi pi-arrow-right\" @click=\"visibleLeft = true\" />\n        `\n      },\n      positionCode: {\n        basic: `\n<Sidebar :visible.sync=\"visibleRight\" position=\"right\">\n\tContent\n</Sidebar>\n        `\n      },\n      sizeCode: {\n        basic: `\n<Sidebar :visible.sync=\"visibleLeft\" class=\"p-sidebar-sm\"></Sidebar>\n<Sidebar :visible.sync=\"visibleLeft\" class=\"p-sidebar-md\"></Sidebar>\n<Sidebar :visible.sync=\"visibleLeft\" class=\"p-sidebar-lg\"></Sidebar>\n        `\n      },\n      fullScreenCode: {\n        basic: `\n<Sidebar :visible.sync=\"visibleFull\" position=\"full\">\n\tContent\n</Sidebar>\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/sidebar\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<Button icon=\"pi pi-arrow-right\" @click=\"visibleLeft = true\" class=\"mr-2\" />\n<Button icon=\"pi pi-arrow-left\" @click=\"visibleRight = true\" class=\"mr-2\"  />\n<Button icon=\"pi pi-arrow-down\" @click=\"visibleTop = true\" class=\"mr-2\"  />\n<Button icon=\"pi pi-arrow-up\" @click=\"visibleBottom = true\" class=\"mr-2\"  />\n<Button icon=\"pi pi-th-large\" @click=\"visibleFull = true\"  />\n\n<Sidebar :visible.sync=\"visibleLeft\" :baseZIndex=\"1000\">\n    <h3>Left Sidebar</h3>\n</Sidebar>\n\n<Sidebar :visible.sync=\"visibleRight\" :baseZIndex=\"1000\" position=\"right\">\n    <h3>Right Sidebar</h3>\n</Sidebar>\n\n<Sidebar :visible.sync=\"visibleTop\" :baseZIndex=\"1000\" position=\"top\">\n    <h3>Top Sidebar</h3>\n</Sidebar>\n\n<Sidebar :visible.sync=\"visibleBottom\" :baseZIndex=\"1000\" position=\"bottom\">\n    <h3>Bottom Sidebar</h3>\n</Sidebar>\n\n<Sidebar :visible.sync=\"visibleFull\" :baseZIndex=\"1000\" position=\"full\">\n    <h3>Full Screen</h3>\n</Sidebar>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tvisibleLeft: false,\n\t\t\tvisibleRight: false,\n\t\t\tvisibleTop: false,\n\t\t\tvisibleBottom: false,\n\t\t\tvisibleFull: false\n\t\t}\n\t}\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Sidebar</h1>\n                <p>Sidebar is a panel component displayed as an overlay at the edges of the screen.</p>\n            </div>\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <Button icon=\"pi pi-arrow-right\" @click=\"visibleLeft = true\" class=\"mr-2\" />\n                <Button icon=\"pi pi-arrow-left\" @click=\"visibleRight = true\" class=\"mr-2\"  />\n                <Button icon=\"pi pi-arrow-down\" @click=\"visibleTop = true\" class=\"mr-2\"  />\n                <Button icon=\"pi pi-arrow-up\" @click=\"visibleBottom = true\" class=\"mr-2\"  />\n                <Button icon=\"pi pi-th-large\" @click=\"visibleFull = true\"  />\n\n                <Sidebar :visible.sync=\"visibleLeft\" :baseZIndex=\"1000\">\n                    <h3>Left Sidebar</h3>\n                </Sidebar>\n\n                <Sidebar :visible.sync=\"visibleRight\" :baseZIndex=\"1000\" position=\"right\">\n                    <h3>Right Sidebar</h3>\n                </Sidebar>\n\n                <Sidebar :visible.sync=\"visibleTop\" :baseZIndex=\"1000\" position=\"top\">\n                    <h3>Top Sidebar</h3>\n                </Sidebar>\n\n                <Sidebar :visible.sync=\"visibleBottom\" :baseZIndex=\"1000\" position=\"bottom\">\n                    <h3>Bottom Sidebar</h3>\n                </Sidebar>\n\n                <Sidebar :visible.sync=\"visibleFull\" :baseZIndex=\"1000\" position=\"full\">\n                    <h3>Full Screen</h3>\n                </Sidebar>\n            </div>\n        </div>\n\n        <SidebarDoc/>\n    </div>\n</template>\n\n<script>\nimport SidebarDoc from '@/doc/sidebar/index.vue'\n\nexport default {\n  data() {\n    return {\n      visibleLeft: false,\n      visibleRight: false,\n      visibleTop: false,\n      visibleBottom: false,\n      visibleFull: false\n    }\n  },\n  components: {\n    'SidebarDoc': SidebarDoc\n  }\n}\n</script>\n"],"names":["_sfc_main","Documentation","SourceCode","SidebarDoc"],"mappings":"kMAqNA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,sDAGA,EACA,SAAA,CACA,MAAA,4IAOA,EACA,aAAA,CACA,MAAA,2FAKA,EACA,SAAA,CACA,MAAA,8NAKA,EACA,eAAA,CACA,MAAA,yFAKA,CACA,CACA,CACA,s7JC9OAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,u7BA2BA,EACA,YAAA,CACA,MAAA,0LAaA,CACA,CACA,CACA,wdClDAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTC4BAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,YAAA,GACA,aAAA,GACA,WAAA,GACA,cAAA,GACA,YAAA,EACA,CACA,EACA,WAAA,CACA,WAAAG,CACA,CACA"}