{"version":3,"file":"index-legacy-BiEQh5Ev.js","sources":["../../src/doc/menu/Documentation.vue","../../src/doc/menu/SourceCode.vue","../../src/doc/menu/index.vue","../../src/views/menu/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>MenuModel</h5>\n    <p>\n      Menu uses the common MenuModel API to define the items, visit\n      <router-link to=\"/menumodel\">MenuModel API</router-link> for details.\n    </p>\n\n    <h5>Getting Started</h5>\n    <p>Menu requires a collection of menuitems as its model.</p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>SubMenus</h5>\n    <p>Menu supports one level of nesting via subitems of an item.</p>\n    <DocSectionCode :code=\"subMenusCode\" importCode />\n\n    <h5>Popup Mode</h5>\n    <p>\n      Menu is inline by default whereas popup mode is supported by enabling popup property and calling toggle method\n      with an event of the target.\n    </p>\n    <DocSectionCode :code=\"popupModeCode\" />\n    <DocSectionCode :code=\"popupModeCode2\" importCode />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>model</td>\n            <td>array</td>\n            <td>null</td>\n            <td>An array of menuitems.</td>\n          </tr>\n          <tr>\n            <td>popup</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Defines if menu would displayed as a popup.</td>\n          </tr>\n          <tr>\n            <td>appendTo</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Id of the element or \"body\" for document where the overlay should be appended to.</td>\n          </tr>\n          <tr>\n            <td>baseZIndex</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Base zIndex value to use in layering.</td>\n          </tr>\n          <tr>\n            <td>autoZIndex</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to automatically manage layering.</td>\n          </tr>\n          <tr>\n            <td>exact</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to apply 'router-link-active-exact' class if route exactly matches the item path.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Methods</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>toggle</td>\n            <td>event: Browser event</td>\n            <td>Toggles the visibility of the overlay.</td>\n          </tr>\n          <tr>\n            <td>show</td>\n            <td>\n              event: Browser event <br />\n              target: Optional target if event.target would not be used\n            </td>\n            <td>Shows the overlay.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Hides the overlay.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-menu</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-menu-list</td>\n            <td>List element.</td>\n          </tr>\n          <tr>\n            <td>p-menuitem</td>\n            <td>Menuitem element.</td>\n          </tr>\n          <tr>\n            <td>p-menuitem-text</td>\n            <td>Label of a menuitem.</td>\n          </tr>\n          <tr>\n            <td>p-menuitem-icon</td>\n            <td>Icon of a menuitem.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Menu from 'primevue2/menu';\n        `\n      },\n      baseCode: {\n        basic: `\n<Menu :model=\"items\" />\n        `\n      },\n      baseCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Update',\n\t\t\t\t\ticon: 'pi pi-refresh',\n\t\t\t\t\tcommand: () => {\n\t\t\t\t\t\tthis.$toast.add({severity:'success', summary:'Updated', detail:'Data Updated', life: 3000});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Delete',\n\t\t\t\t\ticon: 'pi pi-times',\n\t\t\t\t\tcommand: () => {\n\t\t\t\t\t\tthis.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Vue Website',\n\t\t\t\t\ticon: 'pi pi-external-link',\n\t\t\t\t\turl: 'https://vuejs.org/'\n\t\t\t\t},\n\t\t\t\t{\n                    label: 'Router',\n                    icon: 'pi pi-upload',\n                    to: '/fileupload'\n                }\n\t\t\t]\n\t\t}\n\t}\n}\n        `\n      },\n      subMenusCode: {\n        basic: `\nconst items: [\n    {\n        label: 'Options',\n        items: [{label: 'New', icon: 'pi pi-fw pi-plus', command:() => {} },\n                {label: 'Delete', icon: 'pi pi-fw pi-trash', url: 'https://www.primetek.com.tr'}]\n    },\n    {\n        label: 'Account',\n        items: [{label: 'Options', icon: 'pi pi-fw pi-cog', to: '/options'},\n                {label: 'Sign Out', icon: 'pi pi-fw pi-power-off', to: '/logout'} ]\n    }\n];\n        `\n      },\n      popupModeCode: {\n        basic: `\n<Button type=\"button\" label=\"Toggle\" @click=\"toggle\" />\n<Menu ref=\"menu\" :model=\"items\" :popup=\"true\" />\n        `\n      },\n      popupModeCode2: {\n        basic: `\ntoggle(event) {\n    this.$refs.menu.toggle(event);\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/menu\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h3>Inline</h3>\n<Menu :model=\"items\" />\n\n<h3>Overlay</h3>\n<Button type=\"button\" label=\"Toggle\" @click=\"toggle\" aria-haspopup=\"true\" aria-controls=\"overlay_menu\" />\n<Menu id=\"overlay_menu\" ref=\"menu\" :model=\"items\" :popup=\"true\" />\n\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    data() {\n        return {\n            items: [\n                {\n                    label: 'Options',\n                    items: [{\n                        label: 'Update',\n                        icon: 'pi pi-refresh',\n                        command: () => {\n                            this.$toast.add({severity:'success', summary:'Updated', detail:'Data Updated', life: 3000});\n                        }\n                    },\n                    {\n                        label: 'Delete',\n                        icon: 'pi pi-times',\n                        command: () => {\n                            this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000});\n                        }\n                    }\n                ]},\n                {\n                    label: 'Navigate',\n                    items: [{\n                        label: 'Vue Website',\n                        icon: 'pi pi-external-link',\n                        url: 'https://vuejs.org/'\n                    },\n                    {\n                        label: 'Router',\n                        icon: 'pi pi-upload',\n                        to: '/fileupload'\n                    }\n                ]}\n            ]\n        }\n    },\n    methods: {\n        toggle(event) {\n            this.$refs.menu.toggle(event);\n        },\n        save() {\n            this.$toast.add({severity: 'success', summary: 'Success', detail: 'Data Saved', life: 3000});\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Menu</h1>\n        <p>Menu is a navigation / command component that supports dynamic and static positioning.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Inline</h5>\n        <Menu :model=\"items\" />\n\n        <h5>Overlay</h5>\n        <Button type=\"button\" label=\"Toggle\" @click=\"toggle\" aria-haspopup=\"true\" aria-controls=\"overlay_menu\" />\n        <Menu id=\"overlay_menu\" ref=\"menu\" :model=\"items\" :popup=\"true\" />\n      </div>\n    </div>\n\n    <MenuDoc />\n  </div>\n</template>\n\n<script>\nimport MenuDoc from '@/doc/menu/index.vue'\n\nexport default {\n  data() {\n    return {\n      items: [\n        {\n          label: 'Options',\n          items: [{\n            label: 'Update',\n            icon: 'pi pi-refresh',\n            command: () => {\n              this.$toast.add({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 })\n            }\n          },\n          {\n            label: 'Delete',\n            icon: 'pi pi-times',\n            command: () => {\n              this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 })\n            }\n          }\n          ]\n        },\n        {\n          label: 'Navigate',\n          items: [{\n            label: 'Vue Website',\n            icon: 'pi pi-external-link',\n            url: 'https://vuejs.org/'\n          },\n          {\n            label: 'Router',\n            icon: 'pi pi-upload',\n            to: '/fileupload'\n          }\n          ]\n        }\n      ]\n    }\n  },\n  methods: {\n    toggle(event) {\n      this.$refs.menu.toggle(event)\n    },\n    save() {\n      this.$toast.add({ severity: 'success', summary: 'Success', detail: 'Data Saved', life: 3000 })\n    }\n  },\n  components: {\n    'MenuDoc': MenuDoc\n  }\n}\n</script>\n"],"names":["name","data","importCode","basic","baseCode","baseCode2","subMenusCode","popupModeCode","popupModeCode2","sourceCode1","sourceCode2","components","Documentation","SourceCode","_this","this","items","label","icon","command","$toast","add","severity","summary","detail","life","url","to","methods","toggle","event","$refs","menu","save","MenuDoc"],"mappings":"0TAiKA,QAAA,CACAA,KAAA,gBACAC,gBACA,MAAA,CACAC,WAAA,CACAC,wDAIAC,SAAA,CACAD,MAAA,uCAIAE,UAAA,CACAF,MAAA,20BAmCAG,aAAA,CACAH,MAcA,ycACAI,cAAA,CACAJ,MAIA,yHACAK,eAAA,CACAL,4EAOA,85HCjOA,CACAH,KAAA,aACAC,gBACA,MAAA,CACAQ,YAAA,CACAN,mQAUAO,YAAA,CACAP,MAAA,+hDAkDA,+bClEA,CACAQ,WAAA,CAAAC,cAAAA,EAAAC,WAAAA,kSCUA,CACAZ,KAAA,eAAAa,EAAAC,KACA,MAAA,CACAC,MAAA,CACA,CACAC,MAAA,UACAD,MAAA,CAAA,CACAC,MAAA,SACAC,KAAA,gBACAC,QAAA,WACAL,EAAAM,OAAAC,IAAA,CAAAC,SAAA,UAAAC,QAAA,UAAAC,OAAA,eAAAC,KAAA,KACA,GAEA,CACAR,MAAA,SACAC,KAAA,cACAC,QAAA,WACAL,EAAAM,OAAAC,IAAA,CAAAC,SAAA,OAAAC,QAAA,SAAAC,OAAA,eAAAC,KAAA,KACA,KAIA,CACAR,MAAA,WACAD,MAAA,CAAA,CACAC,MAAA,cACAC,KAAA,sBACAQ,IAAA,sBAEA,CACAT,MAAA,SACAC,KAAA,eACAS,GAAA,kBAMA,EACAC,QAAA,CACAC,gBAAAC,GACAf,KAAAgB,MAAAC,KAAAH,OAAAC,EACA,EACAG,KAAA,WACAlB,KAAAK,OAAAC,IAAA,CAAAC,SAAA,UAAAC,QAAA,UAAAC,OAAA,aAAAC,KAAA,KACA,GAEAd,WAAA,CACAuB,QAAAA"}