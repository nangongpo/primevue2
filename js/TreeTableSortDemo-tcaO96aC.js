import{n as o}from"./app.component-BAbvz7X_.js";import{N as a}from"./NodeService-DGU-G-ef.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const l={data(){return{sourceCode1:{basic:'\n<h3>Single Column Sorting</h3>\n<TreeTable :value="nodes" sortMode="single">\n    <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n    <Column field="size" header="Size" :sortable="true"></Column>\n    <Column field="type" header="Type" :sortable="true"></Column>\n</TreeTable>\n\n<h3>Multiple Column Sorting</h3>\n<TreeTable :value="nodes" sortMode="multiple">\n    <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n    <Column field="size" header="Size" :sortable="true"></Column>\n    <Column field="type" header="Type" :sortable="true"></Column>\n</TreeTable>\n\n<h3>Removable Sort</h3>\n<TreeTable :value="nodes" sortMode="single" removableSort>\n    <Column field="name" header="Name" :expander="true" :sortable="true"></Column>\n    <Column field="size" header="Size" :sortable="true"></Column>\n    <Column field="type" header="Type" :sortable="true"></Column>\n</TreeTable>\n        '},sourceCode2:{basic:"\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n\n        "}}}};var n=function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("DocSectionCode",{attrs:{code:t.sourceCode1}}),e("DocSectionCode",{attrs:{code:t.sourceCode2,importCode:""}})],1)],1)],1)},s=[],i=o(l,n,s,!1,null,null);const d=i.exports,u={data(){return{nodes:null}},nodeService:null,created(){this.nodeService=new a},mounted(){this.nodeService.getTreeTableNodes().then(r=>this.nodes=r)},components:{TreeTableSortDoc:d}};var m=function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Single Column Sorting")]),e("TreeTable",{attrs:{value:t.nodes,sortMode:"single"}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0,sortable:!0}}),e("Column",{attrs:{field:"size",header:"Size",sortable:!0}}),e("Column",{attrs:{field:"type",header:"Type",sortable:!0}})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Multiple Column Sorting")]),e("TreeTable",{attrs:{value:t.nodes,sortMode:"multiple"}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0,sortable:!0}}),e("Column",{attrs:{field:"size",header:"Size",sortable:!0}}),e("Column",{attrs:{field:"type",header:"Type",sortable:!0}})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Removable Sort")]),e("TreeTable",{attrs:{value:t.nodes,sortMode:"single",removableSort:""}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0,sortable:!0}}),e("Column",{attrs:{field:"size",header:"Size",sortable:!0}}),e("Column",{attrs:{field:"type",header:"Type",sortable:!0}})],1)],1)]),e("TreeTableSortDoc")],1)},c=[function(){var r=this,t=r._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[r._v("TreeTable "),t("span",[r._v("Sort")])]),t("p",[r._v("TreeTable supports both single column and multiple column sorting..")])])])}],v=o(u,m,c,!1,null,null);const f=v.exports;export{f as default};
//# sourceMappingURL=TreeTableSortDemo-tcaO96aC.js.map
