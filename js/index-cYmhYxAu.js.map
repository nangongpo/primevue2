{"version":3,"file":"index-cYmhYxAu.js","sources":["../../src/doc/multiselect/Documentation.vue","../../src/doc/multiselect/SourceCode.vue","../../src/doc/multiselect/index.vue","../../src/views/multiselect/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      MultiSelect requires a value to bind and a collection of arbitrary objects along with the\n      <i>optionLabel</i> property to specify the label property of the option.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Chips Display</h5>\n    <p>\n      A comma separated list is used by default to display selected items whereas alternative chip mode is provided\n      using the <i>display</i> property to visualize the items as tokens.\n    </p>\n    <DocSectionCode :code=\"chipsDisplayCode\" />\n\n    <h5>Custom Content</h5>\n    <p>\n      Label of an option is used as the display text of an item by default, for custom content support define an\n      <i>option</i> template that gets the option instance as a parameter.\n    </p>\n    <p>\n      In addition the <i>value</i> template can be used to customize the selected values display instead of the default\n      comma separated list.\n    </p>\n    <DocSectionCode :code=\"customContentCode\" />\n\n    <h5>Filter</h5>\n    <p>\n      Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable\n      the <i>filter</i> property.\n    </p>\n    <DocSectionCode :code=\"filterCode\" />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>options</td>\n            <td>array</td>\n            <td>null</td>\n            <td>An array of selectitems to display as the available options.</td>\n          </tr>\n          <tr>\n            <td>optionLabel</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>Property name or getter function to use as the label of an option.</td>\n          </tr>\n          <tr>\n            <td>optionValue</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the value of an option, defaults to the option itself when not\n              defined.\n            </td>\n          </tr>\n          <tr>\n            <td>optionDisabled</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the disabled flag of an option, defaults to false when not\n              defined.\n            </td>\n          </tr>\n          <tr>\n            <td>scrollHeight</td>\n            <td>string</td>\n            <td>200px</td>\n            <td>Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</td>\n          </tr>\n          <tr>\n            <td>placeholder</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Label to display when there are no selections.</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When present, it specifies that the component should be disabled.</td>\n          </tr>\n          <tr>\n            <td>filter</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When specified, displays an input field to filter the items on keyup.</td>\n          </tr>\n          <tr>\n            <td>tabindex</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Index of the element in tabbing order.</td>\n          </tr>\n          <tr>\n            <td>inputId</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Identifier of the underlying input element.</td>\n          </tr>\n          <tr>\n            <td>dataKey</td>\n            <td>string</td>\n            <td>null</td>\n            <td>A property to uniquely identify an option.</td>\n          </tr>\n          <tr>\n            <td>filterPlaceholder</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Placeholder text to show when filter input is empty.</td>\n          </tr>\n          <tr>\n            <td>filterLocale</td>\n            <td>string</td>\n            <td>undefined</td>\n            <td>Locale to use in filtering. The default locale is the host environment's current locale.</td>\n          </tr>\n          <tr>\n            <td>ariaLabelledBy</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Establishes relationships between the component and label(s) where its value should be one or more element\n              IDs.\n            </td>\n          </tr>\n          <tr>\n            <td>appendTo</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Id of the element or \"body\" for document where the overlay should be appended to.</td>\n          </tr>\n          <tr>\n            <td>emptyFilterMessage</td>\n            <td>string</td>\n            <td>No results found</td>\n            <td>Text to display when filtering does not return any results.</td>\n          </tr>\n          <tr>\n            <td>display</td>\n            <td>string</td>\n            <td>comma</td>\n            <td>Defines how the selected items are displayed, valid values are \"comma\" and \"chip\".</td>\n          </tr>\n          <tr>\n            <td>selectionLimit</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Maximum number of selectable items.</td>\n          </tr>\n          <tr>\n            <td>showToggleAll</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to show the header checkbox to toggle the selection of all items at once.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>change</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Selected option value\n            </td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>input</td>\n            <td>value: New value</td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>before-show</td>\n            <td>-</td>\n            <td>Callback to invoke before the overlay is shown.</td>\n          </tr>\n          <tr>\n            <td>before-hide</td>\n            <td>-</td>\n            <td>Callback to invoke before the overlay is hidden.</td>\n          </tr>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Callback to invoke when the overlay is shown.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Callback to invoke when the overlay is hidden.</td>\n          </tr>\n          <tr>\n            <td>filter</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Filter value\n            </td>\n            <td>Callback to invoke on filter input.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Methods</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Shows the overlay.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Hides the overlay.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>\n              value: Value of the component <br />\n              placeholder: Placeholder prop value\n            </td>\n          </tr>\n          <tr>\n            <td>options</td>\n            <td>\n              option: Option instance <br />\n              index: Index of the option\n            </td>\n          </tr>\n          <tr>\n            <td>indicator</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-multiselect</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-label-container</td>\n            <td>Container of the label to display selected items.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-label-container</td>\n            <td>Label to display selected items.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-trigger</td>\n            <td>Dropdown button.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-filter-container</td>\n            <td>Container of filter input.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-panel</td>\n            <td>Overlay panel for items.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-items</td>\n            <td>List container of items.</td>\n          </tr>\n          <tr>\n            <td>p-multiselect-item</td>\n            <td>An item in the list.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport MultiSelect from 'primevue2/multiselect';\n        `\n      },\n      baseCode: {\n        basic: `\n<MultiSelect v-model=\"selectedCars\" :options=\"cars\" optionLabel=\"brand\" placeholder=\"Select Brands\" />\n        `\n      },\n      baseCode2: {\n        basic: `\ndata() {\n\treturn {\n\t\tselectedCars: null,\n\t\tcars: [\n\t\t\t{brand: 'Audi', value: 'Audi'},\n\t\t\t{brand: 'BMW', value: 'BMW'},\n\t\t\t{brand: 'Fiat', value: 'Fiat'},\n\t\t\t{brand: 'Honda', value: 'Honda'},\n\t\t\t{brand: 'Jaguar', value: 'Jaguar'},\n\t\t\t{brand: 'Mercedes', value: 'Mercedes'},\n\t\t\t{brand: 'Renault', value: 'Renault'},\n\t\t\t{brand: 'Volkswagen', value: 'Volkswagen'},\n\t\t\t{brand: 'Volvo', value: 'Volvo'}\n\t\t]\n\t}\n}\n        `\n      },\n      chipsDisplayCode: {\n        basic: `\n<MultiSelect v-model=\"selectedCars\" :options=\"cars\" optionLabel=\"brand\" placeholder=\"Select Brands\" display=\"chip\"/>\n        `\n      },\n      customContentCode: {\n        basic: `\n<MultiSelect v-model=\"selectedCars2\" :options=\"cars\" optionLabel=\"brand\" placeholder=\"Select a Car\">\n\t<template #value=\"slotProps\">\n\t\t<div class=\"p-multiselect-car-token\" v-for=\"option of slotProps.value\" :key=\"option.brand\">\n\t\t\t<img :alt=\"option.brand\" :src=\"'demo/images/car/' + option.brand + '.png'\" />\n\t\t\t<span>{{option.brand}}</span>\n\t\t</div>\n\t\t<template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n            Select Brands\n        <template>\n\t</template>\n\t<template #option=\"slotProps\">\n\t\t<div class=\"p-multiselect-car-option\">\n\t\t\t<img :alt=\"slotProps.option.brand\" :src=\"'demo/images/car/' + slotProps.option.brand + '.png'\" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</MultiSelect>\n        `\n      },\n      filterCode: {\n        basic: `\n<MultiSelect v-model=\"selectedCars\" :options=\"cars\" :filter=\"true\" optionLabel=\"brand\" placeholder=\"Select Brands\"/>\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/multiselect\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n    <DocSectionCode :code=\"sourceCode3\" importStyle />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h5>Basic</h5>\n<MultiSelect v-model=\"selectedCities1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select a City\" />\n\n<h5>Chips</h5>\n<MultiSelect v-model=\"selectedCities2\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select a City\" display=\"chip\"/>\n\n<h5>Advanced with Templating and Filtering</h5>\n<MultiSelect v-model=\"selectedCountries\" :options=\"countries\" optionLabel=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n    <template #value=\"slotProps\">\n        <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + option.code.toLowerCase()\" />\n            <div>{{option.name}}</div>\n        </div>\n        <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n            Select Countries\n        </template>\n    </template>\n    <template #option=\"slotProps\">\n        <div class=\"country-item\">\n            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" />\n            <div>{{slotProps.option.name}}</div>\n        </div>\n    </template>\n</MultiSelect>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    data() {\n        return {\n            selectedCities: null,\n            selectedCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ]\n        }\n    }\n}\n        `\n      },\n      sourceCode3: {\n        basic: `\n.p-multiselect {\n    min-width: 15rem;\n}\n\n:deep(.multiselect-custom) {\n    .p-multiselect-label:not(.p-placeholder) {\n        padding-top: .25rem;\n        padding-bottom: .25rem;\n    }\n\n    .country-item-value {\n        padding: .25rem .5rem;\n        border-radius: 3px;\n        display: inline-flex;\n        margin-right: .5rem;\n        background-color: var(--primary-color);\n        color: var(--primary-color-text);\n\n        img.flag {\n            width: 17px;\n        }\n    }\n}\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>MultiSelect</h1>\n        <p>MultiSelect is used to multiple values from a list of options.</p>\n      </div>\n      <AppInputStyleSwitch />\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Basic</h5>\n        <MultiSelect v-model=\"selectedCities1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select a City\" />\n\n        <h5>Chips</h5>\n        <MultiSelect\n          v-model=\"selectedCities2\"\n          :options=\"cities\"\n          optionLabel=\"name\"\n          placeholder=\"Select a City\"\n          display=\"chip\" />\n\n        <h5>Advanced with Templating and Filtering</h5>\n        <MultiSelect\n          v-model=\"selectedCountries\"\n          :options=\"countries\"\n          optionLabel=\"name\"\n          placeholder=\"Select Countries\"\n          :filter=\"true\"\n          class=\"multiselect-custom\">\n          <template #value=\"slotProps\">\n            <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n              <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + option.code.toLowerCase()\" />\n              <div>{{ option.name }}</div>\n            </div>\n            <template v-if=\"!slotProps.value || slotProps.value.length === 0\"> Select Countries </template>\n          </template>\n          <template #option=\"slotProps\">\n            <div class=\"country-item\">\n              <img\n                src=\"../../assets/images/flag_placeholder.png\"\n                :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" />\n              <div>{{ slotProps.option.name }}</div>\n            </div>\n          </template>\n        </MultiSelect>\n      </div>\n    </div>\n\n    <MultiSelectDoc />\n  </div>\n</template>\n\n<script>\nimport MultiSelectDoc from '@/doc/multiselect/index.vue'\n\nexport default {\n  data() {\n    return {\n      selectedCities1: null,\n      selectedCities2: null,\n      selectedCountries: null,\n      cities: [\n        { name: 'New York', code: 'NY' },\n        { name: 'Rome', code: 'RM' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Paris', code: 'PRS' }\n      ],\n      countries: [\n        { name: 'Australia', code: 'AU' },\n        { name: 'Brazil', code: 'BR' },\n        { name: 'China', code: 'CN' },\n        { name: 'Egypt', code: 'EG' },\n        { name: 'France', code: 'FR' },\n        { name: 'Germany', code: 'DE' },\n        { name: 'India', code: 'IN' },\n        { name: 'Japan', code: 'JP' },\n        { name: 'Spain', code: 'ES' },\n        { name: 'United States', code: 'US' }\n      ]\n    }\n  },\n  components: {\n    'MultiSelectDoc': MultiSelectDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.p-multiselect {\n  width: 18rem;\n}\n\n:deep(.multiselect-custom) {\n  .p-multiselect-label:not(.p-placeholder) {\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .country-item-value {\n    padding: 0.25rem 0.5rem;\n    border-radius: 3px;\n    display: inline-flex;\n    margin-right: 0.5rem;\n    background-color: var(--primary-color);\n    color: var(--primary-color-text);\n\n    img.flag {\n      width: 17px;\n    }\n  }\n}\n\n@media screen and (max-width: 640px) {\n  .p-multiselect {\n    width: 100%;\n  }\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","MultiSelectDoc"],"mappings":"gPAoWA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,8DAGA,EACA,SAAA,CACA,MAAA,oHAGA,EACA,UAAA,CACA,MAAA,kbAkBA,EACA,iBAAA,CACA,MAAA,kIAGA,EACA,kBAAA,CACA,MAAA,+vBAmBA,EACA,WAAA,CACA,MAAA,kIAGA,CACA,CACA,CACA,wqSCtZAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,+tCA0BA,EACA,YAAA,CACA,MAAA,q7BA6BA,EACA,YAAA,CACA,MAAA,sgBAyBA,CACA,CACA,CACA,4hBC7FAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCuCAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,gBAAA,KACA,gBAAA,KACA,kBAAA,KACA,OAAA,CACA,CAAA,KAAA,WAAA,KAAA,IAAA,EACA,CAAA,KAAA,OAAA,KAAA,IAAA,EACA,CAAA,KAAA,SAAA,KAAA,KAAA,EACA,CAAA,KAAA,WAAA,KAAA,KAAA,EACA,CAAA,KAAA,QAAA,KAAA,KAAA,CACA,EACA,UAAA,CACA,CAAA,KAAA,YAAA,KAAA,IAAA,EACA,CAAA,KAAA,SAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,SAAA,KAAA,IAAA,EACA,CAAA,KAAA,UAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,QAAA,KAAA,IAAA,EACA,CAAA,KAAA,gBAAA,KAAA,IAAA,CACA,CACA,CACA,EACA,WAAA,CACA,eAAAG,CACA,CACA"}