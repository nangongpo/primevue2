{"version":3,"file":"TerminalDemo-DbUcyUtM.js","sources":["../../src/doc/terminal/Documentation.vue","../../src/doc/terminal/SourceCode.vue","../../src/doc/terminal/index.vue","../../src/views/terminal/TerminalDemo.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>Commands are processed using an EventBus implementation called TerminalService.\n      Import this service into your component and subscribe to the <i>command</i> event to process the commands by\n      sending replies with the <i>response</i> event.</p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Properties</h5>\n    <p>Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.</p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>welcomeMessage</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Initial text to display on terminal.</td>\n          </tr>\n          <tr>\n            <td>prompt</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Prompt text for each command.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>Following is the list of structural style classes, for theming classes visit <router-link\n        to=\"/theming\">theming</router-link> page.</p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-terminal</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-terminal-content</td>\n            <td>Content of terminal.</td>\n          </tr>\n          <tr>\n            <td>p-terminal-prompt</td>\n            <td>Prompt text.</td>\n          </tr>\n          <tr>\n            <td>p-terminal-response</td>\n            <td>Command response.</td>\n          </tr>\n          <tr>\n            <td>p-terminal-input</td>\n            <td>Input element to enter commands.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Terminal from 'primevue2/terminal';\nimport TerminalService from 'primevue2/terminalservice';\n        `\n      },\n      baseCode: {\n        basic: `\n<Terminal welcomeMessage=\"Welcome to PrimeVue\" prompt=\"primevue $\" />\n        `\n      },\n      baseCode2: {\n        basic: `\nimport TerminalService from 'primevue2/terminalservice';\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.$emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.$on('command', this.commandHandler);\n    },\n    beforeDestroy() {\n        TerminalService.$off('command', this.commandHandler);\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/terminal\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n    <DocSectionCode :code=\"sourceCode3\" importStyle />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<p>Enter \"date\" to display the current date, \"greet {0}\" for a message and \"random\" to get a random number.</p>\n<Terminal welcomeMessage=\"Welcome to PrimeVue\" prompt=\"primevue $\" class=\"dark-demo-terminal\" />\n        `\n      },\n      sourceCode2: {\n        basic: `\nimport TerminalService from 'primevue2/terminalservice';\n\nexport default {\n    methods: {\n        commandHandler(text) {\n            let response;\n            let argsIndex = text.indexOf(' ');\n            let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text;\n\n            switch(command) {\n                case \"date\":\n                    response = 'Today is ' + new Date().toDateString();\n                    break;\n\n                case \"greet\":\n                    response = 'Hola ' + text.substring(argsIndex + 1);\n                    break;\n\n                case \"random\":\n                    response = Math.floor(Math.random() * 100);\n                    break;\n\n                default:\n                    response = \"Unknown command: \" + command;\n            }\n\n            TerminalService.emit('response', response);\n        }\n    },\n    mounted() {\n        TerminalService.on('command', this.commandHandler);\n    },\n    beforeDestroy() {\n        TerminalService.off('command', this.commandHandler);\n    }\n}\n        `\n      },\n      sourceCode3: {\n        basic: `\np {\n    margin-top: 0;\n}\n\n:deep(.dark-demo-terminal) {\n    background-color: #212121;\n    color: #ffffff;\n\n    .p-terminal-command {\n        color: #80CBC4;\n    }\n\n    .p-terminal-prompt {\n        color: #FFD54F;\n    }\n\n    .p-terminal-response {\n        color: #9FA8DA;\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Terminal</h1>\n        <p>Terminal is a text based user interface.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <p>Enter \"date\" to display the current date, \"greet {0}\" for a message and \"random\" to get a random number.</p>\n        <Terminal welcomeMessage=\"Welcome to PrimeVue\" prompt=\"primevue $\" class=\"dark-demo-terminal\" />\n      </div>\n    </div>\n\n    <TerminalDoc />\n  </div>\n</template>\n\n<script>\nimport TerminalDoc from '@/doc/terminal/index.vue'\nimport TerminalService from 'primevue2/terminalservice'\n\n\nexport default {\n  methods: {\n    commandHandler(text) {\n      let response\n      let argsIndex = text.indexOf(' ')\n      let command = argsIndex !== -1 ? text.substring(0, argsIndex) : text\n\n      switch (command) {\n      case 'date':\n        response = 'Today is ' + new Date().toDateString()\n        break\n\n      case 'greet':\n        response = 'Hola ' + text.substring(argsIndex + 1)\n        break\n\n      case 'random':\n        response = Math.floor(Math.random() * 100)\n        break\n\n      default:\n        response = 'Unknown command: ' + command\n      }\n\n      TerminalService.emit('response', response)\n    }\n  },\n  mounted() {\n    TerminalService.on('command', this.commandHandler)\n  },\n  beforeDestroy() {\n    TerminalService.off('command', this.commandHandler)\n  },\n  components: {\n    'TerminalDoc': TerminalDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n  margin-top: 0;\n}\n\n:deep(.dark-demo-terminal) {\n  background-color: #212121;\n  color: #ffffff;\n\n  .p-terminal-command {\n    color: #80CBC4;\n  }\n\n  .p-terminal-prompt {\n    color: #FFD54F;\n  }\n\n  .p-terminal-response {\n    color: #9FA8DA;\n  }\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","text","response","argsIndex","command","TerminalService","TerminalDoc"],"mappings":"qMAoFA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,kHAIA,EACA,SAAA,CACA,MAAA,mFAGA,EACA,UAAA,CACA,MAAA,ykCAsCA,CACA,CACA,CACA,qwEC5HAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,+NAIA,EACA,YAAA,CACA,MAAA,skCAsCA,EACA,YAAA,CACA,MAAA,uTAsBA,CACA,CACA,CACA,yhBC7EAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCOAF,EAAA,CACA,QAAA,CACA,eAAAG,EAAA,CACA,IAAAC,EACAC,EAAAF,EAAA,QAAA,GAAA,EACAG,EAAAD,IAAA,GAAAF,EAAA,UAAA,EAAAE,CAAA,EAAAF,EAEA,OAAAG,EAAA,CACA,IAAA,OACAF,EAAA,YAAA,IAAA,KAAA,EAAA,aAAA,EACA,MAEA,IAAA,QACAA,EAAA,QAAAD,EAAA,UAAAE,EAAA,CAAA,EACA,MAEA,IAAA,SACAD,EAAA,KAAA,MAAA,KAAA,OAAA,EAAA,GAAA,EACA,MAEA,QACAA,EAAA,oBAAAE,CACA,CAEAC,EAAA,KAAA,WAAAH,CAAA,CACA,CACA,EACA,SAAA,CACAG,EAAA,GAAA,UAAA,KAAA,cAAA,CACA,EACA,eAAA,CACAA,EAAA,IAAA,UAAA,KAAA,cAAA,CACA,EACA,WAAA,CACA,YAAAC,CACA,CACA"}