{"version":3,"file":"index-ChPr5YKh.js","sources":["../../src/doc/orderlist/Documentation.vue","../../src/doc/orderlist/SourceCode.vue","../../src/doc/orderlist/index.vue","../../src/views/orderlist/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>OrderList requires an array as its value bound with the v-model directive and a template for its content.</p>\n    <p>\n      Header of the component is defined with the \"header\" template and to define the content of an item in the list a\n      named template called \"item\" needs to be defined which gets the <i>item</i> and the <i>index</i> via slotProps.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n\n    <h5>Selection</h5>\n    <p>\n      In case you'd need to access the selected items in the list, define a binding to the <i>selection</i> property\n      with the sync operator so that it gets updated when the user makes a selection. Since it is two-way binding\n      enabled, your changes to the selection will be reflected as well. Note that this is optional and only necessary\n      when you need to access the selection.\n    </p>\n\n    <p>Use the sync operator to enable two-way binding.</p>\n    <DocSectionCode :code=\"selectionCode\" />\n\n    <h5>DataKey</h5>\n    <p>\n      It is recommended to provide the name of the field that uniquely identifies the a record in the data via the\n      <i>dataKey</i> property for better performance.\n    </p>\n\n    <h5>Templating</h5>\n    <p>\n      In addition to the <i>item</i> template, <i>header</i> is provided to place custom content at the list header.\n      Controls section can also be customized to place content before and after the buttons with\n      <i>controlsstart</i> and <i>controlsend</i> slots respectively.\n    </p>\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>array</td>\n            <td>null</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>selection</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Selected items in the list.</td>\n          </tr>\n          <tr>\n            <td>metaKeySelection</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>\n              Defines whether metaKey is requred or not for the selection. <br />\n              When true metaKey needs to be pressed to select or unselect an item and <br />\n              when set to false selection of each item can be toggled individually. On touch enabled devices,\n              metaKeySelection is turned off automatically.\n            </td>\n          </tr>\n          <tr>\n            <td>dataKey</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Name of the field that uniquely identifies the a record in the data.</td>\n          </tr>\n          <tr>\n            <td>listStyle</td>\n            <td>object</td>\n            <td>null</td>\n            <td>Inline style of the the list element.</td>\n          </tr>\n          <tr>\n            <td>stripedRows</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Whether to displays rows with alternating colors.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>reorder</td>\n            <td>\n              event.originalEvent: browser event <br />\n              event.value: Ordered list <br />\n              event.direction: Direction of the change; \"up\", \"down\", \"bottom\", \"top\"\n            </td>\n            <td>Callback to invoke when the list is reordered.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>header</td>\n            <td>-</td>\n          </tr>\n          <tr>\n            <td>item</td>\n            <td>\n              item: Item of the component<br />\n              index: Index of the item\n            </td>\n          </tr>\n          <tr>\n            <td>controlsstart</td>\n            <td>-</td>\n          </tr>\n          <tr>\n            Ä±\n            <td>controlsend</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-orderlist</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-orderlist-list</td>\n            <td>List container.</td>\n          </tr>\n          <tr>\n            <td>p-orderlist-item</td>\n            <td>An item in the list</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport OrderList from 'primevue2/orderlist';\n        `\n      },\n      baseCode: {\n        basic: `\n<OrderList v-model=\"cars\" listStyle=\"height:auto\" dataKey=\"vin\">\n    <template #header>\n        List of Cars\n    </template>\n    <template #item=\"slotProps\">\n        <div class=\"p-caritem\">\n            <img :src=\"'demo/images/car/' + slotProps.item.brand + '.png'\">\n            <div>\n                <span class=\"p-caritem-vin\">{{slotProps.item.vin}}</span>\n                <span>{{slotProps.item.year}} - {{slotProps.item.color}}</span>\n            </div>\n        </div>\n    </template>\n</OrderList>\n        `\n      },\n      selectionCode: {\n        basic: `\n<OrderList v-model=\"cars\" dataKey=\"vin\" :selection.sync=\"selection\">\n    <template #header>\n        List of Cars\n    </template>\n    <template #item=\"slotProps\">\n        <div class=\"p-caritem\">\n            <img :src=\"'demo/images/car/' + slotProps.item.brand + '.png'\">\n            <div>\n                <span class=\"p-caritem-vin\">{{slotProps.item.vin}}</span>\n                <span>{{slotProps.item.year}} - {{slotProps.item.color}}</span>\n            </div>\n        </div>\n    </template>\n</OrderList>\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/orderlist\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n    <DocSectionCode :code=\"sourceCode3\" importStyle />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<OrderList v-model=\"products\" listStyle=\"height:auto\" dataKey=\"id\">\n    <template #header>\n        List of Products\n    </template>\n    <template #item=\"slotProps\">\n        <div class=\"product-item\">\n            <div class=\"image-container\">\n                <img :src=\"'demo/images/product/' + slotProps.item.image\" :alt=\"slotProps.item.name\" />\n            </div>\n            <div class=\"product-list-detail\">\n                <h5 class=\"mb-2\">{{slotProps.item.name}}</h5>\n                <i class=\"pi pi-tag product-category-icon\"></i>\n                <span class=\"product-category\">{{slotProps.item.category}}</span>\n            </div>\n            <div class=\"product-list-action\">\n                <h6 class=\"mb-2\">\\${{slotProps.item.price}}</h6>\n                <span :class=\"'product-badge status-'+slotProps.item.inventoryStatus.toLowerCase()\">{{slotProps.item.inventoryStatus}}</span>\n            </div>\n        </div>\n    </template>\n</OrderList>\n        `\n      },\n      sourceCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    }\n}\n        `\n      },\n      sourceCode3: {\n        basic: `\n.product-item {\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: .5rem;\n\twidth: 100%;\n\n\timg {\n\t\twidth: 75px;\n        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n        margin-right: 1rem;\n\t}\n\n\t.product-list-detail {\n\t\tflex: 1 1 0;\n\t}\n\n\t.product-list-action {\n\t\tdisplay: flex;\n        flex-direction: column;\n        align-items: flex-end;\n    }\n\n    .product-category-icon {\n        vertical-align: middle;\n        margin-right: .5rem;\n    }\n\n    .product-category {\n        vertical-align: middle;\n        line-height: 1;\n    }\n}\n\n@media screen and (max-width: 576px) {\n    .product-item {\n        flex-wrap: wrap;\n\n        .image-container {\n            width: 100%;\n            text-align: center;\n        }\n\n        img {\n            margin: 0 0 1rem 0;\n            width: 100px;\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>OrderList</h1>\n        <p>OrderList is used to managed the order of a collection.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <OrderList v-model=\"products\" listStyle=\"height:auto\" dataKey=\"id\">\n          <template #header> List of Products </template>\n          <template #item=\"slotProps\">\n            <div class=\"product-item\">\n              <div class=\"image-container\">\n                <img :src=\"$publicUrl('demo/images/product/' + slotProps.item.image)\" :alt=\"slotProps.item.name\" />\n              </div>\n              <div class=\"product-list-detail\">\n                <h5 class=\"mb-2\">{{ slotProps.item.name }}</h5>\n                <i class=\"pi pi-tag product-category-icon\"></i>\n                <span class=\"product-category\">{{ slotProps.item.category }}</span>\n              </div>\n              <div class=\"product-list-action\">\n                <h6 class=\"mb-2\">${{ slotProps.item.price }}</h6>\n                <span :class=\"'product-badge status-' + slotProps.item.inventoryStatus.toLowerCase()\">{{\n                  slotProps.item.inventoryStatus\n                }}</span>\n              </div>\n            </div>\n          </template>\n        </OrderList>\n      </div>\n    </div>\n\n    <OrderListDoc />\n  </div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService'\nimport OrderListDoc from '@/doc/orderlist/index.vue'\n\nexport default {\n  data() {\n    return {\n      products: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  },\n  components: {\n    'OrderListDoc': OrderListDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.product-item {\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n  width: 100%;\n\n  img {\n    width: 75px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    margin-right: 1rem;\n  }\n\n  .product-list-detail {\n    flex: 1 1 0;\n  }\n\n  .product-list-action {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n\n  .product-category-icon {\n    vertical-align: middle;\n    margin-right: 0.5rem;\n  }\n\n  .product-category {\n    vertical-align: middle;\n    line-height: 1;\n  }\n}\n\n@media screen and (max-width: 576px) {\n  .product-item {\n    flex-wrap: wrap;\n\n    .image-container {\n      width: 100%;\n      text-align: center;\n    }\n\n    img {\n      margin: 0 0 1rem 0;\n      width: 100px;\n    }\n  }\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","ProductService","data","OrderListDoc"],"mappings":"mPAgMA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,0DAGA,EACA,SAAA,CACA,MAAA,mhBAgBA,EACA,cAAA,CACA,MAAA,uhBAgBA,CACA,CACA,CACA,g4KC9NAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,89BAuBA,EACA,YAAA,CACA,MAAA,mYAkBA,EACA,YAAA,CACA,MAAA,43BAkDA,CACA,CACA,CACA,0hBCxGAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCyBAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,IACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAG,CACA,EACA,SAAA,CACA,KAAA,eAAA,iBAAA,EAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,EACA,WAAA,CACA,aAAAC,CACA,CACA"}