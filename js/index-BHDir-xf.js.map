{"version":3,"file":"index-BHDir-xf.js","sources":["../../src/doc/cascadeselect/Documentation.vue","../../src/doc/cascadeselect/SourceCode.vue","../../src/doc/cascadeselect/index.vue","../../src/views/cascadeselect/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      CascadeSelect requires a value to bind and a collection of arbitrary objects with a nested hierarchy.\n      <i>optionGroupLabel</i> is used for the text of a category and <i>optionGroupChildren</i> is to define the\n      children of the category. Note that order of the <i>optionGroupChildren</i> matters and it should correspond to\n      the data hierarchy.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Templating</h5>\n    <p>Content of an item can be customized with the <i>option</i> template.</p>\n\n    <DocSectionCode :code=\"templatingCode\" />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>any</td>\n            <td>null</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>options</td>\n            <td>array</td>\n            <td>null</td>\n            <td>An array of selectitems to display as the available options.</td>\n          </tr>\n          <tr>\n            <td>optionLabel</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>Property name or getter function to use as the label of an option.</td>\n          </tr>\n          <tr>\n            <td>optionValue</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>\n              Property name or getter function to use as the value of an option, defaults to the option itself when not\n              defined.\n            </td>\n          </tr>\n          <tr>\n            <td>optionGroupLabel</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>Property name or getter function to use as the label of an option group.</td>\n          </tr>\n          <tr>\n            <td>optionGroupChildren</td>\n            <td>string | function</td>\n            <td>null</td>\n            <td>Property name or getter function to retrieve the items of a group.</td>\n          </tr>\n          <tr>\n            <td>placeholder</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Default text to display when no option is selected.</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When present, it specifies that the component should be disabled.</td>\n          </tr>\n          <tr>\n            <td>dataKey</td>\n            <td>string</td>\n            <td>null</td>\n            <td>A property to uniquely identify an option.</td>\n          </tr>\n          <tr>\n            <td>tabindex</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Index of the element in tabbing order.</td>\n          </tr>\n          <tr>\n            <td>inputId</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Identifier of the underlying input element.</td>\n          </tr>\n          <tr>\n            <td>ariaLabelledBy</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Establishes relationships between the component and label(s) where its value should be one or more element\n              IDs.\n            </td>\n          </tr>\n          <tr>\n            <td>appendTo</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Id of the element or \"body\" for document where the overlay should be appended to.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>change</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Selected option value\n            </td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>group-change</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Selected option group\n            </td>\n            <td>Callback to invoke when a group changes.</td>\n          </tr>\n          <tr>\n            <td>before-show</td>\n            <td>-</td>\n            <td>Callback to invoke before the overlay is shown.</td>\n          </tr>\n          <tr>\n            <td>before-hide</td>\n            <td>-</td>\n            <td>Callback to invoke before the overlay is hidden.</td>\n          </tr>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Callback to invoke when the overlay is shown.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Callback to invoke when the overlay is hidden.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>\n              value: Value of the component <br />\n              placeholder: Placeholder text to show\n            </td>\n          </tr>\n          <tr>\n            <td>option</td>\n            <td>option: Option instance</td>\n          </tr>\n          <tr>\n            <td>indicator</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-cascadeselect</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-cascadeselect-label</td>\n            <td>Element to display label of selected option.</td>\n          </tr>\n          <tr>\n            <td>p-cascadeselect-trigger</td>\n            <td>Icon element.</td>\n          </tr>\n          <tr>\n            <td>p-cascadeselect-panel</td>\n            <td>Icon element.</td>\n          </tr>\n          <tr>\n            <td>p-cascadeselect-items-wrapper</td>\n            <td>Wrapper element of items list.</td>\n          </tr>\n          <tr>\n            <td>p-cascadeselect-items</td>\n            <td>List element of items.</td>\n          </tr>\n          <tr>\n            <td>p-cascadeselect-item</td>\n            <td>An item in the list.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport CascadeSelect from 'primevue2/cascadeselect';\n        `\n      },\n      baseCode: {\n        basic: `\n<CascadeSelect v-model=\"selectedCity\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\" \n    :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" />\n        `\n      },\n      baseCode2: {\n        basic: `\nexports default {\n\tdata() {\n        return {\n            selectedCity: null,\n            countries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'Canada',\n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}\n        `\n      },\n      templatingCode: {\n        basic: `\n<CascadeSelect v-model=\"selectedCity\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\" \n    :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\">\n    <template #option=\"slotProps\">\n        <div class=\"country-item\">\n            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" v-if=\"slotProps.option.states\" />\n            <i class=\"pi pi-compass mr-2\" v-if=\"slotProps.option.cities\"></i>\n            <i class=\"pi pi-map-marker mr-2\" v-if=\"slotProps.option.cname\"></i>\n            <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n        </div>\n    </template>\n</CascadeSelect>\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/cascadeselect\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h5>Basic</h5>\n<CascadeSelect v-model=\"selectedCity1\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n        :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\" />\n\n<h5>Templating</h5>\n<CascadeSelect v-model=\"selectedCity2\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n        :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\">\n    <template #option=\"slotProps\">\n        <div class=\"country-item\">\n            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" v-if=\"slotProps.option.states\" />\n            <i class=\"pi pi-compass mr-2\" v-if=\"slotProps.option.cities\"></i>\n            <i class=\"pi pi-map-marker mr-2\" v-if=\"slotProps.option.cname\"></i>\n            <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n        </div>\n    </template>\n</CascadeSelect>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n    data() {\n        return {\n            selectedCity1: null,\n            selectedCity2: null,\n            countries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'Canada',\n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n\n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>CascadeSelect</h1>\n                <p>CascadeSelect displays a nested structure of options.</p>\n            </div>\n            <AppInputStyleSwitch />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Basic</h5>\n                <CascadeSelect v-model=\"selectedCity1\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                        :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\" />\n\n                <h5>Templating</h5>\n                <CascadeSelect v-model=\"selectedCity2\" :options=\"countries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                        :optionGroupChildren=\"['states', 'cities']\" style=\"minWidth: 14rem\" placeholder=\"Select a City\">\n                    <template #option=\"slotProps\">\n                        <div class=\"country-item\">\n                            <img src=\"../../assets/images/flag_placeholder.png\" :class=\"'flag flag-' + slotProps.option.code.toLowerCase()\" v-if=\"slotProps.option.states\" />\n                            <i class=\"pi pi-compass mr-2\" v-if=\"slotProps.option.cities\"></i>\n                            <i class=\"pi pi-map-marker mr-2\" v-if=\"slotProps.option.cname\"></i>\n                            <span>{{slotProps.option.cname || slotProps.option.name}}</span>\n                        </div>\n                    </template>\n                </CascadeSelect>\n            </div>\n        </div>\n\n        <CascadeSelectDoc />\n    </div>\n</template>\n\n<script>\nimport CascadeSelectDoc from '@/doc/cascadeselect/index.vue'\nexport default {\n  data() {\n    return {\n      selectedCity1: null,\n      selectedCity2: null,\n      countries: [\n        {\n          name: 'Australia',\n          code: 'AU',\n          states: [\n            {\n              name: 'New South Wales',\n              cities: [\n                {cname: 'Sydney', code: 'A-SY'},\n                {cname: 'Newcastle', code: 'A-NE'},\n                {cname: 'Wollongong', code: 'A-WO'}\n              ]\n            },\n            {\n              name: 'Queensland',\n              cities: [\n                {cname: 'Brisbane', code: 'A-BR'},\n                {cname: 'Townsville', code: 'A-TO'}\n              ]\n            },\n\n          ]\n        },\n        {\n          name: 'Canada',\n          code: 'CA',\n          states: [\n            {\n              name: 'Quebec',\n              cities: [\n                {cname: 'Montreal', code: 'C-MO'},\n                {cname: 'Quebec City', code: 'C-QU'}\n              ]\n            },\n            {\n              name: 'Ontario',\n              cities: [\n                {cname: 'Ottawa', code: 'C-OT'},\n                {cname: 'Toronto', code: 'C-TO'}\n              ]\n            },\n\n          ]\n        },\n        {\n          name: 'United States',\n          code: 'US',\n          states: [\n            {\n              name: 'California',\n              cities: [\n                {cname: 'Los Angeles', code: 'US-LA'},\n                {cname: 'San Diego', code: 'US-SD'},\n                {cname: 'San Francisco', code: 'US-SF'}\n              ]\n            },\n            {\n              name: 'Florida',\n              cities: [\n                {cname: 'Jacksonville', code: 'US-JA'},\n                {cname: 'Miami', code: 'US-MI'},\n                {cname: 'Tampa', code: 'US-TA'},\n                {cname: 'Orlando', code: 'US-OR'}\n              ]\n            },\n            {\n              name: 'Texas',\n              cities: [\n                {cname: 'Austin', code: 'US-AU'},\n                {cname: 'Dallas', code: 'US-DA'},\n                {cname: 'Houston', code: 'US-HO'}\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  components: {\n    'CascadeSelectDoc': CascadeSelectDoc\n  }\n}\n</script>\n"],"names":["_sfc_main","Documentation","SourceCode","CascadeSelectDoc"],"mappings":"gPAgQA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,kEAGA,EACA,SAAA,CACA,MAAA,qMAIA,EACA,UAAA,CACA,MAAA,2lGAqFA,EACA,eAAA,CACA,MAAA,6sBAaA,CACA,CACA,CACA,m7MCvWAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,6+BAkBA,EACA,YAAA,CACA,MAAA,goGAsFA,CACA,CACA,CACA,8dClHAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCmBAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,cAAA,KACA,cAAA,KACA,UAAA,CACA,CACA,KAAA,YACA,KAAA,KACA,OAAA,CACA,CACA,KAAA,kBACA,OAAA,CACA,CAAA,MAAA,SAAA,KAAA,MAAA,EACA,CAAA,MAAA,YAAA,KAAA,MAAA,EACA,CAAA,MAAA,aAAA,KAAA,MAAA,CACA,CACA,EACA,CACA,KAAA,aACA,OAAA,CACA,CAAA,MAAA,WAAA,KAAA,MAAA,EACA,CAAA,MAAA,aAAA,KAAA,MAAA,CACA,CACA,CAEA,CACA,EACA,CACA,KAAA,SACA,KAAA,KACA,OAAA,CACA,CACA,KAAA,SACA,OAAA,CACA,CAAA,MAAA,WAAA,KAAA,MAAA,EACA,CAAA,MAAA,cAAA,KAAA,MAAA,CACA,CACA,EACA,CACA,KAAA,UACA,OAAA,CACA,CAAA,MAAA,SAAA,KAAA,MAAA,EACA,CAAA,MAAA,UAAA,KAAA,MAAA,CACA,CACA,CAEA,CACA,EACA,CACA,KAAA,gBACA,KAAA,KACA,OAAA,CACA,CACA,KAAA,aACA,OAAA,CACA,CAAA,MAAA,cAAA,KAAA,OAAA,EACA,CAAA,MAAA,YAAA,KAAA,OAAA,EACA,CAAA,MAAA,gBAAA,KAAA,OAAA,CACA,CACA,EACA,CACA,KAAA,UACA,OAAA,CACA,CAAA,MAAA,eAAA,KAAA,OAAA,EACA,CAAA,MAAA,QAAA,KAAA,OAAA,EACA,CAAA,MAAA,QAAA,KAAA,OAAA,EACA,CAAA,MAAA,UAAA,KAAA,OAAA,CACA,CACA,EACA,CACA,KAAA,QACA,OAAA,CACA,CAAA,MAAA,SAAA,KAAA,OAAA,EACA,CAAA,MAAA,SAAA,KAAA,OAAA,EACA,CAAA,MAAA,UAAA,KAAA,OAAA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,EACA,WAAA,CACA,iBAAAG,CACA,CACA"}