import{C as o}from"./CountryService-YamlU8VQ.js";import{n as s}from"./app.component-BAbvz7X_.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const n={name:"SourceCode",data(){return{sourceCode1:{basic:'\n<div class="p-fluid grid">\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <InputText id="inputtext" type="text" v-model="value1" />\n            <label for="inputtext">InputText</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label p-input-icon-left">\n            <i class="pi pi-search" />\n            <InputText id="inputtext-left" type="text" v-model="valueIconLeft" />\n            <label for="inputtext-left">Left Icon</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label p-input-icon-right">\n            <i class="pi pi-search" />\n            <InputText id="inputtext-right" type="text" v-model="valueIconRight" />\n            <label for="inputtext-right">Right Icon</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <AutoComplete v-model="value2" :suggestions="filteredCountries" @complete="searchCountry($event)" field="name" />\n            <label for="autocomplete">AutoComplete</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <Calendar id="calendar" v-model="value3" />\n            <label for="calendar">Calendar</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <chips id="chips" v-model="value4" />\n            <label for="chips">Chips</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <InputMask id="inputmask" v-model="value5" mask="99/99/9999" slotChar="mm/dd/yyyy" />\n            <label for="inputmask">InputMask</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <InputNumber id="inputnumber" v-model="value6" />\n            <label for="inputnumber">InputNumber</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <div class="p-inputgroup">\n            <span class="p-inputgroup-addon">\n                <i class="pi pi-user"></i>\n            </span>\n            <span class="p-float-label">\n                <InputText id="inputgroup" type="text" v-model="value7" />\n                <label for="inputgroup">InputGroup</label>\n            </span>\n        </div>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <CascadeSelect id="cascadeSelect" v-model="selectedCity" :options="cascadeCountries" optionLabel="cname" optionGroupLabel="name"\n                :optionGroupChildren="[\'states\', \'cities\']" />\n            <label for="multiselect">CascadeSelect</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <Dropdown id="dropdown" v-model="value8" :options="cities" optionLabel="name" />\n            <label for="dropdown">Dropdown</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <MultiSelect id="multiselect" v-model="value9" :options="cities" optionLabel="name" />\n            <label for="multiselect">MultiSelect</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <Textarea id="textarea" v-model="value10" rows="3" />\n            <label for="textarea">Textarea</label>\n        </span>\n    </div>\n    <div class="field col-12 md:col-4">\n        <span class="p-float-label">\n            <Password id="password" v-model="value11" />\n            <label for="password">Password</label>\n        </span>\n    </div>\n</div>\n        '},sourceCode2:{basic:"\nimport CountryService from '../../service/CountryService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                    ]\n                },\n                {\n                    name: 'Canada',\n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    countryService: null,\n    created() {\n        this.countryService = new CountryService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    },\n}\n        "}}}};var i=function(){var a=this,e=a._self._c;return e("div",[a._m(0),e("DocSectionCode",{attrs:{code:a.sourceCode1}}),e("DocSectionCode",{attrs:{code:a.sourceCode2,importCode:""}})],1)},c=[function(){var t=this,a=t._self._c;return a("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/floatlabel",target:"_blank",rel:"noopener noreferrer"}},[a("span",[t._v("View on GitHub")])])}],r=s(n,i,c,!1,null,null);const u=r.exports,d={components:{SourceCode:u}};var p=function(){var a=this,e=a._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("SourceCode")],1)],1)],1)},v=[],m=s(d,p,v,!1,null,null);const f=m.exports,b={components:{FloatLabelDoc:f},data(){return{countries:null,filteredCountries:null,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],value1:null,value2:null,value3:null,value4:null,value5:null,value6:null,value7:null,value8:null,value9:null,value10:null,value11:null,valueIconLeft:null,valueIconRight:null,selectedCity:null,cascadeCountries:[{name:"Australia",code:"AU",states:[{name:"New South Wales",cities:[{cname:"Sydney",code:"A-SY"},{cname:"Newcastle",code:"A-NE"},{cname:"Wollongong",code:"A-WO"}]},{name:"Queensland",cities:[{cname:"Brisbane",code:"A-BR"},{cname:"Townsville",code:"A-TO"}]}]},{name:"Canada",code:"CA",states:[{name:"Quebec",cities:[{cname:"Montreal",code:"C-MO"},{cname:"Quebec City",code:"C-QU"}]},{name:"Ontario",cities:[{cname:"Ottawa",code:"C-OT"},{cname:"Toronto",code:"C-TO"}]}]},{name:"United States",code:"US",states:[{name:"California",cities:[{cname:"Los Angeles",code:"US-LA"},{cname:"San Diego",code:"US-SD"},{cname:"San Francisco",code:"US-SF"}]},{name:"Florida",cities:[{cname:"Jacksonville",code:"US-JA"},{cname:"Miami",code:"US-MI"},{cname:"Tampa",code:"US-TA"},{cname:"Orlando",code:"US-OR"}]},{name:"Texas",cities:[{cname:"Austin",code:"US-AU"},{cname:"Dallas",code:"US-DA"},{cname:"Houston",code:"US-HO"}]}]}]}},countryService:null,created(){this.countryService=new o},mounted(){this.countryService.getCountries().then(t=>this.countries=t)},methods:{searchCountry(t){setTimeout(()=>{t.query.trim().length?this.filteredCountries=this.countries.filter(a=>a.name.toLowerCase().startsWith(t.query.toLowerCase())):this.filteredCountries=[...this.countries]},250)}}};var C=function(){var a=this,e=a._self._c;return e("div",[e("div",{staticClass:"content-section introduction"},[a._m(0),e("AppInputStyleSwitch")],1),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("div",{staticClass:"p-fluid grid"},[e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("InputText",{attrs:{id:"inputtext",type:"text"},model:{value:a.value1,callback:function(l){a.value1=l},expression:"value1"}}),e("label",{attrs:{for:"inputtext"}},[a._v("InputText")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label p-input-icon-left"},[e("i",{staticClass:"pi pi-search"}),e("InputText",{attrs:{id:"inputtext-left",type:"text"},model:{value:a.valueIconLeft,callback:function(l){a.valueIconLeft=l},expression:"valueIconLeft"}}),e("label",{attrs:{for:"inputtext-left"}},[a._v("Left Icon")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label p-input-icon-right"},[e("i",{staticClass:"pi pi-search"}),e("InputText",{attrs:{id:"inputtext-right",type:"text"},model:{value:a.valueIconRight,callback:function(l){a.valueIconRight=l},expression:"valueIconRight"}}),e("label",{attrs:{for:"inputtext-right"}},[a._v("Right Icon")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("AutoComplete",{attrs:{suggestions:a.filteredCountries,field:"name"},on:{complete:function(l){return a.searchCountry(l)}},model:{value:a.value2,callback:function(l){a.value2=l},expression:"value2"}}),e("label",{attrs:{for:"autocomplete"}},[a._v("AutoComplete")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("Calendar",{attrs:{id:"calendar"},model:{value:a.value3,callback:function(l){a.value3=l},expression:"value3"}}),e("label",{attrs:{for:"calendar"}},[a._v("Calendar")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("chips",{attrs:{id:"chips"},model:{value:a.value4,callback:function(l){a.value4=l},expression:"value4"}}),e("label",{attrs:{for:"chips"}},[a._v("Chips")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("InputMask",{attrs:{id:"inputmask",mask:"99/99/9999",slotChar:"mm/dd/yyyy"},model:{value:a.value5,callback:function(l){a.value5=l},expression:"value5"}}),e("label",{attrs:{for:"inputmask"}},[a._v("InputMask")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("InputNumber",{attrs:{id:"inputnumber"},model:{value:a.value6,callback:function(l){a.value6=l},expression:"value6"}}),e("label",{attrs:{for:"inputnumber"}},[a._v("InputNumber")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("div",{staticClass:"p-inputgroup"},[a._m(1),e("span",{staticClass:"p-float-label"},[e("InputText",{attrs:{id:"inputgroup",type:"text"},model:{value:a.value7,callback:function(l){a.value7=l},expression:"value7"}}),e("label",{attrs:{for:"inputgroup"}},[a._v("InputGroup")])],1)])]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("CascadeSelect",{attrs:{id:"cascadeSelect",options:a.cascadeCountries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"]},model:{value:a.selectedCity,callback:function(l){a.selectedCity=l},expression:"selectedCity"}}),e("label",{attrs:{for:"multiselect"}},[a._v("CascadeSelect")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("Dropdown",{attrs:{id:"dropdown",options:a.cities,optionLabel:"name"},model:{value:a.value8,callback:function(l){a.value8=l},expression:"value8"}}),e("label",{attrs:{for:"dropdown"}},[a._v("Dropdown")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("MultiSelect",{attrs:{id:"multiselect",options:a.cities,optionLabel:"name"},model:{value:a.value9,callback:function(l){a.value9=l},expression:"value9"}}),e("label",{attrs:{for:"multiselect"}},[a._v("MultiSelect")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("Textarea",{attrs:{id:"textarea",rows:"3"},model:{value:a.value10,callback:function(l){a.value10=l},expression:"value10"}}),a._v(" "),e("label",{attrs:{for:"textarea"}},[a._v("Textarea")])],1)]),e("div",{staticClass:"field col-12 md:col-4"},[e("span",{staticClass:"p-float-label"},[e("Password",{attrs:{id:"password"},model:{value:a.value11,callback:function(l){a.value11=l},expression:"value11"}}),e("label",{attrs:{for:"password"}},[a._v("Password")])],1)])])])]),e("FloatLabelDoc")],1)},_=[function(){var t=this,a=t._self._c;return a("div",{staticClass:"feature-intro"},[a("h1",[t._v("Float Label")]),a("p",[t._v("All input text components support floating labels.")])])},function(){var t=this,a=t._self._c;return a("span",{staticClass:"p-inputgroup-addon"},[a("i",{staticClass:"pi pi-user"})])}],h=s(b,C,_,!1,null,"493c57ca");const A=h.exports;export{A as default};
//# sourceMappingURL=index-BZuNkrYd.js.map
