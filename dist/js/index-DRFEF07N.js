import{n as i}from"./app.component-CxwrbeA3.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const s={name:"Documentation",data(){return{importCode:{basic:"\nimport Checkbox from 'primevue2/checkbox';\n        "},baseCode:{basic:'\n<Checkbox v-model="checked" :binary="true" />\n        '},multipleValuesCode:{basic:'\n<Checkbox id="city1" inputId="city1" name="city" value="Chicago" v-model="cities" />\n<Checkbox id="city2" inputId="city2" name="city" value="Los Angeles" v-model="cities" />\n<Checkbox id="city3" inputId="city3" name="city" value="New York" v-model="cities" />\n<Checkbox id="city4" inputId="city4" name="city" value="San Francisco" v-model="cities" />\n        '},multipleValuesCode2:{basic:"\nexport default {\n	data() {\n		return {\n			cities: []\n		}\n	}\n}\n        "}}}};var n=function(){var e=this,c=e._self._c;return c("div",[c("h5",[e._v("Import")]),c("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),c("h5",[e._v("Getting Started")]),c("p",[e._v(" Checkbox can either be used in multiple selection with other checkboxes or as a single checkbox to provide a boolean value. ")]),c("DocSectionCode",{attrs:{code:e.baseCode}}),c("h5",[e._v("Multiple Values")]),c("p",[e._v("Multiple mode is enabled by default, v-model property refers to an array to bind the selected values.")]),c("DocSectionCode",{attrs:{code:e.multipleValuesCode}}),c("DocSectionCode",{attrs:{code:e.multipleValuesCode2,importCode:""}}),c("p",[e._v(" As v-model is two-way binding enabled, prepopulating the model array with values is enough to display the related checkboxes as checked by default. ")]),c("h5",[e._v("Properties")]),c("p",[e._v(" Any property such as name and autofocus are passed to the underlying input element. Following are the additional properties to configure the component. ")]),e._m(0),c("h5",[e._v("Events")]),e._m(1),c("h5",[e._v("Styling")]),c("p",[e._v(" Following is the list of structural style classes, for theming classes visit "),c("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page. ")],1),e._m(2),c("h5",[e._v("Dependencies")]),c("p",[e._v("None.")])],1)},l=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value of the checkbox.")])]),e("tr",[e("td",[t._v("binary")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("Allows to select a boolean value instead of multiple values.")])]),e("tr",[e("td",[t._v("trueValue")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value in checked state.")])]),e("tr",[e("td",[t._v("falseValue")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value in unchecked state.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("change")]),e("td",[t._v("event: Browser event")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("input")]),e("td",[t._v("event: Value of checkbox")]),e("td",[t._v("Callback to invoke on click.")])]),e("tr",[e("td",[t._v("click")]),e("td",[t._v("event: Browser event")]),e("td",[t._v("Callback to invoke click.")])]),e("tr",[e("td",[t._v("focus")]),e("td",[t._v("event: Browser event")]),e("td",[t._v("Callback to invoke on focus.")])]),e("tr",[e("td",[t._v("blur")]),e("td",[t._v("event: Browser event")]),e("td",[t._v("Callback to invoke on blur.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-chkbox")]),e("td",[t._v("Container element")])]),e("tr",[e("td",[t._v("p-chkbox-box")]),e("td",[t._v("Container of icon.")])]),e("tr",[e("td",[t._v("p-chkbox-icon")]),e("td",[t._v("Icon element.")])]),e("tr",[e("td",[t._v("p-chkbox-label")]),e("td",[t._v("Label element.")])])])])])}],r=i(s,n,l,!1,null,null);const d=r.exports,v={name:"SourceCode",data(){return{sourceCode1:{basic:'\n<h3>Basic</h3>\n<div class="field-checkbox">\n    <Checkbox id="binary" v-model="checked" :binary="true" />\n    <label for="binary">{{checked}}</label>\n</div>\n\n<h3>Multiple</h3>\n<div class="field-checkbox">\n    <Checkbox id="city1" name="city" value="Chicago" v-model="cities" />\n    <label for="city1">Chicago</label>\n</div>\n<div class="field-checkbox">\n    <Checkbox id="city2" name="city" value="Los Angeles" v-model="cities" />\n    <label for="city2">Los Angeles</label>\n</div>\n<div class="field-checkbox">\n    <Checkbox id="city3" name="city" value="New York" v-model="cities" />\n    <label for="city3">New York</label>\n</div>\n<div class="field-checkbox">\n    <Checkbox id="city4" name="city" value="San Francisco" v-model="cities" />\n    <label for="city4">San Francisco</label>\n</div>\n\n<h3>Dynamic Values, Preselection, Value Binding and Disabled Option</h3>\n<div v-for="category of categories" :key="category.key" class="field-checkbox">\n    <Checkbox :id="category.key" name="category" :value="category" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n    <label :for="category.key">{{category.name}}</label>\n</div>\n        '},sourceCode2:{basic:"\nexport default {\n    data() {\n        return {\n            checked: false,\n            cities: [],\n            categories: [{name: 'Accounting', key: 'A'}, {name: 'Marketing', key: 'M'}, {name: 'Production', key: 'P'}, {name: 'Research', key: 'R'}],\n            selectedCategories: []\n        }\n    },\n    created() {\n        this.selectedCategories = this.categories.slice(1,3);\n    }\n}\n        "}}}};var _=function(){var e=this,c=e._self._c;return c("div",[e._m(0),c("DocSectionCode",{attrs:{code:e.sourceCode1}}),c("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)},u=[function(){var t=this,e=t._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/checkbox",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])])}],h=i(v,_,u,!1,null,null);const b=h.exports,m={components:{Documentation:d,SourceCode:b}};var k=function(){var e=this,c=e._self._c;return c("div",{staticClass:"content-section documentation"},[c("TabView",[c("TabPanel",{attrs:{header:"Documentation"}},[c("Documentation")],1),c("TabPanel",{attrs:{header:"Source"}},[c("SourceCode")],1)],1)],1)},p=[],f=i(m,k,p,!1,null,null);const y=f.exports,C={data(){return{checked:!1,cities:[],categories:[{name:"Accounting",key:"A"},{name:"Marketing",key:"M"},{name:"Production",key:"P"},{name:"Research",key:"R"}],selectedCategories:[]}},created(){this.selectedCategories=this.categories.slice(1,3)},components:{CheckboxDoc:y}};var x=function(){var e=this,c=e._self._c;return c("div",[c("div",{staticClass:"content-section introduction"},[e._m(0),c("AppInputStyleSwitch")],1),c("div",{staticClass:"content-section implementation"},[c("div",{staticClass:"card"},[c("h5",[e._v("Basic")]),c("div",{staticClass:"field-checkbox"},[c("Checkbox",{attrs:{id:"binary",binary:!0},model:{value:e.checked,callback:function(a){e.checked=a},expression:"checked"}}),c("label",{attrs:{for:"binary"}},[e._v(e._s(e.checked))])],1),c("h5",[e._v("Multiple")]),c("div",{staticClass:"field-checkbox"},[c("Checkbox",{attrs:{id:"city1",name:"city",value:"Chicago",disabled:!0},model:{value:e.cities,callback:function(a){e.cities=a},expression:"cities"}}),c("label",{attrs:{for:"city1"}},[e._v("Chicago")])],1),c("div",{staticClass:"field-checkbox"},[c("Checkbox",{attrs:{id:"city2",name:"city",value:"Los Angeles"},model:{value:e.cities,callback:function(a){e.cities=a},expression:"cities"}}),c("label",{attrs:{for:"city2"}},[e._v("Los Angeles")])],1),c("div",{staticClass:"field-checkbox"},[c("Checkbox",{attrs:{id:"city3",name:"city",value:"New York"},model:{value:e.cities,callback:function(a){e.cities=a},expression:"cities"}}),c("label",{attrs:{for:"city3"}},[e._v("New York")])],1),c("div",{staticClass:"field-checkbox"},[c("Checkbox",{attrs:{id:"city4",name:"city",value:"San Francisco"},model:{value:e.cities,callback:function(a){e.cities=a},expression:"cities"}}),c("label",{attrs:{for:"city4"}},[e._v("San Francisco")])],1),c("h5",[e._v("Dynamic Values, Preselection, Value Binding and Disabled Option")]),e._l(e.categories,function(a){return c("div",{key:a.key,staticClass:"field-checkbox"},[c("Checkbox",{attrs:{id:a.key,name:"category",value:a,disabled:a.key==="R"},model:{value:e.selectedCategories,callback:function(o){e.selectedCategories=o},expression:"selectedCategories"}}),c("label",{attrs:{for:a.key}},[e._v(e._s(a.name))])],1)})],2)]),c("CheckboxDoc")],1)},g=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"feature-intro"},[e("h1",[t._v("Checkbox")]),e("p",[t._v("Checkbox is an extension to standard checkbox element with theming.")])])}],w=i(C,x,g,!1,null,null);const F=w.exports;export{F as default};
//# sourceMappingURL=index-DRFEF07N.js.map
