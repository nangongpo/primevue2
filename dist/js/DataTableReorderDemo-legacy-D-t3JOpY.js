System.register(["./ProductService-legacy-Ctw4T0RP.js","./app.component-legacy-CT61tSyJ.js","./app.fullcalendar-legacy-BjBSiNq4.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-NUaqKLPR.js"],(function(e,r){"use strict";var t,o;return{setters:[function(e){t=e.P},function(e){o=e.n},null,null,null],execute:function(){e("default",o({data:function(){return{columns:null,products:null}},productService:null,created:function(){this.productService=new t,this.columns=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"category",header:"Category"},{field:"quantity",header:"Quantity"}]},mounted:function(){var e=this;this.productService.getProductsSmall().then((function(r){return e.products=r}))},methods:{onColReorder:function(){this.$toast.add({severity:"success",summary:"Column Reordered",life:3e3})},onRowReorder:function(e){this.products=e.value,this.$toast.add({severity:"success",summary:"Rows Reordered",life:3e3})}}},(function(){var e=this,r=e._self._c;return r("div",[e._m(0),r("div",{staticClass:"content-section implementation"},[r("div",{staticClass:"card"},[r("DataTable",{attrs:{value:e.products,reorderableColumns:!0,responsiveLayout:"scroll"},on:{"column-reorder":e.onColReorder,"row-reorder":e.onRowReorder}},[r("Column",{attrs:{rowReorder:!0,headerStyle:{width:"3rem"},reorderableColumn:!1}}),e._l(e.columns,(function(e){return r("Column",{key:e.field,attrs:{field:e.field,header:e.header}})}))],2)],1)]),r("div",{staticClass:"content-section documentation"},[r("TabView",[r("TabPanel",{attrs:{header:"Source"}},[r("CodeHighlight",[[e._v(' <DataTable :value="products" :reorderableColumns="true" @column-reorder="onColReorder" @row-reorder="onRowReorder" responsiveLayout="scroll"> <Column :rowReorder="true" :headerStyle="{\'width\': \'3rem\'}" :reorderableColumn="false" /> <Column v-for="col of columns" :field="col.field" :header="col.header" :key="col.field"></Column> </DataTable> ')]],2),r("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import ProductService from '../../service/ProductService'; export default { data() { return { columns: null, products: null } }, productService: null, created() { this.productService = new ProductService(); this.columns = [ {field: 'code', header: 'Code'}, {field: 'name', header: 'Name'}, {field: 'category', header: 'Category'}, {field: 'quantity', header: 'Quantity'} ]; }, mounted() { this.productService.getProductsSmall().then(data => this.products = data); }, methods: { onColReorder() { this.$toast.add({severity:'success', summary: 'Column Reordered', life: 3000}); }, onRowReorder(event) { this.products = event.value; this.$toast.add({severity:'success', summary: 'Rows Reordered', life: 3000}); } } } ")])],1)],1)],1)])}),[function(){var e=this,r=e._self._c;return r("div",{staticClass:"content-section introduction"},[r("div",{staticClass:"feature-intro"},[r("h1",[e._v("DataTable "),r("span",[e._v("Reorder")])]),r("p",[e._v("Order of the columns and rows can be changed using drag and drop.")])])])}],!1,null,null).exports)}}}));
//# sourceMappingURL=DataTableReorderDemo-legacy-D-t3JOpY.js.map
