import{n as a}from"./app.component-2M6wTQPG.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const s={};var n=function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Documentation"}},[e("h5",[t._v("Import")]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import ProgressBar from 'primevue2/progressbar'; ")]),e("h5",[t._v("Getting Started")]),e("p",[t._v('ProgressBar has two modes; "determinate" (default) and "indeterminate". In determinate mode, a value between 0 and 100 is required to display the progress.')]),e("CodeHighlight",[t._v(' <ProgressBar :value="value" /> ')]),e("CodeHighlight",{attrs:{lang:"js"}},[t._v(" data() { return { value: 0 } } ")]),e("p",[t._v("Indeterminate is simplly enabled using "),e("i",[t._v("mode")]),t._v(" property.")]),e("CodeHighlight",[t._v(' <ProgressBar mode="indeterminate"/> ')]),e("h5",[t._v("Slot")]),e("p",[t._v("A custom label can be placed inside the progress bar via the default slot.")]),e("CodeHighlight",[[t._v(' <ProgressBar :value="value"> Percent Complete: {{value}}% </ProgressBar> ')]],2),e("h5",[t._v("Properties")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Current value of the progress.")])]),e("tr",[e("td",[t._v("mode")]),e("td",[t._v("string")]),e("td",[t._v("determinate")]),e("td",[t._v('Defines the mode of the progress, valid values are "determinate" and "indeterminate".')])]),e("tr",[e("td",[t._v("showValue")]),e("td",[t._v("boolean")]),e("td",[t._v("true")]),e("td",[t._v("Whether to display the progress bar value.")])])])])]),e("h5",[t._v("Styling")]),e("p",[t._v("Following is the list of structural style classes, for theming classes visit "),e("router-link",{attrs:{to:"/theming"}},[t._v("theming")]),t._v(" page.")],1),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-progressbar")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-progressbar-determinate")]),e("td",[t._v("Container element of a determinate progressbar.")])]),e("tr",[e("td",[t._v("p-progressbar-indeterminate")]),e("td",[t._v("Container element of an indeterminate progressbar.")])]),e("tr",[e("td",[t._v("p-progressbar-value")]),e("td",[t._v("Element whose width changes according to value.")])]),e("tr",[e("td",[t._v("p-progressbar-label")]),e("td",[t._v("Label element that displays the current value.")])])])])]),e("h5",[t._v("Dependencies")]),e("p",[t._v("None.")])],1),e("TabPanel",{attrs:{header:"Source"}},[e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/prograssbar",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])]),e("CodeHighlight",[[t._v(' <h3>Dynamic</h3> <ProgressBar :value="value1" /> <h3>Static</h3> <ProgressBar :value="value2" :showValue="false" /> <h3>Indeterminate</h3> <ProgressBar mode="indeterminate" style="height: .5em" /> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" export default { data() { return { value1: 0, value2: 50 } }, interval: null, methods: { startProgress() { this.interval = setInterval(() => { let newValue = this.value1 + Math.floor(Math.random() * 10) + 1; if (newValue >= 100) { newValue = 100; } this.value1 = newValue; }, 2000); }, endProgress() { clearInterval(this.interval); this.interval = null; } }, mounted() { this.startProgress(); }, beforeDestroy() { this.endProgress(); } } ")])],1)],1)],1)},o=[],i=a(s,n,o,!1,null,null);const l=i.exports,v={data(){return{value1:0,value2:50}},interval:null,methods:{startProgress(){this.interval=setInterval(()=>{let r=this.value1+Math.floor(Math.random()*10)+1;r>=100&&(r=100),this.value1=r},2e3)},endProgress(){clearInterval(this.interval),this.interval=null}},mounted(){this.startProgress()},beforeDestroy(){this.endProgress()},components:{ProgressBarDoc:l}};var d=function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Dynamic")]),e("ProgressBar",{attrs:{value:t.value1}}),e("h5",[t._v("Static")]),e("ProgressBar",{attrs:{value:t.value2,showValue:!1}}),e("h5",[t._v("Indeterminate")]),e("ProgressBar",{staticStyle:{height:".5em"},attrs:{mode:"indeterminate"}})],1)]),e("ProgressBarDoc")],1)},h=[function(){var r=this,t=r._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[r._v("ProgressBar")]),t("p",[r._v("ProgressBar is a process status indicator.")])])])}],_=a(v,d,h,!1,null,null);const p=_.exports;export{p as default};
//# sourceMappingURL=ProgressBarDemo-B7KrQ4D_.js.map
