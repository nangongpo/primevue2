import{n as o}from"./app.component-CxwrbeA3.js";import{P as l}from"./ProductService-B_eIBIF9.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const s={data(){return{baseCode:{basic:'\n<div class="card">\n    <h5>Single Column</h5>\n    <DataTable :value="products" responsiveLayout="scroll">\n        <Column field="code" header="Code" sortable></Column>\n        <Column field="name" header="Name" sortable></Column>\n        <Column field="category" header="Category" sortable></Column>\n        <Column field="quantity" header="Quantity" sortable></Column>\n        <Column field="price" header="Price" sortable>\n            <template #body="slotProps">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n    </DataTable>\n</div>\n\n<div class="card">\n    <h5>Multiple Columns</h5>\n    <DataTable :value="products" sortMode="multiple" responsiveLayout="scroll">\n        <Column field="code" header="Code" sortable></Column>\n        <Column field="name" header="Name" sortable></Column>\n        <Column field="category" header="Category" sortable></Column>\n        <Column field="quantity" header="Quantity" sortable></Column>\n        <Column field="price" header="Price" sortable>\n            <template #body="slotProps">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n    </DataTable>\n</div>\n\n<div class="card">\n    <h5>Presort</h5>\n    <DataTable :value="products" sortField="category" :sortOrder="-1" responsiveLayout="scroll">\n        <Column field="code" header="Code" sortable></Column>\n        <Column field="name" header="Name" sortable></Column>\n        <Column field="category" header="Category" sortable></Column>\n        <Column field="quantity" header="Quantity" sortable></Column>\n        <Column field="price" header="Price" sortable>\n            <template #body="slotProps">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n    </DataTable>\n</div>\n\n<div class="card">\n    <h5>Removable Sort</h5>\n    <DataTable :value="products" removableSort responsiveLayout="scroll">\n        <Column field="code" header="Code" sortable></Column>\n        <Column field="name" header="Name" sortable></Column>\n        <Column field="category" header="Category" sortable></Column>\n        <Column field="quantity" header="Quantity" sortable></Column>\n        <Column field="price" header="Price" sortable>\n            <template #body="slotProps">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n    </DataTable>\n</div>\n        '},baseCode2:{basic:"\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    }\n}\n        "}}}};var n=function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("DocSectionCode",{attrs:{code:t.baseCode}}),e("DocSectionCode",{attrs:{code:t.baseCode2,importCode:""}})],1)],1)],1)},d=[],u=o(s,n,d,!1,null,null);const i=u.exports,c={components:{DataTableSortDoc:i},data(){return{products:null}},productService:null,created(){this.productService=new l},mounted(){this.productService.getProductsSmall().then(r=>this.products=r)},methods:{formatCurrency(r){return r.toLocaleString("en-US",{style:"currency",currency:"USD"})}}};var m=function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Single Column")]),e("DataTable",{attrs:{value:t.products,responsiveLayout:"scroll"}},[e("Column",{attrs:{field:"code",header:"Code",sortable:""}}),e("Column",{attrs:{field:"name",header:"Name",sortable:""}}),e("Column",{attrs:{field:"category",header:"Category",sortable:""}}),e("Column",{attrs:{field:"quantity",header:"Quantity",sortable:""}}),e("Column",{attrs:{field:"price",header:"Price",sortable:""},scopedSlots:t._u([{key:"body",fn:function(a){return[t._v(" "+t._s(t.formatCurrency(a.data.price))+" ")]}}])})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Multiple Columns")]),e("p",[t._v("Use metakey to add a column to the sort selection.")]),e("DataTable",{attrs:{value:t.products,sortMode:"multiple",responsiveLayout:"scroll"}},[e("Column",{attrs:{field:"code",header:"Code",sortable:""}}),e("Column",{attrs:{field:"name",header:"Name",sortable:""}}),e("Column",{attrs:{field:"category",header:"Category",sortable:""}}),e("Column",{attrs:{field:"quantity",header:"Quantity",sortable:""}}),e("Column",{attrs:{field:"price",header:"Price",sortable:""},scopedSlots:t._u([{key:"body",fn:function(a){return[t._v(" "+t._s(t.formatCurrency(a.data.price))+" ")]}}])})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Presort")]),e("DataTable",{attrs:{value:t.products,sortField:"category",sortOrder:-1,responsiveLayout:"scroll"}},[e("Column",{attrs:{field:"code",header:"Code",sortable:""}}),e("Column",{attrs:{field:"name",header:"Name",sortable:""}}),e("Column",{attrs:{field:"category",header:"Category",sortable:""}}),e("Column",{attrs:{field:"quantity",header:"Quantity",sortable:""}}),e("Column",{attrs:{field:"price",header:"Price",sortable:""},scopedSlots:t._u([{key:"body",fn:function(a){return[t._v(" "+t._s(t.formatCurrency(a.data.price))+" ")]}}])})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Removable Sort")]),e("DataTable",{attrs:{value:t.products,removableSort:"",responsiveLayout:"scroll"}},[e("Column",{attrs:{field:"code",header:"Code",sortable:""}}),e("Column",{attrs:{field:"name",header:"Name",sortable:""}}),e("Column",{attrs:{field:"category",header:"Category",sortable:""}}),e("Column",{attrs:{field:"quantity",header:"Quantity",sortable:""}}),e("Column",{attrs:{field:"price",header:"Price",sortable:""},scopedSlots:t._u([{key:"body",fn:function(a){return[t._v(" "+t._s(t.formatCurrency(a.data.price))+" ")]}}])})],1)],1)]),e("DataTableSortDoc")],1)},C=[function(){var r=this,t=r._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[r._v("DataTable "),t("span",[r._v("Sort")])]),t("p",[r._v(" Enabling sortable property on a column is enough to make a column sortable. Multiple column sorting is enabled using sortMode property and used with metaKey. ")])])])}],p=o(c,m,C,!1,null,null);const S=p.exports;export{S as default};
//# sourceMappingURL=Sort-BHVXIf5k.js.map
