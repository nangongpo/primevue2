import{N as a}from"./NodeService-DGU-G-ef.js";import{n as o}from"./app.component-XqgfEEHA.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const r={data(){return{nodes:null}},nodeService:null,created(){this.nodeService=new a},mounted(){this.nodeService.getTreeTableNodes().then(n=>this.nodes=n)}};var i=function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Fit Mode")]),e("TreeTable",{attrs:{value:t.nodes,resizableColumns:!0,columnResizeMode:"fit",showGridlines:""}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0}}),e("Column",{attrs:{field:"size",header:"Size"}}),e("Column",{attrs:{field:"type",header:"Type"}})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Expand Mode")]),e("TreeTable",{attrs:{value:t.nodes,resizableColumns:!0,columnResizeMode:"expand",showGridlines:""}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0}}),e("Column",{attrs:{field:"size",header:"Size"}}),e("Column",{attrs:{field:"type",header:"Type"}})],1)],1)]),e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("CodeHighlight",[[t._v(' <h3>Fit Mode</h3> <TreeTable :value="nodes" :resizableColumns="true" columnResizeMode="fit"> <Column field="name" header="Name" :expander="true"></Column> <Column field="size" header="Size"></Column> <Column field="type" header="Type"></Column> </TreeTable> <h3>Expand Mode</h3> <TreeTable :value="nodes" :resizableColumns="true" columnResizeMode="expand"> <Column field="name" header="Name" :expander="true"></Column> <Column field="size" header="Size"></Column> <Column field="type" header="Type"></Column> </TreeTable> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import NodeService from '../../service/NodeService'; export default { data() { return { nodes: null } }, nodeService: null, created() { this.nodeService = new NodeService(); }, mounted() { this.nodeService.getTreeTableNodes().then(data => this.nodes = data); } } ")])],1)],1)],1)])},d=[function(){var n=this,t=n._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[n._v("TreeTable "),t("span",[n._v("Column Resize")])]),t("p",[n._v('Columns can be resized using drag drop by setting the resizableColumns to true. There are two resize modes; "fit" and "expand". Fit is the default one and the overall table width does not change when a column is resized. In "expand" mode, table width also changes along with the column width.')])])])}],s=o(r,i,d,!1,null,null);const v=s.exports;export{v as default};
//# sourceMappingURL=TreeTableColResizeDemo-BOa6xZVI.js.map
