{"version":3,"file":"SliderDemo-legacy-CMbWcWmJ.js","sources":["../../src/doc/slider/Documentation.vue","../../src/doc/slider/SourceCode.vue","../../src/doc/slider/index.vue","../../src/views/slider/SliderDemo.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>Two-way binding is defined using the standard v-model directive.</p>\n    <DocSectionCode :code=\"baseCode\" />\n\n    <h5>Range</h5>\n    <p>\n      Range slider provides two handles to define two values. Enable\n      <i>range</i> property and bind an array to implement a range slider.\n    </p>\n    <DocSectionCode :code=\"rangeCode\" />\n    <DocSectionCode :code=\"rangeCode2\" importCode />\n\n    <h5>Orientation</h5>\n    <p>\n      Default layout of slider is horizontal, use <i>orientation</i> property\n      for the alternative vertical mode.\n    </p>\n    <DocSectionCode :code=\"orientationCode\" />\n\n    <h5>Step</h5>\n    <p>\n      Step factor is 1 by default and can be customized with <i>step</i> option.\n    </p>\n    <DocSectionCode :code=\"stepCode\" />\n\n    <h5>Min-Max</h5>\n    <p>Boundaries are specified with min and max attributes.</p>\n    <DocSectionCode :code=\"minMaxCode\" />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element.\n      Following are the additional properties to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>value</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>min</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Mininum boundary value.</td>\n          </tr>\n          <tr>\n            <td>max</td>\n            <td>number</td>\n            <td>100</td>\n            <td>Maximum boundary value.</td>\n          </tr>\n          <tr>\n            <td>orientation</td>\n            <td>string</td>\n            <td>horizontal</td>\n            <td>\n              Orientation of the slider, valid values are horizontal and\n              vertical.\n            </td>\n          </tr>\n          <tr>\n            <td>step</td>\n            <td>number</td>\n            <td>1</td>\n            <td>Step factor to increment/decrement the value.</td>\n          </tr>\n          <tr>\n            <td>range</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When speficed, allows two boundary values to be picked.</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>\n              When present, it specifies that the component should be disabled.\n            </td>\n          </tr>\n          <tr>\n            <td>ariaLabelledBy</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Establishes relationships between the component and label(s) where\n              its value should be one or more element IDs.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>change</td>\n            <td>\n              event.originalEvent: Original event <br />\n              event.value: Selected option value\n            </td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>input</td>\n            <td>value: New value</td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>slideEnd</td>\n            <td>\n              event.originalEvent: Slide event <br />\n              event.value: New value.\n            </td>\n            <td>Callback to invoke when slide ends.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes\n      visit <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-slider</td>\n            <td>Container element</td>\n          </tr>\n          <tr>\n            <td>p-slider-handle</td>\n            <td>Handle element.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Slider from 'primevue2/slider';\n        `\n      },\n      baseCode: {\n        basic: `\n<Slider v-model=\"value\" />\n        `\n      },\n      rangeCode: {\n        basic: `\n<Slider v-model=\"value\" :range=\"true\" />\n        `\n      },\n      rangeCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tvalue: [20,80]\n\t\t}\n\t}\n}\n        `\n      },\n      orientationCode: {\n        basic: `\n<Slider v-model=\"value\" orientation=\"vertical\" />\n        `\n      },\n      stepCode: {\n        basic: `\n<Slider v-model=\"value\" :step=\"20\" />\n        `\n      },\n      minMaxCode: {\n        basic: `\n<Slider v-model=\"value\" :step=\"20\" :min=\"50\" :max=\"200\" />\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/slider\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n    <DocSectionCode :code=\"sourceCode3\" importStyle />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h3>Basic: {{value1}}</h3>\n<Slider v-model=\"value1\" />\n\n<h3>Input: {{value2}}</h3>\n<InputText v-model.number=\"value2\" />\n<Slider v-model=\"value2\" />\n\n<h3>Step: {{value3}}</h3>\n<Slider v-model=\"value3\" :step=\"20\" />\n\n<h3>Range: {{value4}}</h3>\n<Slider v-model=\"value4\" :range=\"true\" />\n\n<h3>Vertical: {{value5}}</h3>\n<Slider v-model=\"value5\" orientation=\"vertical\" />\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tvalue1: null,\n\t\t\tvalue2: 50,\n\t\t\tvalue3: 20,\n\t\t\tvalue4: [20,80],\n\t\t\tvalue5: 50\n\t\t}\n\t}\n}\n        `\n      },\n      sourceCode3: {\n        basic: `\n.p-slider-horizontal, .p-inputtext {\n\twidth: 14rem;\n}\n\n.p-slider-vertical {\n\theight: 14rem;\n}\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Slider</h1>\n        <p>Slider is an input component to provide a numerical input.</p>\n      </div>\n      <AppInputStyleSwitch />\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Basic: {{ value1 }}</h5>\n        <Slider v-model=\"value1\" :step=\"0.01\" :min=\"1.35\" />\n\n        <h5>Input: {{ value2 }}</h5>\n        <InputText v-model.number=\"value2\" />\n        <Slider v-model=\"value2\" />\n\n        <h5>Step: {{ value3 }}</h5>\n        <Slider v-model=\"value3\" :step=\"20\" />\n\n        <h5>Decimal Step: {{ value4 }}</h5>\n        <Slider v-model=\"value4\" :step=\"0.5\" />\n\n        <h5>Range: {{ value5 }}</h5>\n        <Slider v-model=\"value5\" :range=\"true\" />\n\n        <h5>Vertical: {{ value6 }}</h5>\n        <Slider v-model=\"value6\" orientation=\"vertical\" :step=\"0.01\" />\n      </div>\n    </div>\n\n    <SliderDoc />\n  </div>\n</template>\n\n<script>\nimport SliderDoc from '@/doc/slider/index.vue'\n\nexport default {\n  data() {\n    return {\n      value1: null,\n      value2: 50,\n      value3: 20,\n      value4: 30.5,\n      value5: [20, 80],\n      value6: 50\n    }\n  },\n  components: {\n    SliderDoc: SliderDoc\n  }\n}\n</script>\n\n<style scoped>\n.p-slider-horizontal,\n.p-inputtext {\n  width: 14rem;\n}\n\n.p-slider-vertical {\n  height: 14rem;\n}\n</style>\n"],"names":["name","data","importCode","basic","baseCode","rangeCode","rangeCode2","orientationCode","stepCode","minMaxCode","sourceCode1","sourceCode2","sourceCode3","components","Documentation","SourceCode","value1","value2","value3","value4","value5","value6","SliderDoc"],"mappings":"6hBAkLA,QAAA,CACAA,KAAA,gBACAC,gBACA,MAAA,CACAC,WAAA,CACAC,MAGA,sDACAC,SAAA,CACAD,MAAA,0CAIAE,UAAA,CACAF,MAGA,wDACAG,WAAA,CACAH,MAAA,+FAUAI,gBAAA,CACAJ,uEAIAK,SAAA,CACAL,MAAA,qDAIAM,WAAA,CACAN,gFAKA,62IC/MA,CACAH,KAAA,aACAC,gBACA,MAAA,CACAS,YAAA,CACAP,MAiBA,4YACAQ,YAAA,CACAR,oLAcAS,YAAA,CACAT,MASA,qHAEA,igBCnDA,CACAU,WAAA,CAAAC,cAAAA,EAAAC,WAAAA,kSCuBA,CACAd,KAAAA,WACA,MAAA,CACAe,OAAA,KACAC,OAAA,GACAC,OAAA,GACAC,OAAA,KACAC,OAAA,CAAA,GAAA,IACAC,OAAA,GAEA,EACAR,WAAA,CACAS,UAAAA"}