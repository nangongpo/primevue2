!function(){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function o(e,o,n){var i;return i=function(e,o){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var i=n.call(e,o||"default");if("object"!=t(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===o?String:Number)(e)}(o,"string"),(o="symbol"==t(i)?i:i+"")in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}System.register(["./app.component-legacy-7lS-4wLG.js","./ProductService-legacy-Ctw4T0RP.js","./resize-observer-polyfill-legacy-0iJwNYH9.js","./app.fullcalendar-legacy-DHW3cqgj.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-DJ-X2bns.js"],(function(t,n){"use strict";var i,a,r;return{setters:[function(t){i=t.n,a=t.aK},function(t){r=t.P},null,null,null,null],execute:function(){var n=document.createElement("style");n.textContent=".table-header[data-v-96cc77ab]{display:flex;align-items:center;justify-content:space-between}@media screen and (max-width: 960px){.table-header[data-v-96cc77ab]{align-items:start}}.product-image[data-v-96cc77ab]{width:100px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.p-dialog .product-image[data-v-96cc77ab]{width:150px;margin:0 auto 2rem;display:block}.confirmation-content[data-v-96cc77ab]{display:flex;align-items:center;justify-content:center}@media screen and (max-width: 960px){[data-v-96cc77ab] .p-toolbar{flex-wrap:wrap}[data-v-96cc77ab] .p-toolbar .p-button{margin-bottom:.25rem}}\n/*$vite$:1*/",document.head.appendChild(n);var s={components:{DataTableCrudDoc:i({data:function(){return{baseCode:{basic:'\n<div class="card">\n    <Toolbar class="mb-4">\n        <template #start>\n            <Button label="New" icon="pi pi-plus" class="p-button-success mr-2" @click="openNew" />\n            <Button label="Delete" icon="pi pi-trash" class="p-button-danger" @click="confirmDeleteSelected" :disabled="!selectedProducts || !selectedProducts.length" />\n        </template>\n\n        <template #end>\n            <FileUpload mode="basic" accept="image/*" :maxFileSize="1000000" label="Import" chooseLabel="Import" class="mr-2 inline-block" />\n            <Button label="Export" icon="pi pi-upload" class="p-button-help" @click="exportCSV($event)"  />\n        </template>\n    </Toolbar>\n\n    <DataTable ref="dt" :value="products" :selection.sync="selectedProducts" dataKey="id"\n        :paginator="true" :rows="10" :filters="filters"\n        paginatorTemplate="FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown" :rowsPerPageOptions="[5,10,25]"\n        currentPageReportTemplate="Showing {first} to {last} of {totalRecords} products" responsiveLayout="scroll">\n        <template #header>\n            <div class="table-header flex flex-column md:flex-row md:justify-content-between">\n                <h5 class="mb-2 md:m-0 md:align-self-center">Manage Products</h5>\n                <span class="p-input-icon-left">\n                    <i class="pi pi-search" />\n                    <InputText v-model="filters[\'global\'].value" placeholder="Search..." />\n                </span>\n            </div>\n        </template>\n\n        <Column selectionMode="multiple" :styless="{width: \'3rem\'}" :exportable="false"></Column>\n        <Column field="code" header="Code" :sortable="true" :styles="{\'min-width\':\'12rem\'}"></Column>\n        <Column field="name" header="Name" :sortable="true" :styles="{\'min-width\':\'16rem\'}"></Column>\n        <Column header="Image">\n            <template #body="slotProps">\n                <img :src="\'demo/images/product/\' + slotProps.data.image" :alt="slotProps.data.image" class="product-image" />\n            </template>\n        </Column>\n        <Column field="price" header="Price" :sortable="true" :styles="{\'min-width\':\'8rem\'}">\n            <template #body="slotProps">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n        <Column field="category" header="Category" :sortable="true" :styles="{\'min-width\':\'10rem\'}"></Column>\n        <Column field="rating" header="Reviews" :sortable="true" :styles="{\'min-width\':\'12rem\'}">\n            <template #body="slotProps">\n                <Rating :value="slotProps.data.rating" :readonly="true" :cancel="false" />\n            </template>\n        </Column>\n        <Column field="inventoryStatus" header="Status" :sortable="true" :styles="{\'min-width\':\'12rem\'}">\n            <template #body="slotProps">\n                <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span>\n            </template>\n        </Column>\n        <Column :exportable="false" :styles="{\'min-width\':\'8rem\'}">\n            <template #body="slotProps">\n                <Button icon="pi pi-pencil" class="p-button-rounded p-button-success mr-2" @click="editProduct(slotProps.data)" />\n                <Button icon="pi pi-trash" class="p-button-rounded p-button-warning" @click="confirmDeleteProduct(slotProps.data)" />\n            </template>\n        </Column>\n    </DataTable>\n</div>\n\n<Dialog :visible.sync="productDialog" :style="{width: \'450px\'}" header="Product Details" :modal="true" class="p-fluid">\n    <img :src="\'demo/images/product/\' + product.image" :alt="product.image" class="product-image" v-if="product.image" />\n    <div class="field">\n        <label for="name">Name</label>\n        <InputText id="name" v-model.trim="product.name" required="true" autofocus :class="{\'p-invalid\': submitted && !product.name}" />\n        <small class="p-invalid" v-if="submitted && !product.name">Name is required.</small>\n    </div>\n    <div class="field">\n        <label for="description">Description</label>\n        <Textarea id="description" v-model="product.description" required="true" rows="3" cols="20" />\n    </div>\n\n    <div class="field">\n        <label class="mb-3">Category</label>\n        <div class="formgrid grid">\n            <div class="field-radiobutton col-6">\n                <RadioButton id="category1" name="category" value="Accessories" v-model="product.category" />\n                <label for="category1">Accessories</label>\n            </div>\n            <div class="field-radiobutton col-6">\n                <RadioButton id="category2" name="category" value="Clothing" v-model="product.category" />\n                <label for="category2">Clothing</label>\n            </div>\n            <div class="field-radiobutton col-6">\n                <RadioButton id="category3" name="category" value="Electronics" v-model="product.category" />\n                <label for="category3">Electronics</label>\n            </div>\n            <div class="field-radiobutton col-6">\n                <RadioButton id="category4" name="category" value="Fitness" v-model="product.category" />\n                <label for="category4">Fitness</label>\n            </div>\n        </div>\n    </div>\n\n    <div class="formgrid grid">\n        <div class="field col">\n            <label for="price">Price</label>\n            <InputNumber id="price" v-model="product.price" mode="currency" currency="USD" locale="en-US" />\n        </div>\n        <div class="field col">\n            <label for="quantity">Quantity</label>\n            <InputNumber id="quantity" v-model="product.quantity" integeronly />\n        </div>\n    </div>\n    <template #footer>\n        <Button label="Cancel" icon="pi pi-times" class="p-button-text" @click="hideDialog"/>\n        <Button label="Save" icon="pi pi-check" class="p-button-text" @click="saveProduct" />\n    </template>\n</Dialog>\n\n<Dialog :visible.sync="deleteProductDialog" :styles="{width: \'450px\'}" header="Confirm" :modal="true">\n    <div class="confirmation-content">\n        <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" />\n        <span v-if="product">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n    </div>\n    <template #footer>\n        <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductDialog = false"/>\n        <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteProduct" />\n    </template>\n</Dialog>\n\n<Dialog :visible.sync="deleteProductsDialog" :styles="{width: \'450px\'}" header="Confirm" :modal="true">\n    <div class="confirmation-content">\n        <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" />\n        <span v-if="product">Are you sure you want to delete the selected products?</span>\n    </div>\n    <template #footer>\n        <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductsDialog = false"/>\n        <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteSelectedProducts" />\n    </template>\n</Dialog>\n        '},baseCode2:{basic:"\nimport ProductService from '../../service/ProductService';\nimport {FilterMatchMode} from 'primevue2/api';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            productDialog: false,\n            deleteProductDialog: false,\n            deleteProductsDialog: false,\n            product: {},\n            selectedProducts: null,\n            filters: {},\n            submitted: false,\n            statuses: [\n\t\t\t\t{label: 'INSTOCK', value: 'instock'},\n\t\t\t\t{label: 'LOWSTOCK', value: 'lowstock'},\n\t\t\t\t{label: 'OUTOFSTOCK', value: 'outofstock'}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n        this.initFilters();\n    },\n    mounted() {\n        this.productService.getProducts().then(data => this.products = data);\n    },\n    methods: {\n        formatCurrency(value) {\n            if(value)\n\t\t\t\treturn value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n\t\t\treturn;\n        },\n        openNew() {\n            this.product = {};\n            this.submitted = false;\n            this.productDialog = true;\n        },\n        hideDialog() {\n            this.productDialog = false;\n            this.submitted = false;\n        },\n        saveProduct() {\n            this.submitted = true;\n\n\t\t\tif (this.product.name.trim()) {\n                if (this.product.id) {\n                    this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\n                    this.products[this.findIndexById(this.product.id)] = this.product;\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\n                }\n                else {\n                    this.product.id = this.createId();\n                    this.product.code = this.createId();\n                    this.product.image = 'product-placeholder.svg';\n                    this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\n                    this.products.push(this.product);\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\n                }\n\n                this.productDialog = false;\n                this.product = {};\n            }\n        },\n        editProduct(product) {\n            this.product = {...product};\n            this.productDialog = true;\n        },\n        confirmDeleteProduct(product) {\n            this.product = product;\n            this.deleteProductDialog = true;\n        },\n        deleteProduct() {\n            this.products = this.products.filter(val => val.id !== this.product.id);\n            this.deleteProductDialog = false;\n            this.product = {};\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\n        },\n        findIndexById(id) {\n            let index = -1;\n            for (let i = 0; i &lt; this.products.length; i++) {\n                if (this.products[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        },\n        createId() {\n            let id = '';\n            var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            for ( var i = 0; i &lt; 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n        exportCSV() {\n            this.$refs.dt.exportCSV();\n        },\n        confirmDeleteSelected() {\n            this.deleteProductsDialog = true;\n        },\n        deleteSelectedProducts() {\n            this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n            this.deleteProductsDialog = false;\n            this.selectedProducts = null;\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\n        },\n        initFilters() {\n            this.filters = {\n                'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\n            }\n        }\n    }\n}\n        "},baseCode3:{basic:"\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 100px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 150px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media screen and (max-width: 960px) {\n\t:deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n\n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n        "}}}},(function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("DocSectionCode",{attrs:{code:t.baseCode}}),e("DocSectionCode",{attrs:{code:t.baseCode2,importCode:""}}),e("DocSectionCode",{attrs:{code:t.baseCode3,importStyle:""}})],1)],1)],1)}),[],!1,null,null).exports},data:function(){return{products:null,productDialog:!1,deleteProductDialog:!1,deleteProductsDialog:!1,product:{},selectedProducts:null,filters:{},submitted:!1,statuses:[{label:"INSTOCK",value:"instock"},{label:"LOWSTOCK",value:"lowstock"},{label:"OUTOFSTOCK",value:"outofstock"}]}},productService:null,created:function(){this.productService=new r,this.initFilters()},mounted:function(){var t=this;this.productService.getProducts().then((function(e){return t.products=e}))},methods:{formatCurrency:function(t){if(t)return t.toLocaleString("en-US",{style:"currency",currency:"USD"})},openNew:function(){this.product={},this.submitted=!1,this.productDialog=!0},hideDialog:function(){this.productDialog=!1,this.submitted=!1},saveProduct:function(){this.submitted=!0,this.product.name.trim()&&(this.product.id?(this.product.inventoryStatus=this.product.inventoryStatus.value?this.product.inventoryStatus.value:this.product.inventoryStatus,this.products[this.findIndexById(this.product.id)]=this.product,this.$toast.add({severity:"success",summary:"Successful",detail:"Product Updated",life:3e3})):(this.product.id=this.createId(),this.product.code=this.createId(),this.product.image="product-placeholder.svg",this.product.inventoryStatus=this.product.inventoryStatus?this.product.inventoryStatus.value:"INSTOCK",this.products.push(this.product),this.$toast.add({severity:"success",summary:"Successful",detail:"Product Created",life:3e3})),this.productDialog=!1,this.product={})},editProduct:function(t){this.product=function(t){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?e(Object(i),!0).forEach((function(e){o(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):e(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({},t),this.productDialog=!0},confirmDeleteProduct:function(t){this.product=t,this.deleteProductDialog=!0},deleteProduct:function(){var t=this;this.products=this.products.filter((function(e){return e.id!==t.product.id})),this.deleteProductDialog=!1,this.product={},this.$toast.add({severity:"success",summary:"Successful",detail:"Product Deleted",life:3e3})},findIndexById:function(t){for(var e=-1,o=0;o<this.products.length;o++)if(this.products[o].id===t){e=o;break}return e},createId:function(){for(var t="",e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",o=0;o<5;o++)t+=e.charAt(Math.floor(62*Math.random()));return t},exportCSV:function(){this.$refs.dt.exportCSV()},confirmDeleteSelected:function(){this.deleteProductsDialog=!0},deleteSelectedProducts:function(){var t=this;this.products=this.products.filter((function(e){return!t.selectedProducts.includes(e)})),this.deleteProductsDialog=!1,this.selectedProducts=null,this.$toast.add({severity:"success",summary:"Successful",detail:"Products Deleted",life:3e3})},initFilters:function(){this.filters={global:{value:null,matchMode:a.CONTAINS}}}}};t("default",i(s,(function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("Toolbar",{staticClass:"mb-4",scopedSlots:t._u([{key:"start",fn:function(){return[e("Button",{staticClass:"p-button-success mr-2",attrs:{label:"New",icon:"pi pi-plus"},on:{click:t.openNew}}),e("Button",{staticClass:"p-button-danger",attrs:{label:"Delete",icon:"pi pi-trash",disabled:!t.selectedProducts||!t.selectedProducts.length},on:{click:t.confirmDeleteSelected}})]},proxy:!0},{key:"end",fn:function(){return[e("FileUpload",{staticClass:"mr-2 inline-block",attrs:{mode:"basic",accept:"image/*",maxFileSize:1e6,label:"Import",chooseLabel:"Import"}}),e("Button",{staticClass:"p-button-help",attrs:{label:"Export",icon:"pi pi-upload"},on:{click:function(e){return t.exportCSV(e)}}})]},proxy:!0}])}),e("DataTable",{ref:"dt",attrs:{value:t.products,selection:t.selectedProducts,dataKey:"id",paginator:!0,rows:10,filters:t.filters,paginatorTemplate:"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown",rowsPerPageOptions:[5,10,25],currentPageReportTemplate:"Showing {first} to {last} of {totalRecords} products",responsiveLayout:"scroll"},on:{"update:selection":function(e){t.selectedProducts=e}},scopedSlots:t._u([{key:"header",fn:function(){return[e("div",{staticClass:"table-header flex flex-column md:flex-row md:justify-content-between"},[e("h5",{staticClass:"mb-2 md:m-0 md:align-self-center"},[t._v("Manage Products")]),e("span",{staticClass:"p-input-icon-left"},[e("i",{staticClass:"pi pi-search"}),e("InputText",{attrs:{placeholder:"Search..."},model:{value:t.filters.global.value,callback:function(e){t.$set(t.filters.global,"value",e)},expression:"filters['global'].value"}})],1)])]},proxy:!0}])},[e("Column",{attrs:{selectionMode:"multiple",styless:{width:"3rem"},exportable:!1}}),e("Column",{attrs:{field:"code",header:"Code",sortable:!0,styles:{"min-width":"12rem"}}}),e("Column",{attrs:{field:"name",header:"Name",sortable:!0,styles:{"min-width":"16rem"}}}),e("Column",{attrs:{header:"Image"},scopedSlots:t._u([{key:"body",fn:function(o){return[e("img",{staticClass:"product-image",attrs:{src:t.$publicUrl("demo/images/product/"+o.data.image),alt:o.data.image}})]}}])}),e("Column",{attrs:{field:"price",header:"Price",sortable:!0,styles:{"min-width":"8rem"}},scopedSlots:t._u([{key:"body",fn:function(e){return[t._v(" "+t._s(t.formatCurrency(e.data.price))+" ")]}}])}),e("Column",{attrs:{field:"category",header:"Category",sortable:!0,styles:{"min-width":"10rem"}}}),e("Column",{attrs:{field:"rating",header:"Reviews",sortable:!0,styles:{"min-width":"12rem"}},scopedSlots:t._u([{key:"body",fn:function(t){return[e("Rating",{attrs:{value:t.data.rating,readonly:!0,cancel:!1}})]}}])}),e("Column",{attrs:{field:"inventoryStatus",header:"Status",sortable:!0,styles:{"min-width":"12rem"}},scopedSlots:t._u([{key:"body",fn:function(o){return[e("span",{class:"product-badge status-"+(o.data.inventoryStatus?o.data.inventoryStatus.toLowerCase():"")},[t._v(t._s(o.data.inventoryStatus))])]}}])}),e("Column",{attrs:{exportable:!1,styles:{"min-width":"8rem"}},scopedSlots:t._u([{key:"body",fn:function(o){return[e("Button",{staticClass:"p-button-rounded p-button-success mr-2",attrs:{icon:"pi pi-pencil"},on:{click:function(e){return t.editProduct(o.data)}}}),e("Button",{staticClass:"p-button-rounded p-button-warning",attrs:{icon:"pi pi-trash"},on:{click:function(e){return t.confirmDeleteProduct(o.data)}}})]}}])})],1)],1),e("Dialog",{staticClass:"p-fluid",attrs:{visible:t.productDialog,containerStyle:{width:"450px"},header:"Product Details",modal:!0},on:{"update:visible":function(e){t.productDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("Button",{staticClass:"p-button-text",attrs:{label:"Cancel",icon:"pi pi-times"},on:{click:t.hideDialog}}),e("Button",{staticClass:"p-button-text",attrs:{label:"Save",icon:"pi pi-check"},on:{click:t.saveProduct}})]},proxy:!0}])},[t.product.image?e("img",{staticClass:"product-image",attrs:{src:t.$publicUrl("demo/images/product/"+t.product.image),alt:t.product.image}}):t._e(),e("div",{staticClass:"field"},[e("label",{attrs:{for:"name"}},[t._v("Name")]),e("InputText",{class:{"p-invalid":t.submitted&&!t.product.name},attrs:{id:"name",required:"true",autofocus:""},model:{value:t.product.name,callback:function(e){t.$set(t.product,"name","string"==typeof e?e.trim():e)},expression:"product.name"}}),t.submitted&&!t.product.name?e("small",{staticClass:"p-invalid"},[t._v("Name is required.")]):t._e()],1),e("div",{staticClass:"field"},[e("label",{attrs:{for:"description"}},[t._v("Description")]),e("Textarea",{attrs:{id:"description",required:"true",rows:"3",cols:"20"},model:{value:t.product.description,callback:function(e){t.$set(t.product,"description",e)},expression:"product.description"}})],1),e("div",{staticClass:"field"},[e("label",{staticClass:"mb-3"},[t._v("Category")]),e("div",{staticClass:"formgrid grid"},[e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category1",name:"category",value:"Accessories"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category1"}},[t._v("Accessories")])],1),e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category2",name:"category",value:"Clothing"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category2"}},[t._v("Clothing")])],1),e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category3",name:"category",value:"Electronics"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category3"}},[t._v("Electronics")])],1),e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category4",name:"category",value:"Fitness"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category4"}},[t._v("Fitness")])],1)])]),e("div",{staticClass:"formgrid grid"},[e("div",{staticClass:"field col"},[e("label",{attrs:{for:"price"}},[t._v("Price")]),e("InputNumber",{attrs:{id:"price",mode:"currency",currency:"USD",locale:"en-US"},model:{value:t.product.price,callback:function(e){t.$set(t.product,"price",e)},expression:"product.price"}})],1),e("div",{staticClass:"field col"},[e("label",{attrs:{for:"quantity"}},[t._v("Quantity")]),e("InputNumber",{attrs:{id:"quantity",integeronly:""},model:{value:t.product.quantity,callback:function(e){t.$set(t.product,"quantity",e)},expression:"product.quantity"}})],1)])]),e("Dialog",{attrs:{visible:t.deleteProductDialog,containerStyle:{width:"450px"},header:"Confirm",modal:!0},on:{"update:visible":function(e){t.deleteProductDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("Button",{staticClass:"p-button-text",attrs:{label:"No",icon:"pi pi-times"},on:{click:function(e){t.deleteProductDialog=!1}}}),e("Button",{staticClass:"p-button-text",attrs:{label:"Yes",icon:"pi pi-check"},on:{click:t.deleteProduct}})]},proxy:!0}])},[e("div",{staticClass:"confirmation-content"},[e("i",{staticClass:"pi pi-exclamation-triangle mr-3",staticStyle:{"font-size":"2rem"}}),t.product?e("span",[t._v("Are you sure you want to delete "),e("b",[t._v(t._s(t.product.name))]),t._v("?")]):t._e()])]),e("Dialog",{attrs:{visible:t.deleteProductsDialog,containerStyle:{width:"450px"},header:"Confirm",modal:!0},on:{"update:visible":function(e){t.deleteProductsDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("Button",{staticClass:"p-button-text",attrs:{label:"No",icon:"pi pi-times"},on:{click:function(e){t.deleteProductsDialog=!1}}}),e("Button",{staticClass:"p-button-text",attrs:{label:"Yes",icon:"pi pi-check"},on:{click:t.deleteSelectedProducts}})]},proxy:!0}])},[e("div",{staticClass:"confirmation-content"},[e("i",{staticClass:"pi pi-exclamation-triangle mr-3",staticStyle:{"font-size":"2rem"}}),t.product?e("span",[t._v("Are you sure you want to delete the selected products?")]):t._e()])])],1),e("DataTableCrudDoc")],1)}),[function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[t._v("DataTable "),e("span",[t._v("Crud")])]),e("p",[t._v("This sample demonstrates a CRUD implementation using various PrimeVue components.")])])])}],!1,null,"96cc77ab").exports)}}}))}();
//# sourceMappingURL=Crud-legacy-B4Pv2G_1.js.map
