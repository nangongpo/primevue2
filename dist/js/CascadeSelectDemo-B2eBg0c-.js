import{n}from"./app.component-XqgfEEHA.js";import{_ as i}from"./flag_placeholder-BDuXeLXp.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const s={};var c=function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Documentation"}},[e("h5",[t._v("Import")]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import CascadeSelect from 'primevue2/cascadeselect'; ")]),e("h5",[t._v("Getting Started")]),e("p",[t._v("CascadeSelect requires a value to bind and a collection of arbitrary objects with a nested hierarchy. "),e("i",[t._v("optionGroupLabel")]),t._v(" is used for the text of a category and "),e("i",[t._v("optionGroupChildren")]),t._v(" is to define the children of the category. Note that order of the "),e("i",[t._v("optionGroupChildren")]),t._v(" matters and it should correspond to the data hierarchy.")]),e("CodeHighlight",[t._v(' <CascadeSelect v-model="selectedCity" :options="countries" optionLabel="cname" optionGroupLabel="name" :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" > ')]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" exports default { data() { return { selectedCity: null, countries: [ { name: 'Australia', code: 'AU', states: [ { name: 'New South Wales', cities: [ {cname: 'Sydney', code: 'A-SY'}, {cname: 'Newcastle', code: 'A-NE'}, {cname: 'Wollongong', code: 'A-WO'} ] }, { name: 'Queensland', cities: [ {cname: 'Brisbane', code: 'A-BR'}, {cname: 'Townsville', code: 'A-TO'} ] }, ] }, { name: 'Canada', code: 'CA', states: [ { name: 'Quebec', cities: [ {cname: 'Montreal', code: 'C-MO'}, {cname: 'Quebec City', code: 'C-QU'} ] }, { name: 'Ontario', cities: [ {cname: 'Ottawa', code: 'C-OT'}, {cname: 'Toronto', code: 'C-TO'} ] }, ] }, { name: 'United States', code: 'US', states: [ { name: 'California', cities: [ {cname: 'Los Angeles', code: 'US-LA'}, {cname: 'San Diego', code: 'US-SD'}, {cname: 'San Francisco', code: 'US-SF'} ] }, { name: 'Florida', cities: [ {cname: 'Jacksonville', code: 'US-JA'}, {cname: 'Miami', code: 'US-MI'}, {cname: 'Tampa', code: 'US-TA'}, {cname: 'Orlando', code: 'US-OR'} ] }, { name: 'Texas', cities: [ {cname: 'Austin', code: 'US-AU'}, {cname: 'Dallas', code: 'US-DA'}, {cname: 'Houston', code: 'US-HO'} ] } ] } ] } } } ")]),e("h5",[t._v("Templating")]),e("p",[t._v("Content of an item can be customized with the "),e("i",[t._v("option")]),t._v(" template.")]),e("CodeHighlight",[[t._v(' <CascadeSelect v-model="selectedCity" :options="countries" optionLabel="cname" optionGroupLabel="name" :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem"> <template #option="slotProps"> <div class="country-item"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" v-if="slotProps.option.states" /> <i class="pi pi-compass mr-2" v-if="slotProps.option.cities"></i> <i class="pi pi-map-marker mr-2" v-if="slotProps.option.cname"></i> <span>{{slotProps.option.cname || slotProps.option.name}}</span> </div> </template> </CascadeSelect> ')]],2),e("h5",[t._v("Properties")]),e("p",[t._v("Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value of the component.")])]),e("tr",[e("td",[t._v("options")]),e("td",[t._v("array")]),e("td",[t._v("null")]),e("td",[t._v("An array of selectitems to display as the available options.")])]),e("tr",[e("td",[t._v("optionLabel")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the label of an option.")])]),e("tr",[e("td",[t._v("optionValue")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")])]),e("tr",[e("td",[t._v("optionGroupLabel")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the label of an option group.")])]),e("tr",[e("td",[t._v("optionGroupChildren")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to retrieve the items of a group.")])]),e("tr",[e("td",[t._v("placeholder")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Default text to display when no option is selected.")])]),e("tr",[e("td",[t._v("disabled")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When present, it specifies that the component should be disabled.")])]),e("tr",[e("td",[t._v("dataKey")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("A property to uniquely identify an option.")])]),e("tr",[e("td",[t._v("tabindex")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Index of the element in tabbing order.")])]),e("tr",[e("td",[t._v("inputId")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Identifier of the underlying input element.")])]),e("tr",[e("td",[t._v("ariaLabelledBy")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Establishes relationships between the component and label(s) where its value should be one or more element IDs.")])]),e("tr",[e("td",[t._v("appendTo")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v('Id of the element or "body" for document where the overlay should be appended to.')])])])])]),e("h5",[t._v("Events")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("change")]),e("td",[t._v("event.originalEvent: Original event "),e("br"),t._v(" event.value: Selected option value ")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("group-change")]),e("td",[t._v("event.originalEvent: Original event "),e("br"),t._v(" event.value: Selected option group ")]),e("td",[t._v("Callback to invoke when a group changes.")])]),e("tr",[e("td",[t._v("before-show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is shown.")])]),e("tr",[e("td",[t._v("before-hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is hidden.")])]),e("tr",[e("td",[t._v("show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is shown.")])]),e("tr",[e("td",[t._v("hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is hidden.")])])])])]),e("h5",[t._v("Slots")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("value: Value of the component "),e("br"),t._v(" placeholder: Placeholder text to show")])]),e("tr",[e("td",[t._v("option")]),e("td",[t._v("option: Option instance")])]),e("tr",[e("td",[t._v("indicator")]),e("td",[t._v("-")])])])])]),e("h5",[t._v("Styling")]),e("p",[t._v("Following is the list of structural style classes, for theming classes visit "),e("router-link",{attrs:{to:"/theming"}},[t._v("theming")]),t._v(" page.")],1),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-cascadeselect")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-cascadeselect-label")]),e("td",[t._v("Element to display label of selected option.")])]),e("tr",[e("td",[t._v("p-cascadeselect-trigger")]),e("td",[t._v("Icon element.")])]),e("tr",[e("td",[t._v("p-cascadeselect-panel")]),e("td",[t._v("Icon element.")])]),e("tr",[e("td",[t._v("p-cascadeselect-items-wrapper")]),e("td",[t._v("Wrapper element of items list.")])]),e("tr",[e("td",[t._v("p-cascadeselect-items")]),e("td",[t._v("List element of items.")])]),e("tr",[e("td",[t._v("p-cascadeselect-item")]),e("td",[t._v("An item in the list.")])])])])]),e("h5",[t._v("Dependencies")]),e("p",[t._v("None.")])],1),e("TabPanel",{attrs:{header:"Source"}},[e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/cascadeselect",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])]),e("CodeHighlight",[[t._v(' <h5>Basic</h5> <CascadeSelect v-model="selectedCity1" :options="countries" optionLabel="cname" optionGroupLabel="name" :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" placeholder="Select a City" /> <h5>Templating</h5> <CascadeSelect v-model="selectedCity2" :options="countries" optionLabel="cname" optionGroupLabel="name" :optionGroupChildren="[\'states\', \'cities\']" style="minWidth: 14rem" placeholder="Select a City"> <template #option="slotProps"> <div class="country-item"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" v-if="slotProps.option.states" /> <i class="pi pi-compass mr-2" v-if="slotProps.option.cities"></i> <i class="pi pi-map-marker mr-2" v-if="slotProps.option.cname"></i> <span>{{slotProps.option.cname || slotProps.option.name}}</span> </div> </template> </CascadeSelect> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" export default { data() { return { selectedCity1: null, selectedCity2: null, countries: [ { name: 'Australia', code: 'AU', states: [ { name: 'New South Wales', cities: [ {cname: 'Sydney', code: 'A-SY'}, {cname: 'Newcastle', code: 'A-NE'}, {cname: 'Wollongong', code: 'A-WO'} ] }, { name: 'Queensland', cities: [ {cname: 'Brisbane', code: 'A-BR'}, {cname: 'Townsville', code: 'A-TO'} ] }, ] }, { name: 'Canada', code: 'CA', states: [ { name: 'Quebec', cities: [ {cname: 'Montreal', code: 'C-MO'}, {cname: 'Quebec City', code: 'C-QU'} ] }, { name: 'Ontario', cities: [ {cname: 'Ottawa', code: 'C-OT'}, {cname: 'Toronto', code: 'C-TO'} ] }, ] }, { name: 'United States', code: 'US', states: [ { name: 'California', cities: [ {cname: 'Los Angeles', code: 'US-LA'}, {cname: 'San Diego', code: 'US-SD'}, {cname: 'San Francisco', code: 'US-SF'} ] }, { name: 'Florida', cities: [ {cname: 'Jacksonville', code: 'US-JA'}, {cname: 'Miami', code: 'US-MI'}, {cname: 'Tampa', code: 'US-TA'}, {cname: 'Orlando', code: 'US-OR'} ] }, { name: 'Texas', cities: [ {cname: 'Austin', code: 'US-AU'}, {cname: 'Dallas', code: 'US-DA'}, {cname: 'Houston', code: 'US-HO'} ] } ] } ] } } } ")])],1)],1)],1)},l=[],d=n(s,c,l,!1,null,null);const r=d.exports,m={data(){return{selectedCity1:null,selectedCity2:null,countries:[{name:"Australia",code:"AU",states:[{name:"New South Wales",cities:[{cname:"Sydney",code:"A-SY"},{cname:"Newcastle",code:"A-NE"},{cname:"Wollongong",code:"A-WO"}]},{name:"Queensland",cities:[{cname:"Brisbane",code:"A-BR"},{cname:"Townsville",code:"A-TO"}]}]},{name:"Canada",code:"CA",states:[{name:"Quebec",cities:[{cname:"Montreal",code:"C-MO"},{cname:"Quebec City",code:"C-QU"}]},{name:"Ontario",cities:[{cname:"Ottawa",code:"C-OT"},{cname:"Toronto",code:"C-TO"}]}]},{name:"United States",code:"US",states:[{name:"California",cities:[{cname:"Los Angeles",code:"US-LA"},{cname:"San Diego",code:"US-SD"},{cname:"San Francisco",code:"US-SF"}]},{name:"Florida",cities:[{cname:"Jacksonville",code:"US-JA"},{cname:"Miami",code:"US-MI"},{cname:"Tampa",code:"US-TA"},{cname:"Orlando",code:"US-OR"}]},{name:"Texas",cities:[{cname:"Austin",code:"US-AU"},{cname:"Dallas",code:"US-DA"},{cname:"Houston",code:"US-HO"}]}]}]}},components:{CascadeSelectDoc:r}};var p=function(){var t=this,e=t._self._c;return e("div",[e("div",{staticClass:"content-section introduction"},[t._m(0),e("AppInputStyleSwitch")],1),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Basic")]),e("CascadeSelect",{staticStyle:{minWidth:"14rem"},attrs:{options:t.countries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"],placeholder:"Select a City"},model:{value:t.selectedCity1,callback:function(a){t.selectedCity1=a},expression:"selectedCity1"}}),e("h5",[t._v("Templating")]),e("CascadeSelect",{staticStyle:{minWidth:"14rem"},attrs:{options:t.countries,optionLabel:"cname",optionGroupLabel:"name",optionGroupChildren:["states","cities"],placeholder:"Select a City"},scopedSlots:t._u([{key:"option",fn:function(a){return[e("div",{staticClass:"country-item"},[a.option.states?e("img",{class:"flag flag-"+a.option.code.toLowerCase(),attrs:{src:i}}):t._e(),a.option.cities?e("i",{staticClass:"pi pi-compass mr-2"}):t._e(),a.option.cname?e("i",{staticClass:"pi pi-map-marker mr-2"}):t._e(),e("span",[t._v(t._s(a.option.cname||a.option.name))])])]}}]),model:{value:t.selectedCity2,callback:function(a){t.selectedCity2=a},expression:"selectedCity2"}})],1)]),e("CascadeSelectDoc")],1)},v=[function(){var o=this,t=o._self._c;return t("div",{staticClass:"feature-intro"},[t("h1",[o._v("CascadeSelect")]),t("p",[o._v("CascadeSelect displays a nested structure of options.")])])}],_=n(m,p,v,!1,null,null);const S=_.exports;export{S as default};
//# sourceMappingURL=CascadeSelectDemo-B2eBg0c-.js.map
