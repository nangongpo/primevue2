{"version":3,"file":"DataTableContextMenuDemo-legacy-D_JrJ1KC.js","sources":["../../src/views/datatable/DataTableContextMenuDemo.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>ContextMenu</span></h1>\n\t\t\t\t<p>CDataTable has exclusive integration with ContextMenu.</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"products\" contextMenu :contextMenuSelection.sync=\"selectedProduct\" @row-contextmenu=\"onRowContextMenu\" responsiveLayout=\"scroll\">\n                    <Column field=\"code\" header=\"Code\"></Column>\n                    <Column field=\"name\" header=\"Name\"></Column>\n                    <Column field=\"category\" header=\"Category\"></Column>\n                    <Column field=\"price\" header=\"Price\">\n                        <template #body=\"slotProps\">\n                            {{formatCurrency(slotProps.data.price)}}\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\n            <ContextMenu :model=\"menuModel\" ref=\"cm\" />\n\t\t</div>\n\n        <div class=\"content-section documentation\">\n            <TabView>\n                <TabPanel header=\"Source\">\n<CodeHighlight>\n<template v-pre>\n&lt;DataTable :value=\"products\" contextMenu :contextMenuSelection.sync=\"selectedProduct\" @row-contextmenu=\"onRowContextMenu\" responsiveLayout=\"scroll\"&gt;\n    &lt;Column field=\"code\" header=\"Code\"&gt;&lt;/Column&gt;\n    &lt;Column field=\"name\" header=\"Name\"&gt;&lt;/Column&gt;\n    &lt;Column field=\"category\" header=\"Category\"&gt;&lt;/Column&gt;\n    &lt;Column field=\"price\" header=\"Price\"&gt;\n        &lt;template #body=\"slotProps\"&gt;\n            {{formatCurrency(slotProps.data.price)}}\n        &lt;/template&gt;\n    &lt;/Column&gt;\n&lt;/DataTable&gt;\n\n&lt;ContextMenu :model=\"menuModel\" ref=\"cm\" /&gt;\n</template>\n</CodeHighlight>\n\n<CodeHighlight lang=\"javascript\">\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null,\n            menuModel: [\n                {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.selectedProduct)},\n                {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.selectedProduct)}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        onRowContextMenu(event) {\n            this.$refs.cm.show(event.originalEvent);\n        },\n        viewProduct(product) {\n            this.$toast.add({severity: 'info', summary: 'Product Selected', detail: product.name});\n        },\n        deleteProduct(product) {\n            this.products = this.products.filter((p) => p.id !== product.id);\n            this.$toast.add({severity: 'info', summary: 'Product Deleted', detail: product.name});\n            this.selectedProduct = null;\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        }\n    }\n}\n</CodeHighlight>\n                </TabPanel>\n            </TabView>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  data() {\n    return {\n      products: null,\n      selectedProduct: null,\n      menuModel: [\n        {label: 'View', icon: 'pi pi-fw pi-search', command: () => this.viewProduct(this.selectedProduct)},\n        {label: 'Delete', icon: 'pi pi-fw pi-times', command: () => this.deleteProduct(this.selectedProduct)}\n      ]\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  },\n  methods: {\n    onRowContextMenu(event) {\n      this.$refs.cm.show(event.originalEvent)\n    },\n    viewProduct(product) {\n      this.$toast.add({severity: 'info', summary: 'Product Selected', detail: product.name})\n    },\n    deleteProduct(product) {\n      this.products = this.products.filter((p) => p.id !== product.id)\n      this.$toast.add({severity: 'info', summary: 'Product Deleted', detail: product.name})\n      this.selectedProduct = null\n    },\n    formatCurrency(value) {\n      return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'})\n    }\n  }\n}\n</script>"],"names":["data","_this","this","products","selectedProduct","menuModel","label","icon","command","viewProduct","deleteProduct","productService","created","ProductService","mounted","_this2","getProductsSmall","then","methods","onRowContextMenu","event","$refs","cm","show","originalEvent","product","$toast","add","severity","summary","detail","name","filter","p","id","formatCurrency","value","toLocaleString","style","currency"],"mappings":"8UA8FA,CACAA,KAAA,WAAA,IAAAC,EACAC,KAAA,MAAA,CACAC,SAAA,KACAC,gBAAA,KACAC,UAAA,CACA,CAAAC,MAAA,OAAAC,KAAA,qBAAAC,QAAA,WAAA,OAAAP,EAAAQ,YAAAR,EAAAG,gBAAA,GACA,CAAAE,MAAA,SAAAC,KAAA,oBAAAC,QAAA,WAAA,OAAAP,EAAAS,cAAAT,EAAAG,gBAAA,IAGA,EACAO,eAAA,KACAC,QAAAA,WACAV,KAAAS,eAAA,IAAAE,CACA,EACAC,mBAAAC,IAAAA,EACAb,KAAAA,KAAAS,eAAAK,mBAAAC,MAAA,SAAAjB,GAAA,OAAAe,EAAAZ,SAAAH,CAAA,GACA,EACAkB,QAAA,CACAC,iBAAA,SAAAC,GACAlB,KAAAmB,MAAAC,GAAAC,KAAAH,EAAAI,cACA,EACAf,qBAAAgB,GACAvB,KAAAwB,OAAAC,IAAA,CAAAC,SAAA,OAAAC,QAAA,mBAAAC,OAAAL,EAAAM,MACA,EACArB,cAAAA,SAAAe,GACAvB,KAAAC,SAAAD,KAAAC,SAAA6B,QAAA,SAAAC,GAAA,OAAAA,EAAAC,KAAAT,EAAAS,EAAA,IACAhC,KAAAwB,OAAAC,IAAA,CAAAC,SAAA,OAAAC,QAAA,kBAAAC,OAAAL,EAAAM,OACA7B,KAAAE,gBAAA,IACA,EACA+B,eAAA,SAAAC,GACA,OAAAA,EAAAC,eAAA,QAAA,CAAAC,MAAA,WAAAC,SAAA,OACA"}