System.register(["./app.component-legacy-CT61tSyJ.js","./flag_placeholder-legacy-BDbXk8CQ.js","./app.fullcalendar-legacy-BjBSiNq4.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-NUaqKLPR.js"],(function(e,t){"use strict";var a,l;return{setters:[function(e){a=e.n},function(e){l=e._},null,null,null],execute:function(){var t=document.createElement("style");t.textContent=".p-multiselect[data-v-fbb1d46d]{width:18rem}[data-v-fbb1d46d] .multiselect-custom .p-multiselect-label:not(.p-placeholder){padding-top:.25rem;padding-bottom:.25rem}[data-v-fbb1d46d] .multiselect-custom .country-item-value{padding:.25rem .5rem;border-radius:3px;display:inline-flex;margin-right:.5rem;background-color:var(--primary-color);color:var(--primary-color-text)}[data-v-fbb1d46d] .multiselect-custom .country-item-value img.flag{width:17px}@media screen and (max-width: 640px){.p-multiselect[data-v-fbb1d46d]{width:100%}}\n",document.head.appendChild(t);var o=a({},(function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Documentation"}},[t("h5",[e._v("Import")]),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import MultiSelect from 'primevue2/multiselect'; ")]),t("h5",[e._v("Getting Started")]),t("p",[e._v("MultiSelect requires a value to bind and a collection of arbitrary objects along with the "),t("i",[e._v("optionLabel")]),e._v(" property to specify the label property of the option.")]),t("CodeHighlight",[e._v(' <MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" /> ')]),t("CodeHighlight",{attrs:{lang:"js"}},[e._v(" data() { return { selectedCars: null, cars: [ {brand: 'Audi', value: 'Audi'}, {brand: 'BMW', value: 'BMW'}, {brand: 'Fiat', value: 'Fiat'}, {brand: 'Honda', value: 'Honda'}, {brand: 'Jaguar', value: 'Jaguar'}, {brand: 'Mercedes', value: 'Mercedes'}, {brand: 'Renault', value: 'Renault'}, {brand: 'Volkswagen', value: 'Volkswagen'}, {brand: 'Volvo', value: 'Volvo'} ] } } ")]),t("h5",[e._v("Chips Display")]),t("p",[e._v("A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the "),t("i",[e._v("display")]),e._v(" property to visualize the items as tokens.")]),t("CodeHighlight",[e._v(' <MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" display="chip"/> ')]),t("h5",[e._v("Custom Content")]),t("p",[e._v("Label of an option is used as the display text of an item by default, for custom content support define an "),t("i",[e._v("option")]),e._v(" template that gets the option instance as a parameter.")]),t("p",[e._v("In addition the "),t("i",[e._v("value")]),e._v(" template can be used to customize the selected values display instead of the default comma separated list.")]),t("CodeHighlight",[[e._v(' <MultiSelect v-model="selectedCars2" :options="cars" optionLabel="brand" placeholder="Select a Car"> <template #value="slotProps"> <div class="p-multiselect-car-token" v-for="option of slotProps.value" :key="option.brand"> <img :alt="option.brand" :src="$publicUrl(\'demo/images/car/\' + option.brand + \'.png\')" /> <span>{{option.brand}}</span> </div> <template v-if="!slotProps.value || slotProps.value.length === 0"> Select Brands <template> </template> <template #option="slotProps"> <div class="p-multiselect-car-option"> <img :alt="slotProps.option.brand" :src="$publicUrl(\'demo/images/car/\' + slotProps.option.brand + \'.png\')" /> <span>{{slotProps.option.brand}}</span> </div> </template> </MultiSelect> ')]],2),t("h5",[e._v("Filter")]),t("p",[e._v("Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable the "),t("i",[e._v("filter")]),e._v(" property.")]),t("CodeHighlight",[e._v(' <MultiSelect v-model="selectedCars" :options="cars" :filter="true" optionLabel="brand" placeholder="Select Brands"/> ')]),t("h5",[e._v("Properties")]),t("p",[e._v("Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Type")]),t("th",[e._v("Default")]),t("th",[e._v("Description")])])]),t("tbody",[t("tr",[t("td",[e._v("value")]),t("td",[e._v("any")]),t("td",[e._v("null")]),t("td",[e._v("Value of the component.")])]),t("tr",[t("td",[e._v("options")]),t("td",[e._v("array")]),t("td",[e._v("null")]),t("td",[e._v("An array of selectitems to display as the available options.")])]),t("tr",[t("td",[e._v("optionLabel")]),t("td",[e._v("string | function")]),t("td",[e._v("null")]),t("td",[e._v("Property name or getter function to use as the label of an option.")])]),t("tr",[t("td",[e._v("optionValue")]),t("td",[e._v("string | function")]),t("td",[e._v("null")]),t("td",[e._v("Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")])]),t("tr",[t("td",[e._v("optionDisabled")]),t("td",[e._v("string | function")]),t("td",[e._v("null")]),t("td",[e._v("Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")])]),t("tr",[t("td",[e._v("scrollHeight")]),t("td",[e._v("string")]),t("td",[e._v("200px")]),t("td",[e._v("Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.")])]),t("tr",[t("td",[e._v("placeholder")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Label to display when there are no selections.")])]),t("tr",[t("td",[e._v("disabled")]),t("td",[e._v("boolean")]),t("td",[e._v("false")]),t("td",[e._v("When present, it specifies that the component should be disabled.")])]),t("tr",[t("td",[e._v("filter")]),t("td",[e._v("boolean")]),t("td",[e._v("false")]),t("td",[e._v("When specified, displays an input field to filter the items on keyup.")])]),t("tr",[t("td",[e._v("tabindex")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Index of the element in tabbing order.")])]),t("tr",[t("td",[e._v("inputId")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Identifier of the underlying input element.")])]),t("tr",[t("td",[e._v("dataKey")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("A property to uniquely identify an option.")])]),t("tr",[t("td",[e._v("filterPlaceholder")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Placeholder text to show when filter input is empty.")])]),t("tr",[t("td",[e._v("filterLocale")]),t("td",[e._v("string")]),t("td",[e._v("undefined")]),t("td",[e._v("Locale to use in filtering. The default locale is the host environment's current locale.")])]),t("tr",[t("td",[e._v("ariaLabelledBy")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Establishes relationships between the component and label(s) where its value should be one or more element IDs.")])]),t("tr",[t("td",[e._v("appendTo")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v('Id of the element or "body" for document where the overlay should be appended to.')])]),t("tr",[t("td",[e._v("emptyFilterMessage")]),t("td",[e._v("string")]),t("td",[e._v("No results found")]),t("td",[e._v("Text to display when filtering does not return any results.")])]),t("tr",[t("td",[e._v("display")]),t("td",[e._v("string")]),t("td",[e._v("comma")]),t("td",[e._v('Defines how the selected items are displayed, valid values are "comma" and "chip".')])]),t("tr",[t("td",[e._v("selectionLimit")]),t("td",[e._v("number")]),t("td",[e._v("null")]),t("td",[e._v("Maximum number of selectable items.")])]),t("tr",[t("td",[e._v("showToggleAll")]),t("td",[e._v("boolean")]),t("td",[e._v("true")]),t("td",[e._v("Whether to show the header checkbox to toggle the selection of all items at once.")])])])])]),t("h5",[e._v("Events")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Parameters")]),t("th",[e._v("Description")])])]),t("tbody",[t("tr",[t("td",[e._v("change")]),t("td",[e._v("event.originalEvent: Original event "),t("br"),e._v(" event.value: Selected option value ")]),t("td",[e._v("Callback to invoke on value change.")])]),t("tr",[t("td",[e._v("input")]),t("td",[e._v("value: New value")]),t("td",[e._v("Callback to invoke on value change.")])]),t("tr",[t("td",[e._v("before-show")]),t("td",[e._v("-")]),t("td",[e._v("Callback to invoke before the overlay is shown.")])]),t("tr",[t("td",[e._v("before-hide")]),t("td",[e._v("-")]),t("td",[e._v("Callback to invoke before the overlay is hidden.")])]),t("tr",[t("td",[e._v("show")]),t("td",[e._v("-")]),t("td",[e._v("Callback to invoke when the overlay is shown.")])]),t("tr",[t("td",[e._v("hide")]),t("td",[e._v("-")]),t("td",[e._v("Callback to invoke when the overlay is hidden.")])]),t("tr",[t("td",[e._v("filter")]),t("td",[e._v("event.originalEvent: Original event "),t("br"),e._v(" event.value: Filter value ")]),t("td",[e._v("Callback to invoke on filter input.")])])])])]),t("h5",[e._v("Methods")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Parameters")]),t("th",[e._v("Description")])])]),t("tbody",[t("tr",[t("td",[e._v("show")]),t("td",[e._v("-")]),t("td",[e._v("Shows the overlay.")])]),t("tr",[t("td",[e._v("hide")]),t("td",[e._v("-")]),t("td",[e._v("Hides the overlay.")])])])])]),t("h5",[e._v("Slots")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Parameters")])])]),t("tbody",[t("tr",[t("td",[e._v("value")]),t("td",[e._v("value: Value of the component "),t("br"),e._v(" placeholder: Placeholder prop value")])]),t("tr",[t("td",[e._v("options")]),t("td",[e._v("option: Option instance "),t("br"),e._v(" index: Index of the option")])]),t("tr",[t("td",[e._v("indicator")]),t("td",[e._v("-")])])])])]),t("h5",[e._v("Styling")]),t("p",[e._v("Following is the list of structural style classes, for theming classes visit "),t("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page.")],1),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Element")])])]),t("tbody",[t("tr",[t("td",[e._v("p-multiselect")]),t("td",[e._v("Container element.")])]),t("tr",[t("td",[e._v("p-multiselect-label-container")]),t("td",[e._v("Container of the label to display selected items.")])]),t("tr",[t("td",[e._v("p-multiselect-label-container")]),t("td",[e._v("Label to display selected items.")])]),t("tr",[t("td",[e._v("p-multiselect-trigger")]),t("td",[e._v("Dropdown button.")])]),t("tr",[t("td",[e._v("p-multiselect-filter-container")]),t("td",[e._v("Container of filter input.")])]),t("tr",[t("td",[e._v("p-multiselect-panel")]),t("td",[e._v("Overlay panel for items.")])]),t("tr",[t("td",[e._v("p-multiselect-items")]),t("td",[e._v("List container of items.")])]),t("tr",[t("td",[e._v("p-multiselect-item")]),t("td",[e._v("An item in the list.")])])])])]),t("h5",[e._v("Dependencies")]),t("p",[e._v("None.")])],1),t("TabPanel",{attrs:{header:"Source"}},[t("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/multiselect",target:"_blank",rel:"noopener noreferrer"}},[t("span",[e._v("View on GitHub")])]),t("CodeHighlight",[[e._v(' <h5>Basic</h5> <MultiSelect v-model="selectedCities1" :options="cities" optionLabel="name" placeholder="Select a City" /> <h5>Chips</h5> <MultiSelect v-model="selectedCities2" :options="cities" optionLabel="name" placeholder="Select a City" display="chip"/> <h5>Advanced with Templating and Filtering</h5> <MultiSelect v-model="selectedCountries" :options="countries" optionLabel="name" placeholder="Select Countries" :filter="true" class="multiselect-custom"> <template #value="slotProps"> <div class="country-item country-item-value" v-for="option of slotProps.value" :key="option.code"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + option.code.toLowerCase()" /> <div>{{option.name}}</div> </div> <template v-if="!slotProps.value || slotProps.value.length === 0"> Select Countries </template> </template> <template #option="slotProps"> <div class="country-item"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" /> <div>{{slotProps.option.name}}</div> </div> </template> </MultiSelect> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" export default { data() { return { selectedCities: null, selectedCountries: null, cities: [ {name: 'New York', code: 'NY'}, {name: 'Rome', code: 'RM'}, {name: 'London', code: 'LDN'}, {name: 'Istanbul', code: 'IST'}, {name: 'Paris', code: 'PRS'} ], countries: [ {name: 'Australia', code: 'AU'}, {name: 'Brazil', code: 'BR'}, {name: 'China', code: 'CN'}, {name: 'Egypt', code: 'EG'}, {name: 'France', code: 'FR'}, {name: 'Germany', code: 'DE'}, {name: 'India', code: 'IN'}, {name: 'Japan', code: 'JP'}, {name: 'Spain', code: 'ES'}, {name: 'United States', code: 'US'} ] } } } ")]),t("CodeHighlight",{attrs:{lang:"css"}},[e._v(" .p-multiselect { min-width: 15rem; } :deep(.multiselect-custom) { .p-multiselect-label:not(.p-placeholder) { padding-top: .25rem; padding-bottom: .25rem; } .country-item-value { padding: .25rem .5rem; border-radius: 3px; display: inline-flex; margin-right: .5rem; background-color: var(--primary-color); color: var(--primary-color-text); img.flag { width: 17px; } } } ")])],1)],1)],1)}),[],!1,null,null).exports;e("default",a({data:function(){return{selectedCities1:null,selectedCities2:null,selectedCountries:null,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}]}},components:{MultiSelectDoc:o}},(function(){var e=this,t=e._self._c;return t("div",[t("div",{staticClass:"content-section introduction"},[e._m(0),t("AppInputStyleSwitch")],1),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("h5",[e._v("Basic")]),t("MultiSelect",{attrs:{options:e.cities,optionLabel:"name",placeholder:"Select a City"},model:{value:e.selectedCities1,callback:function(t){e.selectedCities1=t},expression:"selectedCities1"}}),t("h5",[e._v("Chips")]),t("MultiSelect",{attrs:{options:e.cities,optionLabel:"name",placeholder:"Select a City",display:"chip"},model:{value:e.selectedCities2,callback:function(t){e.selectedCities2=t},expression:"selectedCities2"}}),t("h5",[e._v("Advanced with Templating and Filtering")]),t("MultiSelect",{staticClass:"multiselect-custom",attrs:{options:e.countries,optionLabel:"name",placeholder:"Select Countries",filter:!0},scopedSlots:e._u([{key:"value",fn:function(a){return[e._l(a.value,(function(a){return t("div",{key:a.code,staticClass:"country-item country-item-value"},[t("img",{class:"flag flag-"+a.code.toLowerCase(),attrs:{src:l}}),t("div",[e._v(e._s(a.name))])])})),a.value&&0!==a.value.length?e._e():[e._v(" Select Countries ")]]}},{key:"option",fn:function(a){return[t("div",{staticClass:"country-item"},[t("img",{class:"flag flag-"+a.option.code.toLowerCase(),attrs:{src:l}}),t("div",[e._v(e._s(a.option.name))])])]}}]),model:{value:e.selectedCountries,callback:function(t){e.selectedCountries=t},expression:"selectedCountries"}})],1)]),t("MultiSelectDoc")],1)}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"feature-intro"},[t("h1",[e._v("MultiSelect")]),t("p",[e._v("MultiSelect is used to multiple values from a list of options.")])])}],!1,null,"fbb1d46d").exports)}}}));
//# sourceMappingURL=MultiSelectDemo-legacy-Bs3N5Upb.js.map
