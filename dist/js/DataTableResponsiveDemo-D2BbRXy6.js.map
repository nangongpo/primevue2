{"version":3,"file":"DataTableResponsiveDemo-D2BbRXy6.js","sources":["../../src/views/datatable/DataTableResponsiveDemo.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>Responsive</span></h1>\n\t\t\t\t<p>DataTable responsive layout can be achieved in two ways; first approach is displaying a horizontal scrollbar for smaller screens\n                    and second one is defining a breakpoint to display the cells of a row as stacked.</p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"content-section implementation\">\n            <div class=\"card\">\n                <DataTable :value=\"products\" responsiveLayout=\"scroll\">\n                    <template #header>\n                        Scroll\n                    </template>\n                    <Column field=\"code\" header=\"Code\"></Column>\n                    <Column field=\"name\" header=\"Name\"></Column>\n                    <Column field=\"category\" header=\"Category\"></Column>\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\n                    <Column field=\"inventoryStatus\" header=\"Status\">\n                        <template #body=\"slotProps\">\n                            <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </Column>\n                    <Column field=\"rating\" header=\"Rating\">\n                        <template #body=\"slotProps\">\n                            <Rating :value=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\n            <div class=\"card\">\n                <DataTable :value=\"products\" responsiveLayout=\"stack\" breakpoint=\"960px\">\n                    <template #header>\n                        Stack\n                    </template>\n                    <Column field=\"code\" header=\"Code\"></Column>\n                    <Column field=\"name\" header=\"Name\"></Column>\n                    <Column field=\"category\" header=\"Category\"></Column>\n                    <Column field=\"quantity\" header=\"Quantity\"></Column>\n                    <Column field=\"inventoryStatus\" header=\"Status\">\n                        <template #body=\"slotProps\">\n                            <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n                        </template>\n                    </Column>\n                    <Column field=\"rating\" header=\"Rating\">\n                        <template #body=\"slotProps\">\n                            <Rating :value=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <div class=\"content-section documentation\">\n            <TabView>\n                <TabPanel header=\"Source\">\n<CodeHighlight>\n<template v-pre>\n&lt;div class=\"card\"&gt;\n    &lt;DataTable :value=\"products\" responsiveLayout=\"scroll\"&gt;\n        &lt;template #header&gt;\n            Scroll\n        &lt;/template&gt;\n        &lt;Column field=\"code\" header=\"Code\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"name\" header=\"Name\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"category\" header=\"Category\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"quantity\" header=\"Quantity\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"inventoryStatus\" header=\"Status\"&gt;\n            &lt;template #body=\"slotProps\"&gt;\n                &lt;span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\"&gt;{{slotProps.data.inventoryStatus}}&lt;/span&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n        &lt;Column field=\"rating\" header=\"Rating\"&gt;\n            &lt;template #body=\"slotProps\"&gt;\n                &lt;Rating :value=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/div&gt;\n\n&lt;div class=\"card\"&gt;\n    &lt;DataTable :value=\"products\" responsiveLayout=\"stack\" breakpoint=\"960px\"&gt;\n        &lt;template #header&gt;\n            Stack\n        &lt;/template&gt;\n        &lt;Column field=\"code\" header=\"Code\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"name\" header=\"Name\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"category\" header=\"Category\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"quantity\" header=\"Quantity\"&gt;&lt;/Column&gt;\n        &lt;Column field=\"inventoryStatus\" header=\"Status\"&gt;\n            &lt;template #body=\"slotProps\"&gt;\n                &lt;span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\"&gt;{{slotProps.data.inventoryStatus}}&lt;/span&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n        &lt;Column field=\"rating\" header=\"Rating\"&gt;\n            &lt;template #body=\"slotProps\"&gt;\n                &lt;Rating :value=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/div&gt;\n</template>\n</CodeHighlight>\n\n<CodeHighlight lang=\"javascript\">\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    }\n}\n</CodeHighlight>\n                </TabPanel>\n            </TabView>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  data() {\n    return {\n      products: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  }\n}\n</script>"],"names":["_sfc_main","ProductService","data"],"mappings":"+LAsIA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,IACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAC,CACA,EACA,SAAA,CACA,KAAA,eAAA,mBAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,CACA"}