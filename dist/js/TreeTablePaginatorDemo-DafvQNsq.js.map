{"version":3,"file":"TreeTablePaginatorDemo-DafvQNsq.js","sources":["../../src/views/treetable/TreeTablePaginatorDemo.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>TreeTable <span>Paginator</span></h1>\n                <p>Pagination is enabled by setting paginator property to true and defining the rows attribute as the number of root level nodes per page.</p>\n            </div>\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <TreeTable :value=\"nodes\" :paginator=\"true\" :rows=\"10\">\n                    <Column field=\"name\" header=\"Name\" :expander=\"true\"></Column>\n                    <Column field=\"size\" header=\"Size\"></Column>\n                    <Column field=\"type\" header=\"Type\"></Column>\n                </TreeTable>\n            </div>\n        </div>\n\n        <div class=\"content-section documentation\">\n            <TabView>\n                <TabPanel header=\"Source\">\n<CodeHighlight>\n<template v-pre>\n&lt;TreeTable :value=\"nodes\" :paginator=\"true\" :rows=\"10\"&gt;\n    &lt;Column field=\"name\" header=\"Name\" :expander=\"true\"&gt;&lt;/Column&gt;\n    &lt;Column field=\"size\" header=\"Size\"&gt;&lt;/Column&gt;\n    &lt;Column field=\"type\" header=\"Type\"&gt;&lt;/Column&gt;\n&lt;/TreeTable&gt;\n</template>\n</CodeHighlight>\n\n<CodeHighlight lang=\"javascript\">\nexport default {\n    data() {\n        return {\n            nodes: null\n        }\n    },\n    created() {\n        let files = [];\n        for(let i = 0; i &lt; 50; i++) {\n            let node = {\n                key: i,\n                data: {\n                    name: 'Item ' + i,\n                    size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n                    type: 'Type ' + i\n                },\n                children: [\n                    {\n                        key: i + ' - 0',\n                        data: {\n                            name: 'Item ' + i + ' - 0',\n                            size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n                            type: 'Type ' + i\n                        }\n                    }\n                ]\n            };\n\n            files.push(node);\n        }\n\n        this.nodes = files;\n    }\n}\n</CodeHighlight>\n                </TabPanel>\n            </TabView>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      nodes: null\n    }\n  },\n  created() {\n    let files = []\n    for(let i = 0; i < 50; i++) {\n      let node = {\n        key: i,\n        data: {\n          name: 'Item ' + i,\n          size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n          type: 'Type ' + i\n        },\n        children: [\n          {\n            key: i + ' - 0',\n            data: {\n              name: 'Item ' + i + ' - 0',\n              size: Math.floor(Math.random() * 1000) + 1 + 'kb',\n              type: 'Type ' + i\n            }\n          }\n        ]\n      }\n\n      files.push(node)\n    }\n\n    this.nodes = files\n  }\n}\n</script>"],"names":["_sfc_main","files","i","node"],"mappings":"8IA2EA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,MAAA,IACA,CACA,EACA,SAAA,CACA,IAAAC,EAAA,CAAA,EACA,QAAAC,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACA,IAAAC,EAAA,CACA,IAAAD,EACA,KAAA,CACA,KAAA,QAAAA,EACA,KAAA,KAAA,MAAA,KAAA,OAAA,EAAA,GAAA,EAAA,EAAA,KACA,KAAA,QAAAA,CACA,EACA,SAAA,CACA,CACA,IAAAA,EAAA,OACA,KAAA,CACA,KAAA,QAAAA,EAAA,OACA,KAAA,KAAA,MAAA,KAAA,OAAA,EAAA,GAAA,EAAA,EAAA,KACA,KAAA,QAAAA,CACA,CACA,CACA,CACA,EAEAD,EAAA,KAAAE,CAAA,CACA,CAEA,KAAA,MAAAF,CACA,CACA"}