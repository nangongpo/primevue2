!function(){function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,i)}return o}function o(e,o,i){var a;return a=function(e,o){if("object"!=t(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var a=i.call(e,o||"default");if("object"!=t(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===o?String:Number)(e)}(o,"string"),(o="symbol"==t(a)?a:a+"")in e?Object.defineProperty(e,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[o]=i,e}System.register(["./app.component-legacy-Dyxh1RLY.js","./ProductService-legacy-Ctw4T0RP.js","./app.fullcalendar-legacy-BjBSiNq4.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-NUaqKLPR.js"],(function(t,i){"use strict";var a,r,s;return{setters:[function(t){a=t.n,r=t.aJ},function(t){s=t.P},null,null,null],execute:function(){var i=document.createElement("style");i.textContent=".table-header[data-v-c5b7942f]{display:flex;align-items:center;justify-content:space-between}@media screen and (max-width: 960px){.table-header[data-v-c5b7942f]{align-items:start}}.product-image[data-v-c5b7942f]{width:100px;box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.p-dialog .product-image[data-v-c5b7942f]{width:150px;margin:0 auto 2rem;display:block}.confirmation-content[data-v-c5b7942f]{display:flex;align-items:center;justify-content:center}@media screen and (max-width: 960px){[data-v-c5b7942f] .p-toolbar{flex-wrap:wrap}[data-v-c5b7942f] .p-toolbar .p-button{margin-bottom:.25rem}}\n",document.head.appendChild(i);var l={data:function(){return{products:null,productDialog:!1,deleteProductDialog:!1,deleteProductsDialog:!1,product:{},selectedProducts:null,filters:{},submitted:!1,statuses:[{label:"INSTOCK",value:"instock"},{label:"LOWSTOCK",value:"lowstock"},{label:"OUTOFSTOCK",value:"outofstock"}]}},productService:null,created:function(){this.productService=new s,this.initFilters()},mounted:function(){var t=this;this.productService.getProducts().then((function(e){return t.products=e}))},methods:{formatCurrency:function(t){if(t)return t.toLocaleString("en-US",{style:"currency",currency:"USD"})},openNew:function(){this.product={},this.submitted=!1,this.productDialog=!0},hideDialog:function(){this.productDialog=!1,this.submitted=!1},saveProduct:function(){this.submitted=!0,this.product.name.trim()&&(this.product.id?(this.product.inventoryStatus=this.product.inventoryStatus.value?this.product.inventoryStatus.value:this.product.inventoryStatus,this.products[this.findIndexById(this.product.id)]=this.product,this.$toast.add({severity:"success",summary:"Successful",detail:"Product Updated",life:3e3})):(this.product.id=this.createId(),this.product.code=this.createId(),this.product.image="product-placeholder.svg",this.product.inventoryStatus=this.product.inventoryStatus?this.product.inventoryStatus.value:"INSTOCK",this.products.push(this.product),this.$toast.add({severity:"success",summary:"Successful",detail:"Product Created",life:3e3})),this.productDialog=!1,this.product={})},editProduct:function(t){this.product=function(t){for(var i=1;i<arguments.length;i++){var a=null!=arguments[i]?arguments[i]:{};i%2?e(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}({},t),this.productDialog=!0},confirmDeleteProduct:function(t){this.product=t,this.deleteProductDialog=!0},deleteProduct:function(){var t=this;this.products=this.products.filter((function(e){return e.id!==t.product.id})),this.deleteProductDialog=!1,this.product={},this.$toast.add({severity:"success",summary:"Successful",detail:"Product Deleted",life:3e3})},findIndexById:function(t){for(var e=-1,o=0;o<this.products.length;o++)if(this.products[o].id===t){e=o;break}return e},createId:function(){for(var t="",e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",o=0;o<5;o++)t+=e.charAt(Math.floor(62*Math.random()));return t},exportCSV:function(){this.$refs.dt.exportCSV()},confirmDeleteSelected:function(){this.deleteProductsDialog=!0},deleteSelectedProducts:function(){var t=this;this.products=this.products.filter((function(e){return!t.selectedProducts.includes(e)})),this.deleteProductsDialog=!1,this.selectedProducts=null,this.$toast.add({severity:"success",summary:"Successful",detail:"Products Deleted",life:3e3})},initFilters:function(){this.filters={global:{value:null,matchMode:r.CONTAINS}}}}};t("default",a(l,(function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("Toolbar",{staticClass:"mb-4",scopedSlots:t._u([{key:"start",fn:function(){return[e("Button",{staticClass:"p-button-success mr-2",attrs:{label:"New",icon:"pi pi-plus"},on:{click:t.openNew}}),e("Button",{staticClass:"p-button-danger",attrs:{label:"Delete",icon:"pi pi-trash",disabled:!t.selectedProducts||!t.selectedProducts.length},on:{click:t.confirmDeleteSelected}})]},proxy:!0},{key:"end",fn:function(){return[e("FileUpload",{staticClass:"mr-2 inline-block",attrs:{mode:"basic",accept:"image/*",maxFileSize:1e6,label:"Import",chooseLabel:"Import"}}),e("Button",{staticClass:"p-button-help",attrs:{label:"Export",icon:"pi pi-upload"},on:{click:function(e){return t.exportCSV(e)}}})]},proxy:!0}])}),e("DataTable",{ref:"dt",attrs:{value:t.products,selection:t.selectedProducts,dataKey:"id",paginator:!0,rows:10,filters:t.filters,paginatorTemplate:"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown",rowsPerPageOptions:[5,10,25],currentPageReportTemplate:"Showing {first} to {last} of {totalRecords} products",responsiveLayout:"scroll"},on:{"update:selection":function(e){t.selectedProducts=e}},scopedSlots:t._u([{key:"header",fn:function(){return[e("div",{staticClass:"table-header flex flex-column md:flex-row md:justify-content-between"},[e("h5",{staticClass:"mb-2 md:m-0 md:align-self-center"},[t._v("Manage Products")]),e("span",{staticClass:"p-input-icon-left"},[e("i",{staticClass:"pi pi-search"}),e("InputText",{attrs:{placeholder:"Search..."},model:{value:t.filters.global.value,callback:function(e){t.$set(t.filters.global,"value",e)},expression:"filters['global'].value"}})],1)])]},proxy:!0}])},[e("Column",{attrs:{selectionMode:"multiple",styless:{width:"3rem"},exportable:!1}}),e("Column",{attrs:{field:"code",header:"Code",sortable:!0,styles:{"min-width":"12rem"}}}),e("Column",{attrs:{field:"name",header:"Name",sortable:!0,styles:{"min-width":"16rem"}}}),e("Column",{attrs:{header:"Image"},scopedSlots:t._u([{key:"body",fn:function(o){return[e("img",{staticClass:"product-image",attrs:{src:t.$publicUrl("demo/images/product/"+o.data.image),alt:o.data.image}})]}}])}),e("Column",{attrs:{field:"price",header:"Price",sortable:!0,styles:{"min-width":"8rem"}},scopedSlots:t._u([{key:"body",fn:function(e){return[t._v(" "+t._s(t.formatCurrency(e.data.price))+" ")]}}])}),e("Column",{attrs:{field:"category",header:"Category",sortable:!0,styles:{"min-width":"10rem"}}}),e("Column",{attrs:{field:"rating",header:"Reviews",sortable:!0,styles:{"min-width":"12rem"}},scopedSlots:t._u([{key:"body",fn:function(t){return[e("Rating",{attrs:{value:t.data.rating,readonly:!0,cancel:!1}})]}}])}),e("Column",{attrs:{field:"inventoryStatus",header:"Status",sortable:!0,styles:{"min-width":"12rem"}},scopedSlots:t._u([{key:"body",fn:function(o){return[e("span",{class:"product-badge status-"+(o.data.inventoryStatus?o.data.inventoryStatus.toLowerCase():"")},[t._v(t._s(o.data.inventoryStatus))])]}}])}),e("Column",{attrs:{exportable:!1,styles:{"min-width":"8rem"}},scopedSlots:t._u([{key:"body",fn:function(o){return[e("Button",{staticClass:"p-button-rounded p-button-success mr-2",attrs:{icon:"pi pi-pencil"},on:{click:function(e){return t.editProduct(o.data)}}}),e("Button",{staticClass:"p-button-rounded p-button-warning",attrs:{icon:"pi pi-trash"},on:{click:function(e){return t.confirmDeleteProduct(o.data)}}})]}}])})],1)],1),e("Dialog",{staticClass:"p-fluid",attrs:{visible:t.productDialog,containerStyle:{width:"450px"},header:"Product Details",modal:!0},on:{"update:visible":function(e){t.productDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("Button",{staticClass:"p-button-text",attrs:{label:"Cancel",icon:"pi pi-times"},on:{click:t.hideDialog}}),e("Button",{staticClass:"p-button-text",attrs:{label:"Save",icon:"pi pi-check"},on:{click:t.saveProduct}})]},proxy:!0}])},[t.product.image?e("img",{staticClass:"product-image",attrs:{src:t.$publicUrl("demo/images/product/"+t.product.image),alt:t.product.image}}):t._e(),e("div",{staticClass:"field"},[e("label",{attrs:{for:"name"}},[t._v("Name")]),e("InputText",{class:{"p-invalid":t.submitted&&!t.product.name},attrs:{id:"name",required:"true",autofocus:""},model:{value:t.product.name,callback:function(e){t.$set(t.product,"name","string"==typeof e?e.trim():e)},expression:"product.name"}}),t.submitted&&!t.product.name?e("small",{staticClass:"p-invalid"},[t._v("Name is required.")]):t._e()],1),e("div",{staticClass:"field"},[e("label",{attrs:{for:"description"}},[t._v("Description")]),e("Textarea",{attrs:{id:"description",required:"true",rows:"3",cols:"20"},model:{value:t.product.description,callback:function(e){t.$set(t.product,"description",e)},expression:"product.description"}})],1),e("div",{staticClass:"field"},[e("label",{staticClass:"mb-3"},[t._v("Category")]),e("div",{staticClass:"formgrid grid"},[e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category1",name:"category",value:"Accessories"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category1"}},[t._v("Accessories")])],1),e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category2",name:"category",value:"Clothing"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category2"}},[t._v("Clothing")])],1),e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category3",name:"category",value:"Electronics"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category3"}},[t._v("Electronics")])],1),e("div",{staticClass:"field-radiobutton col-6"},[e("RadioButton",{attrs:{id:"category4",name:"category",value:"Fitness"},model:{value:t.product.category,callback:function(e){t.$set(t.product,"category",e)},expression:"product.category"}}),e("label",{attrs:{for:"category4"}},[t._v("Fitness")])],1)])]),e("div",{staticClass:"formgrid grid"},[e("div",{staticClass:"field col"},[e("label",{attrs:{for:"price"}},[t._v("Price")]),e("InputNumber",{attrs:{id:"price",mode:"currency",currency:"USD",locale:"en-US"},model:{value:t.product.price,callback:function(e){t.$set(t.product,"price",e)},expression:"product.price"}})],1),e("div",{staticClass:"field col"},[e("label",{attrs:{for:"quantity"}},[t._v("Quantity")]),e("InputNumber",{attrs:{id:"quantity",integeronly:""},model:{value:t.product.quantity,callback:function(e){t.$set(t.product,"quantity",e)},expression:"product.quantity"}})],1)])]),e("Dialog",{attrs:{visible:t.deleteProductDialog,containerStyle:{width:"450px"},header:"Confirm",modal:!0},on:{"update:visible":function(e){t.deleteProductDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("Button",{staticClass:"p-button-text",attrs:{label:"No",icon:"pi pi-times"},on:{click:function(e){t.deleteProductDialog=!1}}}),e("Button",{staticClass:"p-button-text",attrs:{label:"Yes",icon:"pi pi-check"},on:{click:t.deleteProduct}})]},proxy:!0}])},[e("div",{staticClass:"confirmation-content"},[e("i",{staticClass:"pi pi-exclamation-triangle mr-3",staticStyle:{"font-size":"2rem"}}),t.product?e("span",[t._v("Are you sure you want to delete "),e("b",[t._v(t._s(t.product.name))]),t._v("?")]):t._e()])]),e("Dialog",{attrs:{visible:t.deleteProductsDialog,containerStyle:{width:"450px"},header:"Confirm",modal:!0},on:{"update:visible":function(e){t.deleteProductsDialog=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[e("Button",{staticClass:"p-button-text",attrs:{label:"No",icon:"pi pi-times"},on:{click:function(e){t.deleteProductsDialog=!1}}}),e("Button",{staticClass:"p-button-text",attrs:{label:"Yes",icon:"pi pi-check"},on:{click:t.deleteSelectedProducts}})]},proxy:!0}])},[e("div",{staticClass:"confirmation-content"},[e("i",{staticClass:"pi pi-exclamation-triangle mr-3",staticStyle:{"font-size":"2rem"}}),t.product?e("span",[t._v("Are you sure you want to delete the selected products?")]):t._e()])])],1),e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("CodeHighlight",[[t._v(' <div class="card"> <Toolbar class="mb-4"> <template #start> <Button label="New" icon="pi pi-plus" class="p-button-success mr-2" @click="openNew" /> <Button label="Delete" icon="pi pi-trash" class="p-button-danger" @click="confirmDeleteSelected" :disabled="!selectedProducts || !selectedProducts.length" /> </template> <template #end> <FileUpload mode="basic" accept="image/*" :maxFileSize="1000000" label="Import" chooseLabel="Import" class="mr-2 inline-block" /> <Button label="Export" icon="pi pi-upload" class="p-button-help" @click="exportCSV($event)" /> </template> </Toolbar> <DataTable ref="dt" :value="products" :selection.sync="selectedProducts" dataKey="id" :paginator="true" :rows="10" :filters="filters" paginatorTemplate="FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown" :rowsPerPageOptions="[5,10,25]" currentPageReportTemplate="Showing {first} to {last} of {totalRecords} products" responsiveLayout="scroll"> <template #header> <div class="table-header flex flex-column md:flex-row md:justify-content-between"> <h5 class="mb-2 md:m-0 md:align-self-center">Manage Products</h5> <span class="p-input-icon-left"> <i class="pi pi-search" /> <InputText v-model="filters[\'global\'].value" placeholder="Search..." /> </span> </div> </template> <Column selectionMode="multiple" :styless="{width: \'3rem\'}" :exportable="false"></Column> <Column field="code" header="Code" :sortable="true" :styles="{\'min-width\':\'12rem\'}"></Column> <Column field="name" header="Name" :sortable="true" :styles="{\'min-width\':\'16rem\'}"></Column> <Column header="Image"> <template #body="slotProps"> <img :src="$publicUrl(\'demo/images/product/\' + slotProps.data.image)" :alt="slotProps.data.image" class="product-image" /> </template> </Column> <Column field="price" header="Price" :sortable="true" :styles="{\'min-width\':\'8rem\'}"> <template #body="slotProps"> {{formatCurrency(slotProps.data.price)}} </template> </Column> <Column field="category" header="Category" :sortable="true" :styles="{\'min-width\':\'10rem\'}"></Column> <Column field="rating" header="Reviews" :sortable="true" :styles="{\'min-width\':\'12rem\'}"> <template #body="slotProps"> <Rating :value="slotProps.data.rating" :readonly="true" :cancel="false" /> </template> </Column> <Column field="inventoryStatus" header="Status" :sortable="true" :styles="{\'min-width\':\'12rem\'}"> <template #body="slotProps"> <span :class="\'product-badge status-\' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : \'\')">{{slotProps.data.inventoryStatus}}</span> </template> </Column> <Column :exportable="false" :styles="{\'min-width\':\'8rem\'}"> <template #body="slotProps"> <Button icon="pi pi-pencil" class="p-button-rounded p-button-success mr-2" @click="editProduct(slotProps.data)" /> <Button icon="pi pi-trash" class="p-button-rounded p-button-warning" @click="confirmDeleteProduct(slotProps.data)" /> </template> </Column> </DataTable> </div> <Dialog :visible.sync="productDialog" :style="{width: \'450px\'}" header="Product Details" :modal="true" class="p-fluid"> <img :src="$publicUrl(\'demo/images/product/\' + product.image)" :alt="product.image" class="product-image" v-if="product.image" /> <div class="field"> <label for="name">Name</label> <InputText id="name" v-model.trim="product.name" required="true" autofocus :class="{\'p-invalid\': submitted && !product.name}" /> <small class="p-invalid" v-if="submitted && !product.name">Name is required.</small> </div> <div class="field"> <label for="description">Description</label> <Textarea id="description" v-model="product.description" required="true" rows="3" cols="20" /> </div> <div class="field"> <label class="mb-3">Category</label> <div class="formgrid grid"> <div class="field-radiobutton col-6"> <RadioButton id="category1" name="category" value="Accessories" v-model="product.category" /> <label for="category1">Accessories</label> </div> <div class="field-radiobutton col-6"> <RadioButton id="category2" name="category" value="Clothing" v-model="product.category" /> <label for="category2">Clothing</label> </div> <div class="field-radiobutton col-6"> <RadioButton id="category3" name="category" value="Electronics" v-model="product.category" /> <label for="category3">Electronics</label> </div> <div class="field-radiobutton col-6"> <RadioButton id="category4" name="category" value="Fitness" v-model="product.category" /> <label for="category4">Fitness</label> </div> </div> </div> <div class="formgrid grid"> <div class="field col"> <label for="price">Price</label> <InputNumber id="price" v-model="product.price" mode="currency" currency="USD" locale="en-US" /> </div> <div class="field col"> <label for="quantity">Quantity</label> <InputNumber id="quantity" v-model="product.quantity" integeronly /> </div> </div> <template #footer> <Button label="Cancel" icon="pi pi-times" class="p-button-text" @click="hideDialog"/> <Button label="Save" icon="pi pi-check" class="p-button-text" @click="saveProduct" /> </template> </Dialog> <Dialog :visible.sync="deleteProductDialog" :styles="{width: \'450px\'}" header="Confirm" :modal="true"> <div class="confirmation-content"> <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" /> <span v-if="product">Are you sure you want to delete <b>{{product.name}}</b>?</span> </div> <template #footer> <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductDialog = false"/> <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteProduct" /> </template> </Dialog> <Dialog :visible.sync="deleteProductsDialog" :styles="{width: \'450px\'}" header="Confirm" :modal="true"> <div class="confirmation-content"> <i class="pi pi-exclamation-triangle mr-3" style="font-size: 2rem" /> <span v-if="product">Are you sure you want to delete the selected products?</span> </div> <template #footer> <Button label="No" icon="pi pi-times" class="p-button-text" @click="deleteProductsDialog = false"/> <Button label="Yes" icon="pi pi-check" class="p-button-text" @click="deleteSelectedProducts" /> </template> </Dialog> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import ProductService from '../../service/ProductService'; export default { import {FilterMatchMode} from 'primevue2/api'; export default { data() { return { products: null, productDialog: false, deleteProductDialog: false, deleteProductsDialog: false, product: {}, selectedProducts: null, filters: {}, submitted: false, statuses: [ {label: 'INSTOCK', value: 'instock'}, {label: 'LOWSTOCK', value: 'lowstock'}, {label: 'OUTOFSTOCK', value: 'outofstock'} ] } }, productService: null, created() { this.productService = new ProductService(); this.initFilters(); }, mounted() { this.productService.getProducts().then(data => this.products = data); }, methods: { formatCurrency(value) { if(value) return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'}); return; }, openNew() { this.product = {}; this.submitted = false; this.productDialog = true; }, hideDialog() { this.productDialog = false; this.submitted = false; }, saveProduct() { this.submitted = true; if (this.product.name.trim()) { if (this.product.id) { this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus; this.products[this.findIndexById(this.product.id)] = this.product; this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000}); } else { this.product.id = this.createId(); this.product.code = this.createId(); this.product.image = 'product-placeholder.svg'; this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK'; this.products.push(this.product); this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000}); } this.productDialog = false; this.product = {}; } }, editProduct(product) { this.product = {...product}; this.productDialog = true; }, confirmDeleteProduct(product) { this.product = product; this.deleteProductDialog = true; }, deleteProduct() { this.products = this.products.filter(val => val.id !== this.product.id); this.deleteProductDialog = false; this.product = {}; this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000}); }, findIndexById(id) { let index = -1; for (let i = 0; i < this.products.length; i++) { if (this.products[i].id === id) { index = i; break; } } return index; }, createId() { let id = ''; var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; for ( var i = 0; i < 5; i++ ) { id += chars.charAt(Math.floor(Math.random() * chars.length)); } return id; }, exportCSV() { this.$refs.dt.exportCSV(); }, confirmDeleteSelected() { this.deleteProductsDialog = true; }, deleteSelectedProducts() { this.products = this.products.filter(val => !this.selectedProducts.includes(val)); this.deleteProductsDialog = false; this.selectedProducts = null; this.$toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000}); }, initFilters() { this.filters = { 'global': {value: null, matchMode: FilterMatchMode.CONTAINS}, } } } } ")]),e("CodeHighlight",{attrs:{lang:"css"}},[t._v(" .table-header { display: flex; align-items: center; justify-content: space-between; @media screen and (max-width: 960px) { align-items: start; } } .product-image { width: 100px; box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); } .p-dialog .product-image { width: 150px; margin: 0 auto 2rem auto; display: block; } .confirmation-content { display: flex; align-items: center; justify-content: center; } @media screen and (max-width: 960px) { :deep(.p-toolbar) { flex-wrap: wrap; .p-button { margin-bottom: 0.25rem; } } } ")])],1)],1)],1)])}),[function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[t._v("DataTable "),e("span",[t._v("Crud")])]),e("p",[t._v("This sample demonstrates a CRUD implementation using various PrimeVue components.")])])])}],!1,null,"c5b7942f").exports)}}}))}();
//# sourceMappingURL=DataTableCrudDemo-legacy-Bglfxq4e.js.map
