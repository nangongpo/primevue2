import{N as i}from"./NodeService-DGU-G-ef.js";import{n as o}from"./app.component-XqgfEEHA.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const s={data(){return{loading:!1,nodes:null}},nodeService:null,created(){this.nodeService=new i},mounted(){this.loading=!0,setTimeout(()=>{this.nodes=this.initateNodes(),this.loading=!1},2e3)},methods:{onNodeExpand(n){n.children||(this.loading=!0,setTimeout(()=>{let e={...n};e.children=[];for(let a=0;a<3;a++)e.children.push({key:n.key+"-"+a,label:"Lazy "+n.label+"-"+a});let t={...this.nodes};t[parseInt(n.key,10)]=e,this.nodes=t,this.loading=!1},500))},initateNodes(){return[{key:"0",label:"Node 0",leaf:!1},{key:"1",label:"Node 1",leaf:!1},{key:"2",label:"Node 2",leaf:!1}]}}};var d=function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("Tree",{attrs:{value:e.nodes,loading:e.loading},on:{"node-expand":e.onNodeExpand}})],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v(' <Tree :value="nodes" @node-expand="onNodeExpand" :loading="loading"></Tree> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import NodeService from '../../service/NodeService'; export default { data() { return { loading: false, nodes: null } }, nodeService: null, created() { this.nodeService = new NodeService(); }, mounted() { this.loading = true; setTimeout(() => { this.nodes = this.initateNodes(); this.loading = false; }, 2000); }, methods: { onNodeExpand(node) { if (!node.children) { this.loading = true; setTimeout(() => { let _node = {...node}; _node.children = []; for (let i = 0; i < 3; i++) { _node.children.push({ key: node.key + '-' + i, label: 'Lazy ' + node.label + '-' + i }); } let _nodes = {...this.nodes} _nodes[parseInt(node.key, 10)] = _node; this.nodes = _nodes; this.loading = false; }, 500); } }, initateNodes() { return [{ key: '0', label: 'Node 0', leaf: false }, { key: '1', label: 'Node 1', leaf: false }, { key: '2', label: 'Node 2', leaf: false }]; } } } ")])],1)],1)],1)])},l=[function(){var n=this,e=n._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[n._v("Tree "),e("span",[n._v("Lazy")])]),e("p",[n._v(" Lazy loading is handy when dealing with huge datasets. This example imitates a lazy loading case with timeouts. ")])])])}],r=o(s,d,l,!1,null,"bed121d6");const m=r.exports;export{m as default};
//# sourceMappingURL=TreeLazyDemo-DBCjtH3_.js.map
