import{N as o}from"./NodeService-DGU-G-ef.js";import{n as i}from"./app.component-2M6wTQPG.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const a={data(){return{nodes:null,columnOptions:null,columns:null}},nodeService:null,created(){this.nodeService=new o,this.columns=[{field:"size",header:"Size"},{field:"type",header:"Type"}],this.columnOptions=[...this.columns]},mounted(){this.nodeService.getTreeTableNodes().then(n=>this.nodes=n)}};var s=function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("TreeTable",{attrs:{value:e.nodes},scopedSlots:e._u([{key:"header",fn:function(){return[t("div",{staticStyle:{"text-align":"left"}},[t("MultiSelect",{staticStyle:{width:"20em"},attrs:{options:e.columnOptions,optionLabel:"header",placeholder:"Select Columns"},model:{value:e.columns,callback:function(l){e.columns=l},expression:"columns"}})],1)]},proxy:!0}])},[t("Column",{attrs:{field:"name",header:"Name",expander:!0}}),e._l(e.columns,function(l){return t("Column",{key:l.field,attrs:{field:l.field,header:l.header}})})],2)],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v(' <TreeTable :value="nodes"> <template #header> <div style="text-align:left"> <MultiSelect v-model="columns" :options="columnOptions" optionLabel="header" placeholder="Select Columns" style="width: 20em"/> </div> </template> <Column field="name" header="Name" :expander="true"></Column> <Column v-for="col of columns" :field="col.field" :header="col.header" :key="col.field"></Column> </TreeTable> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import NodeService from '../../service/NodeService'; export default { data() { return { nodes: null, columnOptions: null, columns: null } }, nodeService: null, created() { this.nodeService = new NodeService(); this.columns = [ {field: 'size', header: 'Size'}, {field: 'type', header: 'Type'} ]; this.columnOptions = [...this.columns]; }, mounted() { this.nodeService.getTreeTableNodes().then(data => this.nodes = data); } } ")])],1)],1)],1)])},r=[function(){var n=this,e=n._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[n._v("TreeTable "),e("span",[n._v("Column Toggle")])]),e("p",[n._v("MultiSelect component can be used to implement column toggle functionality.")])])])}],d=i(a,s,r,!1,null,null);const v=d.exports;export{v as default};
//# sourceMappingURL=TreeTableColToggleDemo-G9aZmz8I.js.map
