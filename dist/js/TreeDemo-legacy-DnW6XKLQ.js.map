{"version":3,"file":"TreeDemo-legacy-DnW6XKLQ.js","sources":["../../src/views/tree/TreeDemo.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Tree</h1>\n                <p>Tree is used to display hierarchical data.</p>\n            </div>\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <h5>Basic</h5>\n                <Tree :value=\"nodes\"></Tree>\n\n                <h5>Programmatic Control</h5>\n                <div style=\"margin-bottom: 1em\">\n                    <Button type=\"button\" icon=\"pi pi-plus\" label=\"Expand All\" @click=\"expandAll\" />\n                    <Button type=\"button\" icon=\"pi pi-minus\" label=\"Collapse All\" @click=\"collapseAll\" />\n                </div>\n                <Tree :value=\"nodes\" :expandedKeys=\"expandedKeys\"></Tree>\n            </div>\n        </div>\n\n        <TreeDoc />\n    </div>\n</template>\n<script>\nimport NodeService from '../../service/NodeService'\nimport TreeDoc from './TreeDoc.vue'\n\nexport default {\n  data() {\n    return {\n      nodes: null,\n      expandedKeys: {}\n    }\n  },\n  nodeService: null,\n  created() {\n    this.nodeService = new NodeService()\n  },\n  mounted() {\n    this.nodeService.getTreeNodes().then(data => this.nodes = data)\n  },\n  methods: {\n    expandAll() {\n      for (let node of this.nodes) {\n        this.expandNode(node)\n      }\n\n      this.expandedKeys = {...this.expandedKeys}\n    },\n    collapseAll() {\n      this.expandedKeys = {}\n    },\n    expandNode(node) {\n      if (node.children && node.children.length) {\n        this.expandedKeys[node.key] = true\n\n        for (let child of node.children) {\n          this.expandNode(child)\n        }\n      }\n    }\n  },\n  components: {\n    'TreeDoc': TreeDoc\n  }\n}\n</script>\n\n<style scoped>\nbutton {\n    margin-right: .5rem;\n}\n</style>\n"],"names":["_sfc_main","data","nodes","expandedKeys","nodeService","created","this","NodeService","mounted","_this","getTreeNodes","then","methods","expandAll","_step","_iterator","_createForOfIteratorHelper","s","n","done","node","value","expandNode","err","e","f","_objectSpread","collapseAll","children","length","key","_step2","_iterator2","child","components","TreeDoc"],"mappings":"o0EA8BAA,EAAA,CACAC,KAAAA,WACA,MAAA,CACAC,MAAA,KACAC,aAAA,CAAA,EAEA,EACAC,YAAA,KACAC,QAAAA,WACAC,KAAAF,YAAA,IAAAG,CACA,EACAC,QAAA,WAAAC,IAAAA,OACAH,KAAAF,YAAAM,eAAAC,MAAA,SAAAV,GAAA,OAAAQ,EAAAP,MAAAD,CAAA,GACA,EACAW,QAAA,CACAC,UAAAA,WAAA,IACAC,EADAC,EAAAC,EACAV,KAAAJ,OAAA,IAAA,IAAAa,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAA,CAAA,IAAAC,EAAAN,EAAAO,MACAf,KAAAgB,WAAAF,EACA,CAAA,CAAA,MAAAG,GAAAR,EAAAS,EAAAD,EAAA,CAAA,QAAAR,EAAAU,GAAA,CAEAnB,KAAAH,4WAAAuB,CAAA,CAAA,EAAApB,KAAAH,aACA,EACAwB,YAAA,WACArB,KAAAH,aAAA,CAAA,CACA,EACAmB,WAAAA,SAAAF,GACA,GAAAA,EAAAQ,UAAAR,EAAAQ,SAAAC,OAAA,CACAvB,KAAAH,aAAAiB,EAAAU,MAAA,EAAA,IAEAC,EAFAC,EAAAhB,EAEAI,EAAAQ,UAAA,IAAA,IAAAI,EAAAf,MAAAc,EAAAC,EAAAd,KAAAC,MAAA,CAAA,IAAAc,EAAAF,EAAAV,MACAf,KAAAgB,WAAAW,EACA,CAAA,CAAA,MAAAV,GAAAS,EAAAR,EAAAD,EAAA,CAAA,QAAAS,EAAAP,GACA,CAAA,CACA,GAEAS,WAAA,CACAC"}