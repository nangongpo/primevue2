import{P as s}from"./ProductService-B_eIBIF9.js";import{n as a}from"./app.component-D2FSMXVj.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const i={data(){return{selectedColumns:null,columns:null,products:null}},productService:null,created(){this.productService=new s,this.columns=[{field:"name",header:"Name"},{field:"category",header:"Category"},{field:"quantity",header:"Quantity"}],this.selectedColumns=this.columns},mounted(){this.productService.getProductsSmall().then(l=>this.products=l)},methods:{onToggle(l){this.selectedColumns=this.columns.filter(e=>l.includes(e))}}};var r=function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("DataTable",{attrs:{value:e.products,responsiveLayout:"scroll"},scopedSlots:e._u([{key:"header",fn:function(){return[t("div",{staticStyle:{"text-align":"left"}},[t("MultiSelect",{staticStyle:{width:"20em"},attrs:{value:e.selectedColumns,options:e.columns,optionLabel:"header",placeholder:"Select Columns"},on:{input:e.onToggle}})],1)]},proxy:!0}])},[t("Column",{attrs:{field:"code",header:"Code"}}),e._l(e.selectedColumns,function(o,n){return t("Column",{key:o.field+"_"+n,attrs:{field:o.field,header:o.header}})})],2)],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v(' <DataTable :value="products" responsiveLayout="scroll"> <template #header> <div style="text-align:left"> <MultiSelect :value="selectedColumns" :options="columns" optionLabel="header" @input="onToggle" placeholder="Select Columns" style="width: 20em"/> </div> </template> <Column field="code" header="Code" /> <Column v-for="(col, index) of selectedColumns" :field="col.field" :header="col.header" :key="col.field + \'_\' + index"></Column> </DataTable> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import ProductService from '../../service/ProductService'; export default { data() { return { selectedColumns: null, columns: null, products: null } }, productService: null, created() { this.productService = new ProductService(); this.columns = [ {field: 'name', header: 'Name'}, {field: 'category', header: 'Category'}, {field: 'quantity', header: 'Quantity'} ]; this.selectedColumns = this.columns; }, mounted() { this.productService.getProductsSmall().then(data => this.products = data); }, methods: { onToggle(value) { this.selectedColumns = this.columns.filter(col => value.includes(col)); } } } ")])],1)],1)],1)])},c=[function(){var l=this,e=l._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[l._v("DataTable "),e("span",[l._v("Column Toggle")])]),e("p",[l._v("MultiSelect component can be used to implement column toggle functionality.")])])])}],d=a(i,r,c,!1,null,null);const f=d.exports;export{f as default};
//# sourceMappingURL=DataTableColToggleDemo-CWCsld3B.js.map
