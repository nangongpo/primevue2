{"version":3,"file":"FilterServiceDemo-legacy-CBe2WIwJ.js","sources":["../../src/views/filterservice/FilterServiceDemo.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>FilterService</h1>\n        <p>FilterService is a helper utility to filter collections against constraints.</p>\n      </div>\n      <AppInputStyleSwitch />\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <h5>Table Integration</h5>\n        <p>\n          A custom equals filter that checks for exact case sensitive value is registered and defined as a match mode of\n          a column filter.\n        </p>\n\n        <DataTable\n          :value=\"customers\"\n          :paginator=\"true\"\n          :rows=\"10\"\n          responsiveLayout=\"scroll\"\n          dataKey=\"id\"\n          :filters.sync=\"filters\"\n          filterDisplay=\"row\"\n          :loading=\"loading\">\n          <template #empty> No customers found. </template>\n          <template #loading> Loading customers data. Please wait. </template>\n          <Column field=\"name\" header=\"Name\" :filterMatchModeOptions=\"matchModeOptions\">\n            <template #body=\"{ data }\">\n              {{ data.name }}\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <InputText\n                type=\"text\"\n                v-model=\"filterModel.value\"\n                @input=\"filterCallback()\"\n                class=\"p-column-filter\"\n                :placeholder=\"`Search by name - ${filterModel.matchMode}`\" />\n            </template>\n          </Column>\n          <Column header=\"Country\" filterField=\"country.name\" :filterMatchModeOptions=\"matchModeOptions\">\n            <template #body=\"{ data }\">\n              <img\n                src=\"../../assets/images/flag_placeholder.png\"\n                :class=\"'flag flag-' + data.country.code\"\n                width=\"30\" />\n              <span class=\"image-text\">{{ data.country.name }}</span>\n            </template>\n            <template #filter=\"{ filterModel, filterCallback }\">\n              <InputText\n                type=\"text\"\n                v-model=\"filterModel.value\"\n                @input=\"filterCallback()\"\n                class=\"p-column-filter\"\n                :placeholder=\"`Search by country - ${filterModel.matchMode}`\" />\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n    </div>\n\n    <FilterServiceDoc />\n  </div>\n</template>\n\n<script>\nimport FilterMatchMode from '../../../src/components/api/FilterMatchMode'\nimport FilterService from '../../../src/components/api/FilterService'\nimport CustomerService from '../../service/CustomerService'\nimport FilterServiceDoc from './FilterServiceDoc.vue'\n\nconst YOUR_FILTER = 'YOUR FILTER'\n\nexport default {\n  data() {\n    return {\n      customers: null,\n      filters: {\n        'name': { value: null, matchMode: FilterMatchMode.STARTS_WITH },\n        'country.name': { value: null, matchMode: FilterMatchMode.STARTS_WITH }\n      },\n      matchModeOptions: [\n        { label: 'Your Equals', value: YOUR_FILTER },\n        { label: 'Starts With', value: FilterMatchMode.STARTS_WITH }\n      ],\n      loading: true\n    }\n  },\n  created() {\n    this.customerService = new CustomerService()\n  },\n  mounted() {\n    this.customerService.getCustomersLarge().then(data => {\n      this.customers = data\n      this.loading = false\n    })\n\n    FilterService.register(YOUR_FILTER, (value, filter) => {\n      if (filter === undefined || filter === null || filter.trim() === '') {\n        return true\n      }\n\n      if (value === undefined || value === null) {\n        return false\n      }\n\n      return value.toString() === filter.toString()\n    })\n  },\n  components: {\n    'FilterServiceDoc': FilterServiceDoc\n  }\n}\n</script>\n"],"names":["YOUR_FILTER","data","customers","filters","name","value","matchMode","FilterMatchMode","STARTS_WITH","matchModeOptions","label","loading","created","this","customerService","CustomerService","mounted","_this","getCustomersLarge","then","FilterService","register","filter","trim","toString","components","FilterServiceDoc"],"mappings":"kgSAyEAA,EAAA,4BAEA,CACAC,gBACA,MAAA,CACAC,UAAA,KACAC,QAAA,CACAC,KAAA,CAAAC,MAAA,KAAAC,UAAAC,EAAAC,aACA,eAAA,CAAAH,MAAA,KAAAC,UAAAC,EAAAC,cAEAC,iBAAA,CACA,CAAAC,MAAA,cAAAL,MAAAL,GACA,CAAAU,MAAA,cAAAL,MAAAE,EAAAC,cAEAG,SAAA,EAEA,EACAC,mBACAC,KAAAC,gBAAA,IAAAC,CACA,EACAC,uBAAAC,EAAAJ,KACAA,KAAAC,gBAAAI,oBAAAC,MAAA,SAAAlB,GACAgB,EAAAf,UAAAD,EACAgB,EAAAN,SAAA,CACA,IAEAS,EAAAC,SAAArB,GAAA,SAAAK,EAAAiB,GACA,OAAAA,SAAA,KAAAA,EAAAC,QAIAlB,SAIAA,EAAAmB,aAAAF,EAAAE,UACA,GACA,EACAC,WAAA,CACAC,iBAAAA"}