{"version":3,"file":"index-PJ_r4tUK.js","sources":["../../src/doc/overlaypanel/Documentation.vue","../../src/doc/overlaypanel/SourceCode.vue","../../src/doc/overlaypanel/index.vue","../../src/views/overlaypanel/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>\n      OverlayPanel is accessed via its reference where visibility is controlled using toggle, show and hide methods.\n    </p>\n    <DocSectionCode :code=\"baseCode\" />\n    <DocSectionCode :code=\"baseCode2\" importCode />\n\n    <h5>Dismissable and CloseIcon</h5>\n    <p>\n      Clicking outside the overlay hides the panel, setting <i>dismissable</i> to false disables this behavior.\n      Additionally enabling <i>showCloseIcon</i> property displays a close icon at the top right corner to close the\n      panel.\n    </p>\n    <DocSectionCode :code=\"dismissableAndCloseIconCode\" />\n\n    <h5>Properties</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>dismissable</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Enables to hide the overlay when outside is clicked.</td>\n          </tr>\n          <tr>\n            <td>showCloseIcon</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>When enabled, displays a close icon at top right corner.</td>\n          </tr>\n          <tr>\n            <td>appendTo</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Id of the element or \"body\" for document where the overlay should be appended to.</td>\n          </tr>\n          <tr>\n            <td>baseZIndex</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Base zIndex value to use in layering.</td>\n          </tr>\n          <tr>\n            <td>autoZIndex</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to automatically manage layering.</td>\n          </tr>\n          <tr>\n            <td>ariaCloseLabel</td>\n            <td>string</td>\n            <td>close</td>\n            <td>Aria label of the close icon.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>show</td>\n            <td>-</td>\n            <td>Callback to invoke when overlay panel is shown.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Callback to invoke when overlay panel is hidden.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Methods</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>toggle</td>\n            <td>event: Browser event</td>\n            <td>Toggles the visibility of the overlay.</td>\n          </tr>\n          <tr>\n            <td>show</td>\n            <td>\n              event: Browser event <br />\n              target: Optional target if event.target should not be used\n            </td>\n            <td>Shows the overlay.</td>\n          </tr>\n          <tr>\n            <td>hide</td>\n            <td>-</td>\n            <td>Hides the overlay.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-overlaypanel</td>\n            <td>Container element.</td>\n          </tr>\n          <tr>\n            <td>p-overlaypanel-content</td>\n            <td>Content of the panel.</td>\n          </tr>\n          <tr>\n            <td>p-overlaypanel-close</td>\n            <td>Close icon.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport OverlayPanel from 'primevue2/overlaypanel';\n        `\n      },\n      baseCode: {\n        basic: `\n<Button type=\"button\" label=\"Toggle\" @click=\"toggle\" />\n\n<OverlayPanel ref=\"op\">\n\t<img src=\"demo/images/nature/nature1.jpg\" alt=\"Nature Image\">\n</OverlayPanel>\n        `\n      },\n      baseCode2: {\n        basic: `\ntoggle(event) {\n    this.$refs.op.toggle(event);\n}\n        `\n      },\n      dismissableAndCloseIconCode: {\n        basic: `\n<OverlayPanel ref=\"op\" :showCloseIcon=\"true\" :dismissable=\"true\">\n\t<img src=\"demo/images/nature/nature1.jpg\" alt=\"Nature Image\">\n</OverlayPanel>\n        `\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/overlaypanel\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<Button type=\"button\" icon=\"pi pi-search\" :label=\"selectedProduct ? selectedProduct.name : 'Select a Product'\" @click=\"toggle\" aria:haspopup=\"true\" aria-controls=\"overlay_panel\" />\n\n<OverlayPanel ref=\"op\" appendTo=\"body\" :showCloseIcon=\"true\" id=\"overlay_panel\" style=\"width: 450px\">\n    <DataTable :value=\"products\" :selection.sync=\"selectedProduct\" selectionMode=\"single\" :paginator=\"true\" :rows=\"5\" @row-select=\"onProductSelect\">\n        <Column field=\"name\" header=\"Name\" sortable></Column>\n        <Column header=\"Image\">\n            <template #body=\"slotProps\">\n                <img :src=\"'demo/images/product/' + slotProps.data.image\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n            </template>\n        </Column>\n        <Column field=\"price\" header=\"Price\" sortable>\n            <template #body=\"slotProps\">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n    </DataTable>\n</OverlayPanel>\n        `\n      },\n      sourceCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            selectedProduct: null\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products = data);\n    },\n    methods: {\n        toggle(event) {\n            this.$refs.op.toggle(event);\n        },\n        formatCurrency(value) {\n            return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n        },\n        onProductSelect(event) {\n            this.$refs.op.hide();\n            this.$toast.add({severity:'info', summary: 'Product Selected', detail: event.data.name, life: 3000});\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>OverlayPanel</h1>\n        <p>OverlayPanel is a container component positioned as connected to its target.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <Button\n          type=\"button\"\n          icon=\"pi pi-search\"\n          :label=\"selectedProduct ? selectedProduct.name : 'Select a Product'\"\n          @click=\"toggle\"\n          aria:haspopup=\"true\"\n          aria-controls=\"overlay_panel\" />\n\n        <OverlayPanel ref=\"op\" appendTo=\"body\" :showCloseIcon=\"true\" id=\"overlay_panel\" style=\"width: 450px\">\n          <DataTable\n            :value=\"products\"\n            :selection.sync=\"selectedProduct\"\n            selectionMode=\"single\"\n            :paginator=\"true\"\n            :rows=\"5\"\n            @row-select=\"onProductSelect\">\n            <Column field=\"name\" header=\"Name\" sortable></Column>\n            <Column header=\"Image\">\n              <template #body=\"slotProps\">\n                <img\n                  :src=\"$publicUrl('demo/images/product/' + slotProps.data.image)\"\n                  :alt=\"slotProps.data.image\"\n                  class=\"product-image\" />\n              </template>\n            </Column>\n            <Column field=\"price\" header=\"Price\" sortable>\n              <template #body=\"slotProps\">\n                {{ formatCurrency(slotProps.data.price) }}\n              </template>\n            </Column>\n          </DataTable>\n        </OverlayPanel>\n      </div>\n    </div>\n\n    <OverlayPanelDoc />\n  </div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService'\nimport OverlayPanelDoc from '@/doc/overlaypanel/index.vue'\n\nexport default {\n  data() {\n    return {\n      products: null,\n      selectedProduct: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  },\n  methods: {\n    toggle(event) {\n      this.$refs.op.toggle(event)\n    },\n    formatCurrency(value) {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n    },\n    onProductSelect(event) {\n      this.$refs.op.hide()\n      this.$toast.add({ severity: 'info', summary: 'Product Selected', detail: event.data.name, life: 3000 })\n    }\n  },\n  components: {\n    'OverlayPanelDoc': OverlayPanelDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n  min-width: 15rem;\n}\n\n.product-image {\n  width: 50px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","ProductService","data","event","value","OverlayPanelDoc"],"mappings":"mPAsKA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,WAAA,CACA,MAAA,gEAGA,EACA,SAAA,CACA,MAAA,iLAOA,EACA,UAAA,CACA,MAAA,kEAKA,EACA,4BAAA,CACA,MAAA,gKAKA,CACA,CACA,CACA,6+HCxLAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,s+BAmBA,EACA,YAAA,CACA,MAAA,u1BA+BA,CACA,CACA,CACA,6dC5DAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTCoCAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,KACA,gBAAA,IACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAG,CACA,EACA,SAAA,CACA,KAAA,eAAA,iBAAA,EAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,EACA,QAAA,CACA,OAAAC,EAAA,CACA,KAAA,MAAA,GAAA,OAAAA,CAAA,CACA,EACA,eAAAC,EAAA,CACA,OAAAA,EAAA,eAAA,QAAA,CAAA,MAAA,WAAA,SAAA,KAAA,CAAA,CACA,EACA,gBAAAD,EAAA,CACA,KAAA,MAAA,GAAA,KAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,mBAAA,OAAAA,EAAA,KAAA,KAAA,KAAA,GAAA,CAAA,CACA,CACA,EACA,WAAA,CACA,gBAAAE,CACA,CACA"}