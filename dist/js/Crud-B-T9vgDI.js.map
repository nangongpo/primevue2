{"version":3,"file":"Crud-B-T9vgDI.js","sources":["../../src/doc/datatable/Crud.vue","../../src/views/datatable/Crud.vue"],"sourcesContent":["<template>\n  <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Source\">\n        <DocSectionCode :code=\"baseCode\" />\n        <DocSectionCode :code=\"baseCode2\" importCode />\n        <DocSectionCode :code=\"baseCode3\" importStyle />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      baseCode: {\n        basic: `\n<div class=\"card\">\n    <Toolbar class=\"mb-4\">\n        <template #start>\n            <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" @click=\"openNew\" />\n            <Button label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" @click=\"confirmDeleteSelected\" :disabled=\"!selectedProducts || !selectedProducts.length\" />\n        </template>\n\n        <template #end>\n            <FileUpload mode=\"basic\" accept=\"image/*\" :maxFileSize=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"mr-2 inline-block\" />\n            <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\"  />\n        </template>\n    </Toolbar>\n\n    <DataTable ref=\"dt\" :value=\"products\" :selection.sync=\"selectedProducts\" dataKey=\"id\"\n        :paginator=\"true\" :rows=\"10\" :filters=\"filters\"\n        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,25]\"\n        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" responsiveLayout=\"scroll\">\n        <template #header>\n            <div class=\"table-header flex flex-column md:flex-row md:justify-content-between\">\n                <h5 class=\"mb-2 md:m-0 md:align-self-center\">Manage Products</h5>\n                <span class=\"p-input-icon-left\">\n                    <i class=\"pi pi-search\" />\n                    <InputText v-model=\"filters['global'].value\" placeholder=\"Search...\" />\n                </span>\n            </div>\n        </template>\n\n        <Column selectionMode=\"multiple\" :styless=\"{width: '3rem'}\" :exportable=\"false\"></Column>\n        <Column field=\"code\" header=\"Code\" :sortable=\"true\" :styles=\"{'min-width':'12rem'}\"></Column>\n        <Column field=\"name\" header=\"Name\" :sortable=\"true\" :styles=\"{'min-width':'16rem'}\"></Column>\n        <Column header=\"Image\">\n            <template #body=\"slotProps\">\n                <img :src=\"'demo/images/product/' + slotProps.data.image\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n            </template>\n        </Column>\n        <Column field=\"price\" header=\"Price\" :sortable=\"true\" :styles=\"{'min-width':'8rem'}\">\n            <template #body=\"slotProps\">\n                {{formatCurrency(slotProps.data.price)}}\n            </template>\n        </Column>\n        <Column field=\"category\" header=\"Category\" :sortable=\"true\" :styles=\"{'min-width':'10rem'}\"></Column>\n        <Column field=\"rating\" header=\"Reviews\" :sortable=\"true\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"slotProps\">\n                <Rating :value=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n            </template>\n        </Column>\n        <Column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" :styles=\"{'min-width':'12rem'}\">\n            <template #body=\"slotProps\">\n                <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\n            </template>\n        </Column>\n        <Column :exportable=\"false\" :styles=\"{'min-width':'8rem'}\">\n            <template #body=\"slotProps\">\n                <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" @click=\"editProduct(slotProps.data)\" />\n                <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\" @click=\"confirmDeleteProduct(slotProps.data)\" />\n            </template>\n        </Column>\n    </DataTable>\n</div>\n\n<Dialog :visible.sync=\"productDialog\" :style=\"{width: '450px'}\" header=\"Product Details\" :modal=\"true\" class=\"p-fluid\">\n    <img :src=\"'demo/images/product/' + product.image\" :alt=\"product.image\" class=\"product-image\" v-if=\"product.image\" />\n    <div class=\"field\">\n        <label for=\"name\">Name</label>\n        <InputText id=\"name\" v-model.trim=\"product.name\" required=\"true\" autofocus :class=\"{'p-invalid': submitted && !product.name}\" />\n        <small class=\"p-invalid\" v-if=\"submitted && !product.name\">Name is required.</small>\n    </div>\n    <div class=\"field\">\n        <label for=\"description\">Description</label>\n        <Textarea id=\"description\" v-model=\"product.description\" required=\"true\" rows=\"3\" cols=\"20\" />\n    </div>\n\n    <div class=\"field\">\n        <label class=\"mb-3\">Category</label>\n        <div class=\"formgrid grid\">\n            <div class=\"field-radiobutton col-6\">\n                <RadioButton id=\"category1\" name=\"category\" value=\"Accessories\" v-model=\"product.category\" />\n                <label for=\"category1\">Accessories</label>\n            </div>\n            <div class=\"field-radiobutton col-6\">\n                <RadioButton id=\"category2\" name=\"category\" value=\"Clothing\" v-model=\"product.category\" />\n                <label for=\"category2\">Clothing</label>\n            </div>\n            <div class=\"field-radiobutton col-6\">\n                <RadioButton id=\"category3\" name=\"category\" value=\"Electronics\" v-model=\"product.category\" />\n                <label for=\"category3\">Electronics</label>\n            </div>\n            <div class=\"field-radiobutton col-6\">\n                <RadioButton id=\"category4\" name=\"category\" value=\"Fitness\" v-model=\"product.category\" />\n                <label for=\"category4\">Fitness</label>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"formgrid grid\">\n        <div class=\"field col\">\n            <label for=\"price\">Price</label>\n            <InputNumber id=\"price\" v-model=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n        </div>\n        <div class=\"field col\">\n            <label for=\"quantity\">Quantity</label>\n            <InputNumber id=\"quantity\" v-model=\"product.quantity\" integeronly />\n        </div>\n    </div>\n    <template #footer>\n        <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\"/>\n        <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\" />\n    </template>\n</Dialog>\n\n<Dialog :visible.sync=\"deleteProductDialog\" :styles=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n    <div class=\"confirmation-content\">\n        <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\n        <span v-if=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\n    </div>\n    <template #footer>\n        <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductDialog = false\"/>\n        <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteProduct\" />\n    </template>\n</Dialog>\n\n<Dialog :visible.sync=\"deleteProductsDialog\" :styles=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\n    <div class=\"confirmation-content\">\n        <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\n        <span v-if=\"product\">Are you sure you want to delete the selected products?</span>\n    </div>\n    <template #footer>\n        <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductsDialog = false\"/>\n        <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteSelectedProducts\" />\n    </template>\n</Dialog>\n        `\n      },\n      baseCode2: {\n        basic: `\nimport ProductService from '../../service/ProductService';\nimport {FilterMatchMode} from 'primevue2/api';\n\nexport default {\n    data() {\n        return {\n            products: null,\n            productDialog: false,\n            deleteProductDialog: false,\n            deleteProductsDialog: false,\n            product: {},\n            selectedProducts: null,\n            filters: {},\n            submitted: false,\n            statuses: [\n\t\t\t\t{label: 'INSTOCK', value: 'instock'},\n\t\t\t\t{label: 'LOWSTOCK', value: 'lowstock'},\n\t\t\t\t{label: 'OUTOFSTOCK', value: 'outofstock'}\n            ]\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n        this.initFilters();\n    },\n    mounted() {\n        this.productService.getProducts().then(data => this.products = data);\n    },\n    methods: {\n        formatCurrency(value) {\n            if(value)\n\t\t\t\treturn value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\n\t\t\treturn;\n        },\n        openNew() {\n            this.product = {};\n            this.submitted = false;\n            this.productDialog = true;\n        },\n        hideDialog() {\n            this.productDialog = false;\n            this.submitted = false;\n        },\n        saveProduct() {\n            this.submitted = true;\n\n\t\t\tif (this.product.name.trim()) {\n                if (this.product.id) {\n                    this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\n                    this.products[this.findIndexById(this.product.id)] = this.product;\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\n                }\n                else {\n                    this.product.id = this.createId();\n                    this.product.code = this.createId();\n                    this.product.image = 'product-placeholder.svg';\n                    this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\n                    this.products.push(this.product);\n                    this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\n                }\n\n                this.productDialog = false;\n                this.product = {};\n            }\n        },\n        editProduct(product) {\n            this.product = {...product};\n            this.productDialog = true;\n        },\n        confirmDeleteProduct(product) {\n            this.product = product;\n            this.deleteProductDialog = true;\n        },\n        deleteProduct() {\n            this.products = this.products.filter(val => val.id !== this.product.id);\n            this.deleteProductDialog = false;\n            this.product = {};\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\n        },\n        findIndexById(id) {\n            let index = -1;\n            for (let i = 0; i &lt; this.products.length; i++) {\n                if (this.products[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        },\n        createId() {\n            let id = '';\n            var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            for ( var i = 0; i &lt; 5; i++ ) {\n                id += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return id;\n        },\n        exportCSV() {\n            this.$refs.dt.exportCSV();\n        },\n        confirmDeleteSelected() {\n            this.deleteProductsDialog = true;\n        },\n        deleteSelectedProducts() {\n            this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n            this.deleteProductsDialog = false;\n            this.selectedProducts = null;\n            this.$toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\n        },\n        initFilters() {\n            this.filters = {\n                'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\n            }\n        }\n    }\n}\n        `\n      },\n      baseCode3: {\n        basic: `\n.table-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (max-width: 960px) {\n        align-items: start;\n\t}\n}\n\n.product-image {\n    width: 100px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n    width: 150px;\n    margin: 0 auto 2rem auto;\n    display: block;\n}\n\n.confirmation-content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n@media screen and (max-width: 960px) {\n\t:deep(.p-toolbar) {\n\t\tflex-wrap: wrap;\n\n\t\t.p-button {\n            margin-bottom: 0.25rem;\n        }\n\t}\n}\n        `\n      },\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>DataTable <span>Crud</span></h1>\n        <p>This sample demonstrates a CRUD implementation using various PrimeVue components.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <div class=\"card\">\n        <Toolbar class=\"mb-4\">\n          <template #start>\n            <Button label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" @click=\"openNew\" />\n            <Button\n              label=\"Delete\"\n              icon=\"pi pi-trash\"\n              class=\"p-button-danger\"\n              @click=\"confirmDeleteSelected\"\n              :disabled=\"!selectedProducts || !selectedProducts.length\" />\n          </template>\n\n          <template #end>\n            <FileUpload\n              mode=\"basic\"\n              accept=\"image/*\"\n              :maxFileSize=\"1000000\"\n              label=\"Import\"\n              chooseLabel=\"Import\"\n              class=\"mr-2 inline-block\" />\n            <Button label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" @click=\"exportCSV($event)\" />\n          </template>\n        </Toolbar>\n\n        <DataTable\n          ref=\"dt\"\n          :value=\"products\"\n          :selection.sync=\"selectedProducts\"\n          dataKey=\"id\"\n          :paginator=\"true\"\n          :rows=\"10\"\n          :filters=\"filters\"\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          :rowsPerPageOptions=\"[5, 10, 25]\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\n          responsiveLayout=\"scroll\">\n          <template #header>\n            <div class=\"table-header flex flex-column md:flex-row md:justify-content-between\">\n              <h5 class=\"mb-2 md:m-0 md:align-self-center\">Manage Products</h5>\n              <span class=\"p-input-icon-left\">\n                <i class=\"pi pi-search\" />\n                <InputText v-model=\"filters['global'].value\" placeholder=\"Search...\" />\n              </span>\n            </div>\n          </template>\n\n          <Column selectionMode=\"multiple\" :styless=\"{ width: '3rem' }\" :exportable=\"false\"></Column>\n          <Column field=\"code\" header=\"Code\" :sortable=\"true\" :styles=\"{ 'min-width': '12rem' }\"></Column>\n          <Column field=\"name\" header=\"Name\" :sortable=\"true\" :styles=\"{ 'min-width': '16rem' }\"></Column>\n          <Column header=\"Image\">\n            <template #body=\"slotProps\">\n              <img\n                :src=\"$publicUrl('demo/images/product/' + slotProps.data.image)\"\n                :alt=\"slotProps.data.image\"\n                class=\"product-image\" />\n            </template>\n          </Column>\n          <Column field=\"price\" header=\"Price\" :sortable=\"true\" :styles=\"{ 'min-width': '8rem' }\">\n            <template #body=\"slotProps\">\n              {{ formatCurrency(slotProps.data.price) }}\n            </template>\n          </Column>\n          <Column field=\"category\" header=\"Category\" :sortable=\"true\" :styles=\"{ 'min-width': '10rem' }\"></Column>\n          <Column field=\"rating\" header=\"Reviews\" :sortable=\"true\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"slotProps\">\n              <Rating :value=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" />\n            </template>\n          </Column>\n          <Column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" :styles=\"{ 'min-width': '12rem' }\">\n            <template #body=\"slotProps\">\n              <span\n                :class=\"\n                  'product-badge status-' +\n                  (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\n                \"\n                >{{ slotProps.data.inventoryStatus }}</span\n              >\n            </template>\n          </Column>\n          <Column :exportable=\"false\" :styles=\"{ 'min-width': '8rem' }\">\n            <template #body=\"slotProps\">\n              <Button\n                icon=\"pi pi-pencil\"\n                class=\"p-button-rounded p-button-success mr-2\"\n                @click=\"editProduct(slotProps.data)\" />\n              <Button\n                icon=\"pi pi-trash\"\n                class=\"p-button-rounded p-button-warning\"\n                @click=\"confirmDeleteProduct(slotProps.data)\" />\n            </template>\n          </Column>\n        </DataTable>\n      </div>\n\n      <Dialog\n        :visible.sync=\"productDialog\"\n        :containerStyle=\"{ width: '450px' }\"\n        header=\"Product Details\"\n        :modal=\"true\"\n        class=\"p-fluid\">\n        <img\n          :src=\"$publicUrl('demo/images/product/' + product.image)\"\n          :alt=\"product.image\"\n          class=\"product-image\"\n          v-if=\"product.image\" />\n        <div class=\"field\">\n          <label for=\"name\">Name</label>\n          <InputText\n            id=\"name\"\n            v-model.trim=\"product.name\"\n            required=\"true\"\n            autofocus\n            :class=\"{ 'p-invalid': submitted && !product.name }\" />\n          <small class=\"p-invalid\" v-if=\"submitted && !product.name\">Name is required.</small>\n        </div>\n        <div class=\"field\">\n          <label for=\"description\">Description</label>\n          <Textarea id=\"description\" v-model=\"product.description\" required=\"true\" rows=\"3\" cols=\"20\" />\n        </div>\n\n        <div class=\"field\">\n          <label class=\"mb-3\">Category</label>\n          <div class=\"formgrid grid\">\n            <div class=\"field-radiobutton col-6\">\n              <RadioButton id=\"category1\" name=\"category\" value=\"Accessories\" v-model=\"product.category\" />\n              <label for=\"category1\">Accessories</label>\n            </div>\n            <div class=\"field-radiobutton col-6\">\n              <RadioButton id=\"category2\" name=\"category\" value=\"Clothing\" v-model=\"product.category\" />\n              <label for=\"category2\">Clothing</label>\n            </div>\n            <div class=\"field-radiobutton col-6\">\n              <RadioButton id=\"category3\" name=\"category\" value=\"Electronics\" v-model=\"product.category\" />\n              <label for=\"category3\">Electronics</label>\n            </div>\n            <div class=\"field-radiobutton col-6\">\n              <RadioButton id=\"category4\" name=\"category\" value=\"Fitness\" v-model=\"product.category\" />\n              <label for=\"category4\">Fitness</label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"formgrid grid\">\n          <div class=\"field col\">\n            <label for=\"price\">Price</label>\n            <InputNumber id=\"price\" v-model=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n          </div>\n          <div class=\"field col\">\n            <label for=\"quantity\">Quantity</label>\n            <InputNumber id=\"quantity\" v-model=\"product.quantity\" integeronly />\n          </div>\n        </div>\n        <template #footer>\n          <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"hideDialog\" />\n          <Button label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"saveProduct\" />\n        </template>\n      </Dialog>\n\n      <Dialog :visible.sync=\"deleteProductDialog\" :containerStyle=\"{ width: '450px' }\" header=\"Confirm\" :modal=\"true\">\n        <div class=\"confirmation-content\">\n          <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\n          <span v-if=\"product\"\n            >Are you sure you want to delete <b>{{ product.name }}</b\n            >?</span\n          >\n        </div>\n        <template #footer>\n          <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductDialog = false\" />\n          <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteProduct\" />\n        </template>\n      </Dialog>\n\n      <Dialog :visible.sync=\"deleteProductsDialog\" :containerStyle=\"{ width: '450px' }\" header=\"Confirm\" :modal=\"true\">\n        <div class=\"confirmation-content\">\n          <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\n          <span v-if=\"product\">Are you sure you want to delete the selected products?</span>\n        </div>\n        <template #footer>\n          <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteProductsDialog = false\" />\n          <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteSelectedProducts\" />\n        </template>\n      </Dialog>\n    </div>\n\n    <DataTableCrudDoc />\n  </div>\n</template>\n\n<script>\nimport DataTableCrudDoc from '@/doc/datatable/Crud.vue'\nimport FilterMatchMode from '../../components/api/FilterMatchMode'\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  components: { DataTableCrudDoc },\n  data() {\n    return {\n      products: null,\n      productDialog: false,\n      deleteProductDialog: false,\n      deleteProductsDialog: false,\n      product: {},\n      selectedProducts: null,\n      filters: {},\n      submitted: false,\n      statuses: [\n        { label: 'INSTOCK', value: 'instock' },\n        { label: 'LOWSTOCK', value: 'lowstock' },\n        { label: 'OUTOFSTOCK', value: 'outofstock' }\n      ]\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n    this.initFilters()\n  },\n  mounted() {\n    this.productService.getProducts().then(data => this.products = data)\n  },\n  methods: {\n    formatCurrency(value) {\n      if (value)\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n      return\n    },\n    openNew() {\n      this.product = {}\n      this.submitted = false\n      this.productDialog = true\n    },\n    hideDialog() {\n      this.productDialog = false\n      this.submitted = false\n    },\n    saveProduct() {\n      this.submitted = true\n\n      if (this.product.name.trim()) {\n        if (this.product.id) {\n          this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value : this.product.inventoryStatus\n          this.products[this.findIndexById(this.product.id)] = this.product\n          this.$toast.add({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 })\n        }\n        else {\n          this.product.id = this.createId()\n          this.product.code = this.createId()\n          this.product.image = 'product-placeholder.svg'\n          this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK'\n          this.products.push(this.product)\n          this.$toast.add({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 })\n        }\n\n        this.productDialog = false\n        this.product = {}\n      }\n    },\n    editProduct(product) {\n      this.product = { ...product }\n      this.productDialog = true\n    },\n    confirmDeleteProduct(product) {\n      this.product = product\n      this.deleteProductDialog = true\n    },\n    deleteProduct() {\n      this.products = this.products.filter(val => val.id !== this.product.id)\n      this.deleteProductDialog = false\n      this.product = {}\n      this.$toast.add({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 })\n    },\n    findIndexById(id) {\n      let index = -1\n      for (let i = 0; i < this.products.length; i++) {\n        if (this.products[i].id === id) {\n          index = i\n          break\n        }\n      }\n\n      return index\n    },\n    createId() {\n      let id = ''\n      var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n      for (var i = 0; i < 5; i++) {\n        id += chars.charAt(Math.floor(Math.random() * chars.length))\n      }\n      return id\n    },\n    exportCSV() {\n      this.$refs.dt.exportCSV()\n    },\n    confirmDeleteSelected() {\n      this.deleteProductsDialog = true\n    },\n    deleteSelectedProducts() {\n      this.products = this.products.filter(val => !this.selectedProducts.includes(val))\n      this.deleteProductsDialog = false\n      this.selectedProducts = null\n      this.$toast.add({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 })\n    },\n    initFilters() {\n      this.filters = {\n        'global': { value: null, matchMode: FilterMatchMode.CONTAINS },\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.table-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  @media screen and (max-width: 960px) {\n    align-items: start;\n  }\n}\n\n.product-image {\n  width: 100px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n.p-dialog .product-image {\n  width: 150px;\n  margin: 0 auto 2rem auto;\n  display: block;\n}\n\n.confirmation-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n@media screen and (max-width: 960px) {\n  :deep(.p-toolbar) {\n    flex-wrap: wrap;\n\n    .p-button {\n      margin-bottom: 0.25rem;\n    }\n  }\n}\n</style>\n"],"names":["_sfc_main","DataTableCrudDoc","ProductService","data","value","product","val","id","index","i","chars","FilterMatchMode"],"mappings":"2PAaA,MAAAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,CACA,MAAA,krOAqIA,EACA,UAAA,CACA,MAAA,+wIAwHA,EACA,UAAA,CACA,MAAA,yqBAsCA,CACA,CACA,CACA,mYChHAA,EAAA,CACA,WAAA,CAAA,iBAAAC,CAAA,EACA,MAAA,CACA,MAAA,CACA,SAAA,KACA,cAAA,GACA,oBAAA,GACA,qBAAA,GACA,QAAA,CAAA,EACA,iBAAA,KACA,QAAA,CAAA,EACA,UAAA,GACA,SAAA,CACA,CAAA,MAAA,UAAA,MAAA,SAAA,EACA,CAAA,MAAA,WAAA,MAAA,UAAA,EACA,CAAA,MAAA,aAAA,MAAA,YAAA,CACA,CACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAC,EACA,KAAA,YAAA,CACA,EACA,SAAA,CACA,KAAA,eAAA,YAAA,EAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,EACA,QAAA,CACA,eAAAC,EAAA,CACA,GAAAA,EACA,OAAAA,EAAA,eAAA,QAAA,CAAA,MAAA,WAAA,SAAA,KAAA,CAAA,CAEA,EACA,SAAA,CACA,KAAA,QAAA,CAAA,EACA,KAAA,UAAA,GACA,KAAA,cAAA,EACA,EACA,YAAA,CACA,KAAA,cAAA,GACA,KAAA,UAAA,EACA,EACA,aAAA,CACA,KAAA,UAAA,GAEA,KAAA,QAAA,KAAA,KAAA,IACA,KAAA,QAAA,IACA,KAAA,QAAA,gBAAA,KAAA,QAAA,gBAAA,MAAA,KAAA,QAAA,gBAAA,MAAA,KAAA,QAAA,gBACA,KAAA,SAAA,KAAA,cAAA,KAAA,QAAA,EAAA,CAAA,EAAA,KAAA,QACA,KAAA,OAAA,IAAA,CAAA,SAAA,UAAA,QAAA,aAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,IAGA,KAAA,QAAA,GAAA,KAAA,SAAA,EACA,KAAA,QAAA,KAAA,KAAA,SAAA,EACA,KAAA,QAAA,MAAA,0BACA,KAAA,QAAA,gBAAA,KAAA,QAAA,gBAAA,KAAA,QAAA,gBAAA,MAAA,UACA,KAAA,SAAA,KAAA,KAAA,OAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,UAAA,QAAA,aAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,GAGA,KAAA,cAAA,GACA,KAAA,QAAA,CAAA,EAEA,EACA,YAAAC,EAAA,CACA,KAAA,QAAA,CAAA,GAAAA,CAAA,EACA,KAAA,cAAA,EACA,EACA,qBAAAA,EAAA,CACA,KAAA,QAAAA,EACA,KAAA,oBAAA,EACA,EACA,eAAA,CACA,KAAA,SAAA,KAAA,SAAA,OAAAC,GAAAA,EAAA,KAAA,KAAA,QAAA,EAAA,EACA,KAAA,oBAAA,GACA,KAAA,QAAA,CAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,UAAA,QAAA,aAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,CACA,EACA,cAAAC,EAAA,CACA,IAAAC,EAAA,GACA,QAAAC,EAAA,EAAAA,EAAA,KAAA,SAAA,OAAAA,IACA,GAAA,KAAA,SAAAA,CAAA,EAAA,KAAAF,EAAA,CACAC,EAAAC,EACA,KACA,CAGA,OAAAD,CACA,EACA,UAAA,CACA,IAAAD,EAAA,GAEA,QADAG,EAAA,iEACAD,EAAA,EAAAA,EAAA,EAAAA,IACAF,GAAAG,EAAA,OAAA,KAAA,MAAA,KAAA,OAAA,EAAAA,EAAA,MAAA,CAAA,EAEA,OAAAH,CACA,EACA,WAAA,CACA,KAAA,MAAA,GAAA,UAAA,CACA,EACA,uBAAA,CACA,KAAA,qBAAA,EACA,EACA,wBAAA,CACA,KAAA,SAAA,KAAA,SAAA,OAAAD,GAAA,CAAA,KAAA,iBAAA,SAAAA,CAAA,CAAA,EACA,KAAA,qBAAA,GACA,KAAA,iBAAA,KACA,KAAA,OAAA,IAAA,CAAA,SAAA,UAAA,QAAA,aAAA,OAAA,mBAAA,KAAA,GAAA,CAAA,CACA,EACA,aAAA,CACA,KAAA,QAAA,CACA,OAAA,CAAA,MAAA,KAAA,UAAAK,EAAA,QAAA,CACA,CACA,CACA,CACA"}