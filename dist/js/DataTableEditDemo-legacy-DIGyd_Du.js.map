{"version":3,"file":"DataTableEditDemo-legacy-DIGyd_Du.js","sources":["../../src/views/datatable/DataTableEditDemo.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"content-section introduction\">\n\t\t\t<div class=\"feature-intro\">\n\t\t\t\t<h1>DataTable <span>InCell Edit</span></h1>\n\t\t\t\t<p>In cell editing provides a rapid and user friendly way to manipulate the data. The datatable provides a flexible API\n                    so that the editing behavior is implemented by the page author whether it utilizes v-model or vuex.\n                </p>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"content-section implementation p-fluid\">\n            <div class=\"card\">\n                <h5>Cell Editing</h5>\n                <p>Validations, dynamic columns and reverting values with the escape key.</p>\n                <DataTable :value=\"products1\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" responsiveLayout=\"scroll\">\n                    <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" :styles=\"{width: '25%'}\">\n                        <template #editor=\"slotProps\">\n                            <InputText v-model=\"slotProps.data[slotProps.column.field]\" autofocus />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Row Editing</h5>\n                <DataTable :value=\"products2\" editMode=\"row\" dataKey=\"id\" :editingRows.sync=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsiveLayout=\"scroll\">\n                    <Column field=\"code\" header=\"Code\" :styles=\"{width:'20%'}\">\n                        <template #editor=\"slotProps\">\n                            <InputText v-model=\"slotProps.data[slotProps.column.field]\" autofocus />\n                        </template>\n                    </Column>\n                    <Column field=\"name\" header=\"Name\" :styles=\"{width:'20%'}\">\n                        <template #editor=\"slotProps\">\n                            <InputText v-model=\"slotProps.data[slotProps.column.field]\" />\n                        </template>\n                    </Column>\n                    <Column field=\"inventoryStatus\" header=\"Status\" :styles=\"{width:'20%'}\">\n                        <template #editor=\"{ data, field }\">\n                            <Dropdown v-model=\"data[field]\" :options=\"statuses\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select a Status\">\n                                <template #option=\"slotProps\">\n                                    <span :class=\"'product-badge status-' + slotProps.option.value.toLowerCase()\">{{slotProps.option.label}}</span>\n                                </template>\n                            </Dropdown>\n                        </template>\n                        <template #body=\"slotProps\">\n                            {{getStatusLabel(slotProps.data.inventoryStatus)}}\n                        </template>\n                    </Column>\n                    <Column field=\"price\" header=\"Price\" :styles=\"{width:'20%'}\">\n                        <template #editor=\"slotProps\">\n                            <InputText v-model=\"slotProps.data[slotProps.column.field]\" />\n                        </template>\n                    </Column>\n                    <Column :rowEditor=\"true\" :styles=\"{width:'10%', 'min-width':'8rem'}\" :bodyStyle=\"{'text-align':'center'}\"></Column>\n                </DataTable>\n            </div>\n\n            <div class=\"card\">\n                <h5>Cell Editing with Sorting and Filter</h5>\n                <DataTable :value=\"products3\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" filterDisplay=\"row\" :filters.sync=\"filters\" responsiveLayout=\"scroll\">\n                    <Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" style=\"width:25%\" sortable filter>\n                        <template #filter=\"{filterModel,filterCallback}\">\n                            <InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" v-tooltip.top.focus=\"'Hit enter key to filter'\"/>\n                        </template>\n                        <template #editor=\"{ data, field }\">\n                            <InputText v-model=\"data[field]\" autofocus />\n                        </template>\n                    </Column>\n                </DataTable>\n            </div>\n\t\t</div>\n\n        <div class=\"content-section documentation\">\n            <TabView>\n                <TabPanel header=\"Source\">\n<CodeHighlight>\n<template v-pre>\n&lt;div class=\"card\"&gt;\n    &lt;DataTable :value=\"products1\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" responsiveLayout=\"scroll\"&gt;\n        &lt;Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" :styles=\"{width: '25%'}\"&gt;\n            &lt;template #editor=\"slotProps\"&gt;\n                &lt;InputText v-model=\"slotProps.data[slotProps.column.field]\" autofocus /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/div&gt;\n\n&lt;div class=\"card\"&gt;\n    &lt;DataTable :value=\"products2\" editMode=\"row\" dataKey=\"id\" :editingRows.sync=\"editingRows\" @row-edit-save=\"onRowEditSave\" responsiveLayout=\"scroll\"&gt;\n        &lt;Column field=\"code\" header=\"Code\" :styles=\"{width:'20%'}\"&gt;\n            &lt;template #editor=\"slotProps\"&gt;\n                &lt;InputText v-model=\"slotProps.data[slotProps.column.field]\" autofocus /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n        &lt;Column field=\"name\" header=\"Name\" :styles=\"{width:'20%'}\"&gt;\n            &lt;template #editor=\"slotProps\"&gt;\n                &lt;InputText v-model=\"slotProps.data[slotProps.column.field]\" /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n        &lt;Column field=\"inventoryStatus\" header=\"Status\" :styles=\"{width:'20%'}\"&gt;\n            &lt;template #editor=\"{ data, field }\"&gt;\n                &lt;Dropdown v-model=\"data[field]\" :options=\"statuses\" optionLabel=\"label\" optionValue=\"value\" placeholder=\"Select a Status\"&gt;\n                    &lt;template #option=\"slotProps\"&gt;\n                        &lt;span :class=\"'product-badge status-' + slotProps.option.value.toLowerCase()\"&gt;{{slotProps.option.label}}&lt;/span&gt;\n                    &lt;/template&gt;\n                &lt;/Dropdown&gt;\n            &lt;/template&gt;\n            &lt;template #body=\"slotProps\"&gt;\n                {{getStatusLabel(slotProps.data.inventoryStatus)}}\n            &lt;/template&gt;\n        &lt;/Column&gt;\n        &lt;Column field=\"price\" header=\"Price\" :styles=\"{width:'20%'}\"&gt;\n            &lt;template #editor=\"slotProps\"&gt;\n                &lt;InputText v-model=\"slotProps.data[slotProps.column.field]\" /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n        &lt;Column :rowEditor=\"true\" :styles=\"{width:'10%', 'min-width':'8rem'}\" :bodyStyle=\"{'text-align':'center'}\"&gt;&lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/div&gt;\n\n&lt;div class=\"card\"&gt;\n    &lt;DataTable :value=\"products3\" editMode=\"cell\" @cell-edit-complete=\"onCellEditComplete\" class=\"editable-cells-table\" filterDisplay=\"row\" :filters.sync=\"filters\" responsiveLayout=\"scroll\"&gt;\n        &lt;Column v-for=\"col of columns\" :field=\"col.field\" :header=\"col.header\" :key=\"col.field\" style=\"width:25%\" sortable filter&gt;\n            &lt;template #filter=\"{filterModel,filterCallback}\"&gt;\n                &lt;InputText type=\"text\" v-model=\"filterModel.value\" @keydown.enter=\"filterCallback()\" class=\"p-column-filter\" v-tooltip.top.focus=\"'Hit enter key to filter'\"/&gt;\n            &lt;/template&gt;\n            &lt;template #editor=\"{ data, field }\"&gt;\n                &lt;InputText v-model=\"data[field]\" autofocus /&gt;\n            &lt;/template&gt;\n        &lt;/Column&gt;\n    &lt;/DataTable&gt;\n&lt;/div&gt;\n</template>\n</CodeHighlight>\n\n<CodeHighlight lang=\"javascript\">\nimport FilterMatchMode from '../../../src/components/api/FilterMatchMode';\nimport ProductService from '../../service/ProductService';\n\nexport default {\n    data() {\n        return {\n            editingRows: [],\n            columns: null,\n            products1: null,\n            products2: null,\n            products3: null,\n            statuses: [\n                {label: 'In Stock', value: 'INSTOCK'},\n                {label: 'Low Stock', value: 'LOWSTOCK'},\n                {label: 'Out of Stock', value: 'OUTOFSTOCK'}\n            ],\n            filters: {\n                'code': {value: null, matchMode: FilterMatchMode.STARTS_WITH},\n                'name': {value: null, matchMode: FilterMatchMode.STARTS_WITH},\n                'quantity': {value: null, matchMode: FilterMatchMode.STARTS_WITH},\n                'price': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n            }\n        }\n    },\n    productService: null,\n    created() {\n        this.productService = new ProductService();\n\n        this.columns = [\n            {field: 'code', header: 'Code'},\n            {field: 'name', header: 'Name'},\n            {field: 'quantity', header: 'Quantity'},\n            {field: 'price', header: 'Price'}\n        ];\n\n        this.originalRows = {};\n    },\n    methods: {\n        onCellEditComplete(event) {\n            let { data, newValue, field } = event;\n\n            switch (field) {\n                case 'quantity':\n                case 'price':\n                    if (this.isPositiveInteger(newValue))\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n\n                default:\n                    if (newValue.trim().length > 0)\n                        data[field] = newValue;\n                    else\n                        event.preventDefault();\n                break;\n            }\n        },\n        isPositiveInteger(val) {\n            let str = String(val);\n            str = str.trim();\n            if (!str) {\n                return false;\n            }\n            str = str.replace(/^0+/, \"\") || \"0\";\n            var n = Math.floor(Number(str));\n            return n !== Infinity && String(n) === str && n >= 0;\n        },\n        onRowEditSave(event) {\n            let { newData, index } = event;\n\n            this.products2[index] = newData;\n        },\n        getStatusLabel(status) {\n            switch(status) {\n                case 'INSTOCK':\n                    return 'In Stock';\n\n                case 'LOWSTOCK':\n                    return 'Low Stock';\n\n                case 'OUTOFSTOCK':\n                    return 'Out of Stock';\n\n                default:\n                    return 'NA';\n            }\n        }\n    },\n    mounted() {\n        this.productService.getProductsSmall().then(data => this.products1 = data);\n        this.productService.getProductsSmall().then(data => this.products2 = data);\n        this.productService.getProductsSmall().then(data => this.products3 = data);\n    }\n}\n</CodeHighlight>\n                </TabPanel>\n            </TabView>\n        </div>\n\t</div>\n</template>\n\n<script>\nimport FilterMatchMode from '../../../src/components/api/FilterMatchMode'\nimport ProductService from '../../service/ProductService'\n\nexport default {\n  data() {\n    return {\n      editingRows: [],\n      columns: null,\n      products1: null,\n      products2: null,\n      products3: null,\n      statuses: [\n        {label: 'In Stock', value: 'INSTOCK'},\n        {label: 'Low Stock', value: 'LOWSTOCK'},\n        {label: 'Out of Stock', value: 'OUTOFSTOCK'}\n      ],\n      filters: {\n        'code': {value: null, matchMode: FilterMatchMode.STARTS_WITH},\n        'name': {value: null, matchMode: FilterMatchMode.STARTS_WITH},\n        'quantity': {value: null, matchMode: FilterMatchMode.STARTS_WITH},\n        'price': {value: null, matchMode: FilterMatchMode.STARTS_WITH}\n      }\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n\n    this.columns = [\n      {field: 'code', header: 'Code'},\n      {field: 'name', header: 'Name'},\n      {field: 'quantity', header: 'Quantity'},\n      {field: 'price', header: 'Price'}\n    ]\n\n    this.originalRows = {}\n  },\n  methods: {\n    onCellEditComplete(event) {\n      let { data, newValue, field } = event\n\n      switch (field) {\n      case 'quantity':\n      case 'price':\n        if (this.isPositiveInteger(newValue))\n          data[field] = newValue\n        else\n          event.preventDefault()\n        break\n\n      default:\n        if (newValue.trim().length > 0)\n          data[field] = newValue\n        else\n          event.preventDefault()\n        break\n      }\n    },\n    isPositiveInteger(val) {\n      let str = String(val)\n      str = str.trim()\n      if (!str) {\n        return false\n      }\n      str = str.replace(/^0+/, '') || '0'\n      var n = Math.floor(Number(str))\n      return n !== Infinity && String(n) === str && n >= 0\n    },\n    onRowEditSave(event) {\n      let { newData, index } = event\n\n      this.products2[index] = newData\n    },\n    getStatusLabel(status) {\n      switch(status) {\n      case 'INSTOCK':\n        return 'In Stock'\n\n      case 'LOWSTOCK':\n        return 'Low Stock'\n\n      case 'OUTOFSTOCK':\n        return 'Out of Stock'\n\n      default:\n        return 'NA'\n      }\n    }\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products1 = data)\n    this.productService.getProductsSmall().then(data => this.products2 = data)\n    this.productService.getProductsSmall().then(data => this.products3 = data)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n:deep(.editable-cells-table td.p-cell-editing) {\n    padding-top: 0;\n    padding-bottom: 0;\n}\n</style>"],"names":["data","editingRows","columns","products1","products2","products3","statuses","label","value","filters","code","matchMode","FilterMatchMode","STARTS_WITH","name","quantity","price","productService","created","this","ProductService","field","header","originalRows","methods","onCellEditComplete","event","newValue","isPositiveInteger","preventDefault","trim","length","val","str","String","replace","n","Math","floor","Number","Infinity","onRowEditSave","newData","index","getStatusLabel","status","mounted","_this","getProductsSmall","then"],"mappings":"sgBAmPA,CACAA,KAAAA,WACA,MAAA,CACAC,YAAA,GACAC,QAAA,KACAC,UAAA,KACAC,UAAA,KACAC,UAAA,KACAC,SAAA,CACA,CAAAC,MAAA,WAAAC,MAAA,WACA,CAAAD,MAAA,YAAAC,MAAA,YACA,CAAAD,MAAA,eAAAC,MAAA,eAEAC,QAAA,CACAC,KAAA,CAAAF,MAAA,KAAAG,UAAAC,EAAAC,aACAC,KAAA,CAAAN,MAAA,KAAAG,UAAAC,EAAAC,aACAE,SAAA,CAAAP,MAAA,KAAAG,UAAAC,EAAAC,aACAG,MAAA,CAAAR,MAAA,KAAAG,UAAAC,EAAAC,cAGA,EACAI,eAAA,KACAC,QAAA,WACAC,KAAAF,eAAA,IAAAG,EAEAD,KAAAjB,QAAA,CACA,CAAAmB,MAAA,OAAAC,OAAA,QACA,CAAAD,MAAA,OAAAC,OAAA,QACA,CAAAD,MAAA,WAAAC,OAAA,YACA,CAAAD,MAAA,QAAAC,OAAA,UAGAH,KAAAI,aAAA,CAAA,CACA,EACAC,QAAA,CACAC,mBAAAA,SAAAC,GACA,IAAA1B,EAAA0B,EAAA1B,KAAA2B,EAAAD,EAAAC,SAAAN,EAAAK,EAAAL,MAEA,OAAAA,GACA,IAAA,WACA,IAAA,QACAF,KAAAS,kBAAAD,GACA3B,EAAAqB,GAAAM,EAEAD,EAAAG,iBACA,MAEA,QACAF,EAAAG,OAAAC,OAAA,EACA/B,EAAAqB,GAAAM,EAEAD,EAAAG,iBAGA,EACAD,kBAAAA,SAAAI,GACA,IAAAC,EAAAC,OAAAF,GAEA,KADAC,EAAAA,EAAAH,QAEA,OAAA,EAEAG,EAAAA,EAAAE,QAAA,MAAA,KAAA,IACA,IAAAC,EAAAC,KAAAC,MAAAC,OAAAN,IACA,OAAAG,IAAAI,KAAAN,OAAAE,KAAAH,GAAAG,GAAA,CACA,EACAK,cAAA,SAAAf,GACA,IAAAgB,EAAAhB,EAAAgB,QAAAC,EAAAjB,EAAAiB,MAEAxB,KAAAf,UAAAuC,GAAAD,CACA,EACAE,eAAAA,SAAAC,GACA,OAAAA,GACA,IAAA,UACA,MAAA,WAEA,IAAA,WACA,MAAA,YAEA,IAAA,aACA,MAAA,eAEA,QACA,MAAA,KAEA,GAEAC,QAAA,eAAAC,EAAA5B,KACAA,KAAAF,eAAA+B,mBAAAC,MAAA,SAAAjD,GAAA,OAAA+C,EAAA5C,UAAAH,CAAA,IACAmB,KAAAF,eAAA+B,mBAAAC,MAAA,SAAAjD,GAAA,OAAA+C,EAAA3C,UAAAJ,CAAA,IACAmB,KAAAF,eAAA+B,mBAAAC,MAAA,SAAAjD,GAAA,OAAA+C,EAAA1C,UAAAL,CAAA,GACA"}