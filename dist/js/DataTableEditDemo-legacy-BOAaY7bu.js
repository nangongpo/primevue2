System.register(["./app.component-legacy-Dyxh1RLY.js","./ProductService-legacy-Ctw4T0RP.js","./app.fullcalendar-legacy-BjBSiNq4.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-NUaqKLPR.js"],(function(e,t){"use strict";var l,a,o;return{setters:[function(e){l=e.n,a=e.aJ},function(e){o=e.P},null,null,null],execute:function(){var t=document.createElement("style");t.textContent="[data-v-9309bd10] .editable-cells-table td.p-cell-editing{padding-top:0;padding-bottom:0}\n",document.head.appendChild(t),e("default",l({data:function(){return{editingRows:[],columns:null,products1:null,products2:null,products3:null,statuses:[{label:"In Stock",value:"INSTOCK"},{label:"Low Stock",value:"LOWSTOCK"},{label:"Out of Stock",value:"OUTOFSTOCK"}],filters:{code:{value:null,matchMode:a.STARTS_WITH},name:{value:null,matchMode:a.STARTS_WITH},quantity:{value:null,matchMode:a.STARTS_WITH},price:{value:null,matchMode:a.STARTS_WITH}}}},productService:null,created:function(){this.productService=new o,this.columns=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"quantity",header:"Quantity"},{field:"price",header:"Price"}],this.originalRows={}},methods:{onCellEditComplete:function(e){var t=e.data,l=e.newValue,a=e.field;switch(a){case"quantity":case"price":this.isPositiveInteger(l)?t[a]=l:e.preventDefault();break;default:l.trim().length>0?t[a]=l:e.preventDefault()}},isPositiveInteger:function(e){var t=String(e);if(!(t=t.trim()))return!1;t=t.replace(/^0+/,"")||"0";var l=Math.floor(Number(t));return l!==1/0&&String(l)===t&&l>=0},onRowEditSave:function(e){var t=e.newData,l=e.index;this.products2[l]=t},getStatusLabel:function(e){switch(e){case"INSTOCK":return"In Stock";case"LOWSTOCK":return"Low Stock";case"OUTOFSTOCK":return"Out of Stock";default:return"NA"}}},mounted:function(){var e=this;this.productService.getProductsSmall().then((function(t){return e.products1=t})),this.productService.getProductsSmall().then((function(t){return e.products2=t})),this.productService.getProductsSmall().then((function(t){return e.products3=t}))}},(function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation p-fluid"},[t("div",{staticClass:"card"},[t("h5",[e._v("Cell Editing")]),t("p",[e._v("Validations, dynamic columns and reverting values with the escape key.")]),t("DataTable",{staticClass:"editable-cells-table",attrs:{value:e.products1,editMode:"cell",responsiveLayout:"scroll"},on:{"cell-edit-complete":e.onCellEditComplete}},e._l(e.columns,(function(l){return t("Column",{key:l.field,attrs:{field:l.field,header:l.header,styles:{width:"25%"}},scopedSlots:e._u([{key:"editor",fn:function(l){return[t("InputText",{attrs:{autofocus:""},model:{value:l.data[l.column.field],callback:function(t){e.$set(l.data,l.column.field,t)},expression:"slotProps.data[slotProps.column.field]"}})]}}],null,!0)})})),1)],1),t("div",{staticClass:"card"},[t("h5",[e._v("Row Editing")]),t("DataTable",{attrs:{value:e.products2,editMode:"row",dataKey:"id",editingRows:e.editingRows,responsiveLayout:"scroll"},on:{"update:editingRows":function(t){e.editingRows=t},"update:editing-rows":function(t){e.editingRows=t},"row-edit-save":e.onRowEditSave}},[t("Column",{attrs:{field:"code",header:"Code",styles:{width:"20%"}},scopedSlots:e._u([{key:"editor",fn:function(l){return[t("InputText",{attrs:{autofocus:""},model:{value:l.data[l.column.field],callback:function(t){e.$set(l.data,l.column.field,t)},expression:"slotProps.data[slotProps.column.field]"}})]}}])}),t("Column",{attrs:{field:"name",header:"Name",styles:{width:"20%"}},scopedSlots:e._u([{key:"editor",fn:function(l){return[t("InputText",{model:{value:l.data[l.column.field],callback:function(t){e.$set(l.data,l.column.field,t)},expression:"slotProps.data[slotProps.column.field]"}})]}}])}),t("Column",{attrs:{field:"inventoryStatus",header:"Status",styles:{width:"20%"}},scopedSlots:e._u([{key:"editor",fn:function(l){var a=l.data,o=l.field;return[t("Dropdown",{attrs:{options:e.statuses,optionLabel:"label",optionValue:"value",placeholder:"Select a Status"},scopedSlots:e._u([{key:"option",fn:function(l){return[t("span",{class:"product-badge status-"+l.option.value.toLowerCase()},[e._v(e._s(l.option.label))])]}}],null,!0),model:{value:a[o],callback:function(t){e.$set(a,o,t)},expression:"data[field]"}})]}},{key:"body",fn:function(t){return[e._v(" "+e._s(e.getStatusLabel(t.data.inventoryStatus))+" ")]}}])}),t("Column",{attrs:{field:"price",header:"Price",styles:{width:"20%"}},scopedSlots:e._u([{key:"editor",fn:function(l){return[t("InputText",{model:{value:l.data[l.column.field],callback:function(t){e.$set(l.data,l.column.field,t)},expression:"slotProps.data[slotProps.column.field]"}})]}}])}),t("Column",{attrs:{rowEditor:!0,styles:{width:"10%","min-width":"8rem"},bodyStyle:{"text-align":"center"}}})],1)],1),t("div",{staticClass:"card"},[t("h5",[e._v("Cell Editing with Sorting and Filter")]),t("DataTable",{staticClass:"editable-cells-table",attrs:{value:e.products3,editMode:"cell",filterDisplay:"row",filters:e.filters,responsiveLayout:"scroll"},on:{"cell-edit-complete":e.onCellEditComplete,"update:filters":function(t){e.filters=t}}},e._l(e.columns,(function(l){return t("Column",{key:l.field,staticStyle:{width:"25%"},attrs:{field:l.field,header:l.header,sortable:"",filter:""},scopedSlots:e._u([{key:"filter",fn:function(l){var a=l.filterModel,o=l.filterCallback;return[t("InputText",{directives:[{name:"tooltip",rawName:"v-tooltip.top.focus",value:"Hit enter key to filter",expression:"'Hit enter key to filter'",modifiers:{top:!0,focus:!0}}],staticClass:"p-column-filter",attrs:{type:"text"},on:{keydown:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:o()}},model:{value:a.value,callback:function(t){e.$set(a,"value",t)},expression:"filterModel.value"}})]}},{key:"editor",fn:function(l){var a=l.data,o=l.field;return[t("InputText",{attrs:{autofocus:""},model:{value:a[o],callback:function(t){e.$set(a,o,t)},expression:"data[field]"}})]}}],null,!0)})})),1)],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v(' <div class="card"> <DataTable :value="products1" editMode="cell" @cell-edit-complete="onCellEditComplete" class="editable-cells-table" responsiveLayout="scroll"> <Column v-for="col of columns" :field="col.field" :header="col.header" :key="col.field" :styles="{width: \'25%\'}"> <template #editor="slotProps"> <InputText v-model="slotProps.data[slotProps.column.field]" autofocus /> </template> </Column> </DataTable> </div> <div class="card"> <DataTable :value="products2" editMode="row" dataKey="id" :editingRows.sync="editingRows" @row-edit-save="onRowEditSave" responsiveLayout="scroll"> <Column field="code" header="Code" :styles="{width:\'20%\'}"> <template #editor="slotProps"> <InputText v-model="slotProps.data[slotProps.column.field]" autofocus /> </template> </Column> <Column field="name" header="Name" :styles="{width:\'20%\'}"> <template #editor="slotProps"> <InputText v-model="slotProps.data[slotProps.column.field]" /> </template> </Column> <Column field="inventoryStatus" header="Status" :styles="{width:\'20%\'}"> <template #editor="{ data, field }"> <Dropdown v-model="data[field]" :options="statuses" optionLabel="label" optionValue="value" placeholder="Select a Status"> <template #option="slotProps"> <span :class="\'product-badge status-\' + slotProps.option.value.toLowerCase()">{{slotProps.option.label}}</span> </template> </Dropdown> </template> <template #body="slotProps"> {{getStatusLabel(slotProps.data.inventoryStatus)}} </template> </Column> <Column field="price" header="Price" :styles="{width:\'20%\'}"> <template #editor="slotProps"> <InputText v-model="slotProps.data[slotProps.column.field]" /> </template> </Column> <Column :rowEditor="true" :styles="{width:\'10%\', \'min-width\':\'8rem\'}" :bodyStyle="{\'text-align\':\'center\'}"></Column> </DataTable> </div> <div class="card"> <DataTable :value="products3" editMode="cell" @cell-edit-complete="onCellEditComplete" class="editable-cells-table" filterDisplay="row" :filters.sync="filters" responsiveLayout="scroll"> <Column v-for="col of columns" :field="col.field" :header="col.header" :key="col.field" style="width:25%" sortable filter> <template #filter="{filterModel,filterCallback}"> <InputText type="text" v-model="filterModel.value" @keydown.enter="filterCallback()" class="p-column-filter" v-tooltip.top.focus="\'Hit enter key to filter\'"/> </template> <template #editor="{ data, field }"> <InputText v-model="data[field]" autofocus /> </template> </Column> </DataTable> </div> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import FilterMatchMode from '../../../src/components/api/FilterMatchMode'; import ProductService from '../../service/ProductService'; export default { data() { return { editingRows: [], columns: null, products1: null, products2: null, products3: null, statuses: [ {label: 'In Stock', value: 'INSTOCK'}, {label: 'Low Stock', value: 'LOWSTOCK'}, {label: 'Out of Stock', value: 'OUTOFSTOCK'} ], filters: { 'code': {value: null, matchMode: FilterMatchMode.STARTS_WITH}, 'name': {value: null, matchMode: FilterMatchMode.STARTS_WITH}, 'quantity': {value: null, matchMode: FilterMatchMode.STARTS_WITH}, 'price': {value: null, matchMode: FilterMatchMode.STARTS_WITH} } } }, productService: null, created() { this.productService = new ProductService(); this.columns = [ {field: 'code', header: 'Code'}, {field: 'name', header: 'Name'}, {field: 'quantity', header: 'Quantity'}, {field: 'price', header: 'Price'} ]; this.originalRows = {}; }, methods: { onCellEditComplete(event) { let { data, newValue, field } = event; switch (field) { case 'quantity': case 'price': if (this.isPositiveInteger(newValue)) data[field] = newValue; else event.preventDefault(); break; default: if (newValue.trim().length > 0) data[field] = newValue; else event.preventDefault(); break; } }, isPositiveInteger(val) { let str = String(val); str = str.trim(); if (!str) { return false; } str = str.replace(/^0+/, \"\") || \"0\"; var n = Math.floor(Number(str)); return n !== Infinity && String(n) === str && n >= 0; }, onRowEditSave(event) { let { newData, index } = event; this.products2[index] = newData; }, getStatusLabel(status) { switch(status) { case 'INSTOCK': return 'In Stock'; case 'LOWSTOCK': return 'Low Stock'; case 'OUTOFSTOCK': return 'Out of Stock'; default: return 'NA'; } } }, mounted() { this.productService.getProductsSmall().then(data => this.products1 = data); this.productService.getProductsSmall().then(data => this.products2 = data); this.productService.getProductsSmall().then(data => this.products3 = data); } } ")])],1)],1)],1)])}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[e._v("DataTable "),t("span",[e._v("InCell Edit")])]),t("p",[e._v("In cell editing provides a rapid and user friendly way to manipulate the data. The datatable provides a flexible API so that the editing behavior is implemented by the page author whether it utilizes v-model or vuex. ")])])])}],!1,null,"9309bd10").exports)}}}));
//# sourceMappingURL=DataTableEditDemo-legacy-BOAaY7bu.js.map
