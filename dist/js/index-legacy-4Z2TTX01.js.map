{"version":3,"file":"index-legacy-4Z2TTX01.js","sources":["../../src/doc/chips/Documentation.vue","../../src/doc/chips/SourceCode.vue","../../src/doc/chips/index.vue","../../src/views/chips/index.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>An array as the value can be bound using the standard v-model directive.</p>\n    <DocSectionCode :code=\"baseCode\" />\n\n    <h5>Custom Content</h5>\n    <p>\n      A chip is customized using the <i>chip</i> template where the chip value is passed to the slotProps with the value\n      property.\n    </p>\n    <DocSectionCode :code=\"customContentCode\" />\n\n    <h5>Properties</h5>\n    <p>\n      Any property as style and class are passed to the main container element. Following are the additional properties\n      to configure the component.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>addOnBlur</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Whether to add an item when the input loses focus.</td>\n          </tr>\n          <tr>\n            <td>allowDuplicate</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to allow duplicate values or not.</td>\n          </tr>\n          <tr>\n            <td>ariaLabelledBy</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Establishes relationships between the component and label(s) where its value should be one or more element\n              IDs.\n            </td>\n          </tr>\n          <tr>\n            <td>max</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Maximum number of entries allowed.</td>\n          </tr>\n          <tr>\n            <td>value</td>\n            <td>array</td>\n            <td>null</td>\n            <td>Value of the component.</td>\n          </tr>\n          <tr>\n            <td>separator</td>\n            <td>string</td>\n            <td>null</td>\n            <td>\n              Separator char to add an item when pressed in addition to the enter key. Currently only possible value is\n              \",\"\n            </td>\n          </tr>\n          <tr>\n            <td>placeholder</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Specifies a short hint that describes the expected value of the input field.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Events</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>input</td>\n            <td>value: New value</td>\n            <td>Callback to invoke on value change.</td>\n          </tr>\n          <tr>\n            <td>focus</td>\n            <td>event: Browser event</td>\n            <td>Callback to invoke when the input is focused.</td>\n          </tr>\n          <tr>\n            <td>blur</td>\n            <td>event: Browser event</td>\n            <td>Callback to invoke when the input loses focus.</td>\n          </tr>\n          <tr>\n            <td>add</td>\n            <td>\n              originalEvent: Browser event <br />\n              value: Added item value\n            </td>\n            <td>Callback to invoke when a chip is added.</td>\n          </tr>\n          <tr>\n            <td>remove</td>\n            <td>\n              originalEvent: Browser event <br />\n              value: Removed item value\n            </td>\n            <td>Callback to invoke when a chip is removed.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>chip</td>\n            <td>value: Value of the component</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>\n      Following is the list of structural style classes, for theming classes visit\n      <router-link to=\"/theming\">theming</router-link> page.\n    </p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-chips</td>\n            <td>Container element</td>\n          </tr>\n          <tr>\n            <td>p-chips-token</td>\n            <td>Chip element container.</td>\n          </tr>\n          <tr>\n            <td>p-chips-token-icon</td>\n            <td>Icon of a chip.</td>\n          </tr>\n          <tr>\n            <td>p-chips-token-label</td>\n            <td>label of a chip.</td>\n          </tr>\n          <tr>\n            <td>p-chips-input-token</td>\n            <td>Container of input element.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      importCode: {\n        basic: `\nimport Chips from 'primevue2/chips';\n        `\n      },\n      baseCode: {\n        basic: `\n<Chips v-model=\"value\" />\n        `\n      },\n      customContentCode: {\n        basic: `\n<Chips v-model=\"value\">\n\t<template #chip=\"slotProps\">\n\t\t<div>\n\t\t\t<span>{{slotProps.value}} - (active) </span>\n\t\t\t<i class=\"pi pi-user-plus\" style=\"font-size: 14px\"></i>\n\t\t</div>\n\t</template>\n</Chips>\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/chips\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h5>Basic</h5>\n<Chips v-model=\"value1\" />\n\n<h5>Comma Separator</h5>\n<Chips v-model=\"value2\" separator=\",\" />\n\n<h5>Template</h5>\n<Chips v-model=\"value3\">\n    <template #chip=\"slotProps\">\n        <div>\n            <span>{{slotProps.value}} - (active) </span>\n            <i class=\"pi pi-user-plus\" style=\"font-size: 14px\"></i>\n        </div>\n    </template>\n</Chips>\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tvalue1: null,\n\t\t\tvalue2: null,\n            value3: null\n\t\t}\n\t}\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Chips</h1>\n        <p>Chips is used to enter multiple values on an input field.</p>\n      </div>\n      <AppInputStyleSwitch />\n    </div>\n\n    <div class=\"content-section implementation p-fluid\">\n      <div class=\"card\">\n        <h5>Basic</h5>\n        <Chips v-model=\"value1\" />\n\n        <h5>Comma Separator</h5>\n        <Chips v-model=\"value2\" separator=\",\" />\n\n        <h5>Template</h5>\n        <Chips v-model=\"value3\">\n          <template #chip=\"slotProps\">\n            <div>\n              <span>{{ slotProps.value }} - (active) </span>\n              <i class=\"pi pi-user-plus\" style=\"font-size: 14px\"></i>\n            </div>\n          </template>\n        </Chips>\n      </div>\n    </div>\n\n    <ChipsDoc />\n  </div>\n</template>\n\n<script>\nimport ChipsDoc from '@/doc/chips/index.vue'\n\nexport default {\n  data() {\n    return {\n      value1: null,\n      value2: null,\n      value3: null\n    }\n  },\n  components: {\n    'ChipsDoc': ChipsDoc\n  }\n}\n</script>\n"],"names":["name","data","importCode","basic","baseCode","customContentCode","sourceCode1","sourceCode2","components","Documentation","SourceCode","value1","value2","value3","ChipsDoc"],"mappings":"0TAgMA,QAAA,CACAA,KAAA,gBACAC,KAAAA,WACA,MAAA,CACAC,WAAA,CACAC,0DAIAC,SAAA,CACAD,MAAA,yCAIAE,kBAAA,CACAF,MAAA,0OAYA,48IC3MA,CACAH,KAAA,aACAC,KAAAA,WACA,MAAA,CACAK,YAAA,CACAH,MAiBA,0YACAI,YAAA,CACAJ,mJAaA,gcCrCA,CACAK,WAAA,CAAAC,cAAAA,EAAAC,WAAAA,kSCoBA,CACAT,KAAAA,WACA,MAAA,CACAU,OAAA,KACAC,OAAA,KACAC,OAAA,KAEA,EACAL,WAAA,CACAM,SAAAA"}