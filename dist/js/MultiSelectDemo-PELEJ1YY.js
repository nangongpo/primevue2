import{n}from"./app.component-D2FSMXVj.js";import{_ as i}from"./flag_placeholder-BDuXeLXp.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const s={};var r=function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Documentation"}},[e("h5",[t._v("Import")]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import MultiSelect from 'primevue2/multiselect'; ")]),e("h5",[t._v("Getting Started")]),e("p",[t._v("MultiSelect requires a value to bind and a collection of arbitrary objects along with the "),e("i",[t._v("optionLabel")]),t._v(" property to specify the label property of the option.")]),e("CodeHighlight",[t._v(' <MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" /> ')]),e("CodeHighlight",{attrs:{lang:"js"}},[t._v(" data() { return { selectedCars: null, cars: [ {brand: 'Audi', value: 'Audi'}, {brand: 'BMW', value: 'BMW'}, {brand: 'Fiat', value: 'Fiat'}, {brand: 'Honda', value: 'Honda'}, {brand: 'Jaguar', value: 'Jaguar'}, {brand: 'Mercedes', value: 'Mercedes'}, {brand: 'Renault', value: 'Renault'}, {brand: 'Volkswagen', value: 'Volkswagen'}, {brand: 'Volvo', value: 'Volvo'} ] } } ")]),e("h5",[t._v("Chips Display")]),e("p",[t._v("A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the "),e("i",[t._v("display")]),t._v(" property to visualize the items as tokens.")]),e("CodeHighlight",[t._v(' <MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" display="chip"/> ')]),e("h5",[t._v("Custom Content")]),e("p",[t._v("Label of an option is used as the display text of an item by default, for custom content support define an "),e("i",[t._v("option")]),t._v(" template that gets the option instance as a parameter.")]),e("p",[t._v("In addition the "),e("i",[t._v("value")]),t._v(" template can be used to customize the selected values display instead of the default comma separated list.")]),e("CodeHighlight",[[t._v(' <MultiSelect v-model="selectedCars2" :options="cars" optionLabel="brand" placeholder="Select a Car"> <template #value="slotProps"> <div class="p-multiselect-car-token" v-for="option of slotProps.value" :key="option.brand"> <img :alt="option.brand" :src="$publicUrl(\'demo/images/car/\' + option.brand + \'.png\')" /> <span>{{option.brand}}</span> </div> <template v-if="!slotProps.value || slotProps.value.length === 0"> Select Brands <template> </template> <template #option="slotProps"> <div class="p-multiselect-car-option"> <img :alt="slotProps.option.brand" :src="$publicUrl(\'demo/images/car/\' + slotProps.option.brand + \'.png\')" /> <span>{{slotProps.option.brand}}</span> </div> </template> </MultiSelect> ')]],2),e("h5",[t._v("Filter")]),e("p",[t._v("Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable the "),e("i",[t._v("filter")]),t._v(" property.")]),e("CodeHighlight",[t._v(' <MultiSelect v-model="selectedCars" :options="cars" :filter="true" optionLabel="brand" placeholder="Select Brands"/> ')]),e("h5",[t._v("Properties")]),e("p",[t._v("Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Value of the component.")])]),e("tr",[e("td",[t._v("options")]),e("td",[t._v("array")]),e("td",[t._v("null")]),e("td",[t._v("An array of selectitems to display as the available options.")])]),e("tr",[e("td",[t._v("optionLabel")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the label of an option.")])]),e("tr",[e("td",[t._v("optionValue")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")])]),e("tr",[e("td",[t._v("optionDisabled")]),e("td",[t._v("string | function")]),e("td",[t._v("null")]),e("td",[t._v("Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")])]),e("tr",[e("td",[t._v("scrollHeight")]),e("td",[t._v("string")]),e("td",[t._v("200px")]),e("td",[t._v("Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.")])]),e("tr",[e("td",[t._v("placeholder")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Label to display when there are no selections.")])]),e("tr",[e("td",[t._v("disabled")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When present, it specifies that the component should be disabled.")])]),e("tr",[e("td",[t._v("filter")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When specified, displays an input field to filter the items on keyup.")])]),e("tr",[e("td",[t._v("tabindex")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Index of the element in tabbing order.")])]),e("tr",[e("td",[t._v("inputId")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Identifier of the underlying input element.")])]),e("tr",[e("td",[t._v("dataKey")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("A property to uniquely identify an option.")])]),e("tr",[e("td",[t._v("filterPlaceholder")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Placeholder text to show when filter input is empty.")])]),e("tr",[e("td",[t._v("filterLocale")]),e("td",[t._v("string")]),e("td",[t._v("undefined")]),e("td",[t._v("Locale to use in filtering. The default locale is the host environment's current locale.")])]),e("tr",[e("td",[t._v("ariaLabelledBy")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Establishes relationships between the component and label(s) where its value should be one or more element IDs.")])]),e("tr",[e("td",[t._v("appendTo")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v('Id of the element or "body" for document where the overlay should be appended to.')])]),e("tr",[e("td",[t._v("emptyFilterMessage")]),e("td",[t._v("string")]),e("td",[t._v("No results found")]),e("td",[t._v("Text to display when filtering does not return any results.")])]),e("tr",[e("td",[t._v("display")]),e("td",[t._v("string")]),e("td",[t._v("comma")]),e("td",[t._v('Defines how the selected items are displayed, valid values are "comma" and "chip".')])]),e("tr",[e("td",[t._v("selectionLimit")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Maximum number of selectable items.")])]),e("tr",[e("td",[t._v("showToggleAll")]),e("td",[t._v("boolean")]),e("td",[t._v("true")]),e("td",[t._v("Whether to show the header checkbox to toggle the selection of all items at once.")])])])])]),e("h5",[t._v("Events")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("change")]),e("td",[t._v("event.originalEvent: Original event "),e("br"),t._v(" event.value: Selected option value ")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("input")]),e("td",[t._v("value: New value")]),e("td",[t._v("Callback to invoke on value change.")])]),e("tr",[e("td",[t._v("before-show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is shown.")])]),e("tr",[e("td",[t._v("before-hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke before the overlay is hidden.")])]),e("tr",[e("td",[t._v("show")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is shown.")])]),e("tr",[e("td",[t._v("hide")]),e("td",[t._v("-")]),e("td",[t._v("Callback to invoke when the overlay is hidden.")])]),e("tr",[e("td",[t._v("filter")]),e("td",[t._v("event.originalEvent: Original event "),e("br"),t._v(" event.value: Filter value ")]),e("td",[t._v("Callback to invoke on filter input.")])])])])]),e("h5",[t._v("Methods")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("show")]),e("td",[t._v("-")]),e("td",[t._v("Shows the overlay.")])]),e("tr",[e("td",[t._v("hide")]),e("td",[t._v("-")]),e("td",[t._v("Hides the overlay.")])])])])]),e("h5",[t._v("Slots")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")])])]),e("tbody",[e("tr",[e("td",[t._v("value")]),e("td",[t._v("value: Value of the component "),e("br"),t._v(" placeholder: Placeholder prop value")])]),e("tr",[e("td",[t._v("options")]),e("td",[t._v("option: Option instance "),e("br"),t._v(" index: Index of the option")])]),e("tr",[e("td",[t._v("indicator")]),e("td",[t._v("-")])])])])]),e("h5",[t._v("Styling")]),e("p",[t._v("Following is the list of structural style classes, for theming classes visit "),e("router-link",{attrs:{to:"/theming"}},[t._v("theming")]),t._v(" page.")],1),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-multiselect")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-multiselect-label-container")]),e("td",[t._v("Container of the label to display selected items.")])]),e("tr",[e("td",[t._v("p-multiselect-label-container")]),e("td",[t._v("Label to display selected items.")])]),e("tr",[e("td",[t._v("p-multiselect-trigger")]),e("td",[t._v("Dropdown button.")])]),e("tr",[e("td",[t._v("p-multiselect-filter-container")]),e("td",[t._v("Container of filter input.")])]),e("tr",[e("td",[t._v("p-multiselect-panel")]),e("td",[t._v("Overlay panel for items.")])]),e("tr",[e("td",[t._v("p-multiselect-items")]),e("td",[t._v("List container of items.")])]),e("tr",[e("td",[t._v("p-multiselect-item")]),e("td",[t._v("An item in the list.")])])])])]),e("h5",[t._v("Dependencies")]),e("p",[t._v("None.")])],1),e("TabPanel",{attrs:{header:"Source"}},[e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/multiselect",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])]),e("CodeHighlight",[[t._v(' <h5>Basic</h5> <MultiSelect v-model="selectedCities1" :options="cities" optionLabel="name" placeholder="Select a City" /> <h5>Chips</h5> <MultiSelect v-model="selectedCities2" :options="cities" optionLabel="name" placeholder="Select a City" display="chip"/> <h5>Advanced with Templating and Filtering</h5> <MultiSelect v-model="selectedCountries" :options="countries" optionLabel="name" placeholder="Select Countries" :filter="true" class="multiselect-custom"> <template #value="slotProps"> <div class="country-item country-item-value" v-for="option of slotProps.value" :key="option.code"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + option.code.toLowerCase()" /> <div>{{option.name}}</div> </div> <template v-if="!slotProps.value || slotProps.value.length === 0"> Select Countries </template> </template> <template #option="slotProps"> <div class="country-item"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + slotProps.option.code.toLowerCase()" /> <div>{{slotProps.option.name}}</div> </div> </template> </MultiSelect> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" export default { data() { return { selectedCities: null, selectedCountries: null, cities: [ {name: 'New York', code: 'NY'}, {name: 'Rome', code: 'RM'}, {name: 'London', code: 'LDN'}, {name: 'Istanbul', code: 'IST'}, {name: 'Paris', code: 'PRS'} ], countries: [ {name: 'Australia', code: 'AU'}, {name: 'Brazil', code: 'BR'}, {name: 'China', code: 'CN'}, {name: 'Egypt', code: 'EG'}, {name: 'France', code: 'FR'}, {name: 'Germany', code: 'DE'}, {name: 'India', code: 'IN'}, {name: 'Japan', code: 'JP'}, {name: 'Spain', code: 'ES'}, {name: 'United States', code: 'US'} ] } } } ")]),e("CodeHighlight",{attrs:{lang:"css"}},[t._v(" .p-multiselect { min-width: 15rem; } :deep(.multiselect-custom) { .p-multiselect-label:not(.p-placeholder) { padding-top: .25rem; padding-bottom: .25rem; } .country-item-value { padding: .25rem .5rem; border-radius: 3px; display: inline-flex; margin-right: .5rem; background-color: var(--primary-color); color: var(--primary-color-text); img.flag { width: 17px; } } } ")])],1)],1)],1)},d=[],c=n(s,r,d,!1,null,null);const v=c.exports,p={data(){return{selectedCities1:null,selectedCities2:null,selectedCountries:null,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}]}},components:{MultiSelectDoc:v}};var u=function(){var t=this,e=t._self._c;return e("div",[e("div",{staticClass:"content-section introduction"},[t._m(0),e("AppInputStyleSwitch")],1),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Basic")]),e("MultiSelect",{attrs:{options:t.cities,optionLabel:"name",placeholder:"Select a City"},model:{value:t.selectedCities1,callback:function(a){t.selectedCities1=a},expression:"selectedCities1"}}),e("h5",[t._v("Chips")]),e("MultiSelect",{attrs:{options:t.cities,optionLabel:"name",placeholder:"Select a City",display:"chip"},model:{value:t.selectedCities2,callback:function(a){t.selectedCities2=a},expression:"selectedCities2"}}),e("h5",[t._v("Advanced with Templating and Filtering")]),e("MultiSelect",{staticClass:"multiselect-custom",attrs:{options:t.countries,optionLabel:"name",placeholder:"Select Countries",filter:!0},scopedSlots:t._u([{key:"value",fn:function(a){return[t._l(a.value,function(o){return e("div",{key:o.code,staticClass:"country-item country-item-value"},[e("img",{class:"flag flag-"+o.code.toLowerCase(),attrs:{src:i}}),e("div",[t._v(t._s(o.name))])])}),!a.value||a.value.length===0?[t._v(" Select Countries ")]:t._e()]}},{key:"option",fn:function(a){return[e("div",{staticClass:"country-item"},[e("img",{class:"flag flag-"+a.option.code.toLowerCase(),attrs:{src:i}}),e("div",[t._v(t._s(a.option.name))])])]}}]),model:{value:t.selectedCountries,callback:function(a){t.selectedCountries=a},expression:"selectedCountries"}})],1)]),e("MultiSelectDoc")],1)},_=[function(){var l=this,t=l._self._c;return t("div",{staticClass:"feature-intro"},[t("h1",[l._v("MultiSelect")]),t("p",[l._v("MultiSelect is used to multiple values from a list of options.")])])}],m=n(p,u,_,!1,null,"fbb1d46d");const C=m.exports;export{C as default};
//# sourceMappingURL=MultiSelectDemo-PELEJ1YY.js.map
