import{n as s,aJ as o,aM as u}from"./app.component-D2FSMXVj.js";import{C as v}from"./CustomerService-4zeCbf_T.js";import{_ as c}from"./flag_placeholder-BDuXeLXp.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const f={};var d=function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Documentation"}},[e("h5",[t._v("Import")]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import {FilterService} from 'primevue2/api'; ")]),e("h5",[t._v("Getting Started")]),e("p",[t._v("Filters are accessed with "),e("i",[t._v("FilterService.filters")]),t._v(".")]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" const value = 'PrimeVue'; FilterService.filters.equals(value, 'Vue'); //false FilterService.filters.equals(value, 8); //false FilterService.filters.equals(value, new Date()); //false FilterService.filters.contains(value, 'Vue'); //true FilterService.filters.startsWith(value, 'Vue'); //false FilterService.filters.endsWith(value, 'Vue'); //true FilterService.filters.lt(10, 20); //true FilterService.filters.gt(50, 20); //true FilterService.filters.in(value, ['PrimeFaces', 'PrimeVue']); //true ")]),e("h5",[t._v("Custom Constraint")]),e("p",[t._v("FilterService can be extended by adding new constraints using the "),e("span",[t._v("register")]),t._v(" function.")]),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" FilterService.register('isPrimeNumber', (value, filter): boolean => { if (filter === undefined || filter === null || filter.trim() === '') { return true; } if (value === undefined || value === null) { return false; } return value.toString() === filter.toString(); }); FilterService.filters['isPrimeNumber'](3); //true FilterService.filters['isPrimeNumber'](5); //true FilterService.filters['isPrimeNumber'](568985673); //false ")]),e("h5",[t._v("Built-in Constraints")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("startsWith")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value starts with the filter value")])]),e("tr",[e("td",[t._v("contains")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value contains the filter value")])]),e("tr",[e("td",[t._v("endsWith")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value ends with the filter value")])]),e("tr",[e("td",[t._v("equals")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value equals the filter value")])]),e("tr",[e("td",[t._v("notEquals")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value does not equal the filter value")])]),e("tr",[e("td",[t._v("in")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter[]: An array of filter values"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value contains the filter value")])]),e("tr",[e("td",[t._v("lt")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value is less than the filter value")])]),e("tr",[e("td",[t._v("lte")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value is less than or equals to the filter value")])]),e("tr",[e("td",[t._v("gt")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value is greater than the filter value")])]),e("tr",[e("td",[t._v("gte")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value is greater than or equals to the filter value")])]),e("tr",[e("td",[t._v("is")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value equals the filter value, alias to equals")])]),e("tr",[e("td",[t._v("isNot")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the value does not equal the filter value, alias to notEquals.")])]),e("tr",[e("td",[t._v("before")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the date value is before the filter date.")])]),e("tr",[e("td",[t._v("after")]),e("td",[t._v("value: Value to filter"),e("br"),t._v(" filter: Filter value"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the date value is after the filter date.")])])])]),e("h5",[t._v("FilterService API")]),e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("filter")]),e("td",[t._v("value[]: An array of values to filter"),e("br"),t._v(" fields[]: An array of properties in the value object"),e("br"),t._v(" filterValue: Filter value"),e("br"),t._v(" filterMatchMode: Constraint"),e("br"),t._v(" filterLocale: Locale to use in filtering")]),e("td",[t._v("Whether the property values of the given value collection matches the filter.")])]),e("tr",[e("td",[t._v("filters")]),e("td",[t._v("-")]),e("td",[t._v("Property to access constraints collection.")])]),e("tr",[e("td",[t._v("register")]),e("td",[t._v("name: string "),e("br"),t._v(" fn: Filter callback")]),e("td",[t._v("Registers a new constraint in filters.")])])])])])]),e("h5",[t._v("Dependencies")]),e("p",[t._v("None.")])],1),e("TabPanel",{attrs:{header:"Source"}},[e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/filterservice",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])]),e("CodeHighlight",[[t._v(' <DataTable :value="customers" :paginator="true" :rows="10" responsiveLayout="scroll" dataKey="id" :filters.sync="filters" filterDisplay="row" :loading="loading"> <template #empty> No customers found. </template> <template #loading> Loading customers data. Please wait. </template> <Column field="name" header="Name" :filterMatchModeOptions="matchModeOptions"> <template #body="{data}"> {{data.name}} </template> <template #filter="{filterModel,filterCallback}"> <InputText type="text" v-model="filterModel.value" @input="filterCallback()" class="p-column-filter" :placeholder="`Search by name - ${filterModel.matchMode}`"/> </template> </Column> <Column header="Country" filterField="country.name" :filterMatchModeOptions="matchModeOptions"> <template #body="{data}"> <img src="../../assets/images/flag_placeholder.png" :class="\'flag flag-\' + data.country.code" width="30" /> <span class="image-text">{{data.country.name}}</span> </template> <template #filter="{filterModel,filterCallback}"> <InputText type="text" v-model="filterModel.value" @input="filterCallback()" class="p-column-filter" :placeholder="`Search by country - ${filterModel.matchMode}`" /> </template> </Column> </DataTable> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import FilterMatchMode from '../../../src/components/api/FilterMatchMode'; import FilterService from '../../../src/components/api/FilterService'; import CustomerService from '../../service/CustomerService'; const YOUR_FILTER = 'YOUR FILTER'; export default { data() { return { customers: null, filters: { 'name': {value: null, matchMode: YOUR_FILTER}, 'country.name': {value: null, matchMode: FilterMatchMode.STARTS_WITH} }, matchModeOptions: [ {label: 'Your Equals', value: YOUR_FILTER}, {label: 'Starts With', value: FilterMatchMode.STARTS_WITH} ], loading: true } }, created() { this.customerService = new CustomerService(); }, mounted() { this.customerService.getCustomersLarge().then(data => { this.customers = data; this.loading = false; }); FilterService.register(YOUR_FILTER, (value, filter) => { if (filter === undefined || filter === null || filter.trim() === '') { return true; } if (value === undefined || value === null) { return false; } return value.toString() === filter.toString(); }); } } ")])],1)],1)],1)},_=[],h=s(f,d,_,!1,null,null);const m=h.exports,n="YOUR FILTER",p={data(){return{customers:null,filters:{name:{value:null,matchMode:o.STARTS_WITH},"country.name":{value:null,matchMode:o.STARTS_WITH}},matchModeOptions:[{label:"Your Equals",value:n},{label:"Starts With",value:o.STARTS_WITH}],loading:!0}},created(){this.customerService=new v},mounted(){this.customerService.getCustomersLarge().then(l=>{this.customers=l,this.loading=!1}),u.register(n,(l,t)=>t==null||t.trim()===""?!0:l==null?!1:l.toString()===t.toString())},components:{FilterServiceDoc:m}};var g=function(){var t=this,e=t._self._c;return e("div",[e("div",{staticClass:"content-section introduction"},[t._m(0),e("AppInputStyleSwitch")],1),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Table Integration")]),e("p",[t._v(" A custom equals filter that checks for exact case sensitive value is registered and defined as a match mode of a column filter. ")]),e("DataTable",{attrs:{value:t.customers,paginator:!0,rows:10,responsiveLayout:"scroll",dataKey:"id",filters:t.filters,filterDisplay:"row",loading:t.loading},on:{"update:filters":function(r){t.filters=r}},scopedSlots:t._u([{key:"empty",fn:function(){return[t._v(" No customers found. ")]},proxy:!0},{key:"loading",fn:function(){return[t._v(" Loading customers data. Please wait. ")]},proxy:!0}])},[e("Column",{attrs:{field:"name",header:"Name",filterMatchModeOptions:t.matchModeOptions},scopedSlots:t._u([{key:"body",fn:function({data:r}){return[t._v(" "+t._s(r.name)+" ")]}},{key:"filter",fn:function({filterModel:r,filterCallback:i}){return[e("InputText",{staticClass:"p-column-filter",attrs:{type:"text",placeholder:"Search by name - ".concat(r.matchMode)},on:{input:function(a){return i()}},model:{value:r.value,callback:function(a){t.$set(r,"value",a)},expression:"filterModel.value"}})]}}])}),e("Column",{attrs:{header:"Country",filterField:"country.name",filterMatchModeOptions:t.matchModeOptions},scopedSlots:t._u([{key:"body",fn:function({data:r}){return[e("img",{class:"flag flag-"+r.country.code,attrs:{src:c,width:"30"}}),e("span",{staticClass:"image-text"},[t._v(t._s(r.country.name))])]}},{key:"filter",fn:function({filterModel:r,filterCallback:i}){return[e("InputText",{staticClass:"p-column-filter",attrs:{type:"text",placeholder:"Search by country - ".concat(r.matchMode)},on:{input:function(a){return i()}},model:{value:r.value,callback:function(a){t.$set(r,"value",a)},expression:"filterModel.value"}})]}}])})],1)],1)]),e("FilterServiceDoc")],1)},b=[function(){var l=this,t=l._self._c;return t("div",{staticClass:"feature-intro"},[t("h1",[l._v("FilterService")]),t("p",[l._v("FilterService is a helper utility to filter collections against constraints.")])])}],S=s(p,g,b,!1,null,null);const W=S.exports;export{W as default};
//# sourceMappingURL=FilterServiceDemo-C0hIN3Ro.js.map
