import{n as s}from"./app.component-XqgfEEHA.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const n={};var o=function(){var t=this,a=t._self._c;return a("div",{staticClass:"content-section documentation"},[a("TabView",[a("TabPanel",{attrs:{header:"Documentation"}},[a("h5",[t._v("Import")]),a("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import InputMask from 'primevue2/inputmask'; ")]),a("h5",[t._v("Getting Started")]),a("p",[t._v("A model can be bound using the standard v-model directive.")]),a("CodeHighlight",[t._v(' <InputMask v-model="value" mask="99-999999" /> ')]),a("h5",[t._v("Mask")]),a("p",[t._v("Mask format can be a combination of the the following built-in definitions.")]),a("ul",[a("li",[t._v(" a - Alpha character (A-Z,a-z) ")]),a("li",[t._v(" 9 - Numeric character (0-9) ")]),a("li",[t._v(" * - Alpha numberic character (A-Z,a-z,0-9) ")])]),a("CodeHighlight",[t._v(' <InputMask v-model="value" mask="a*-999-a999" /> ')]),a("h5",[t._v("SlotChar")]),a("p",[t._v("Underscore is the default placeholder for a mask and this can be customized using "),a("i",[t._v("slotChart")]),t._v(" option.")]),a("CodeHighlight",[t._v(' <InputMask v-model="value" mask="99/99/9999" slotChar="mm/dd/yyyy" /> ')]),a("h5",[t._v("Optional Values")]),a("p",[t._v("If the input does not complete the mask definition, it is cleared by default. Use "),a("i",[t._v("autoClear")]),t._v(" property to control this behavior. In addition, certain part of a mask can be made optional by using ? symbol where anything after the question mark becomes optional.")]),a("CodeHighlight",[t._v(' <InputMask v-model="value" mask="(999) 999-9999? x99999" /> ')]),a("h5",[t._v("Properties")]),a("p",[t._v("InputText passes any valid attribute to the underlying input element. In addition;")]),a("div",{staticClass:"doc-tablewrapper"},[a("table",{staticClass:"doc-table"},[a("thead",[a("tr",[a("th",[t._v("Name")]),a("th",[t._v("Type")]),a("th",[t._v("Default")]),a("th",[t._v("Description")])])]),a("tbody",[a("tr",[a("td",[t._v("mask")]),a("td",[t._v("string")]),a("td",[t._v("null")]),a("td",[t._v("Mask pattern.")])]),a("tr",[a("td",[t._v("slotChar")]),a("td",[t._v("string")]),a("td",[t._v("-")]),a("td",[t._v("Placeholder character in mask, default is underscore.")])]),a("tr",[a("td",[t._v("autoClear")]),a("td",[t._v("boolean")]),a("td",[t._v("true")]),a("td",[t._v("Clears the incomplete value on blur.")])]),a("tr",[a("td",[t._v("unmask")]),a("td",[t._v("boolean")]),a("td",[t._v("false")]),a("td",[t._v("Defines if model sets the raw unmasked value to bound value or the formatted mask value.")])]),a("tr",[a("td",[t._v("trueValue")]),a("td",[t._v("any")]),a("td",[t._v("null")]),a("td",[t._v("Value in checked state.")])]),a("tr",[a("td",[t._v("falseValue")]),a("td",[t._v("any")]),a("td",[t._v("null")]),a("td",[t._v("Value in unchecked state.")])])])])]),a("h5",[t._v("Events")]),a("p",[t._v("Any valid event such as focus, blur and input are passed to the underlying input element.")]),a("h5",[t._v("Styling")]),a("p",[t._v("Following is the list of structural style classes, for theming classes visit "),a("router-link",{attrs:{to:"/theming"}},[t._v("theming")]),t._v(" page.")],1),a("div",{staticClass:"doc-tablewrapper"},[a("table",{staticClass:"doc-table"},[a("thead",[a("tr",[a("th",[t._v("Name")]),a("th",[t._v("Element")])])]),a("tbody",[a("tr",[a("td",[t._v("p-inputmask p-inputtext")]),a("td",[t._v("Input element")])])])])]),a("h5",[t._v("Dependencies")]),a("p",[t._v("None.")])],1),a("TabPanel",{attrs:{header:"Source"}},[a("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/inputtext",target:"_blank",rel:"noopener noreferrer"}},[a("span",[t._v("View on GitHub")])]),a("CodeHighlight",[[t._v(' <div class="p-fluid formgrid grid"> <div class="field col-12 md:col-4"> <label for="basic">Basic</label> <InputMask mask="99-999999" v-model="val1" placeholder="99-999999" /> </div> <div class="field col-12 md:col-4"> <label for="ssn">SSN</label> <InputMask mask="999-99-9999" v-model="val2" placeholder="999-99-9999" /> </div> <div class="field col-12 md:col-4"> <label for="date">Date</label> <InputMask mask="99/99/9999" v-model="val3" placeholder="99/99/9999" slotChar="mm/dd/yyyy" /> </div> <div class="field col-12 md:col-4"> <label for="Phone">Phone</label> <InputMask mask="(999) 999-9999" v-model="val4" placeholder="(999) 999-9999" /> </div> <div class="field col-12 md:col-4"> <label for="phoneext">Phone Ext</label> <InputMask mask="(999) 999-9999? x99999" v-model="val5" placeholder="(999) 999-9999? x99999"/> </div> <div class="field col-12 md:col-4"> <label for="serial">Serial</label> <InputMask mask="a*-999-a999" v-model="val6" placeholder="a*-999-a999" /> </div> </div> ')]],2),a("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" export default { data() { return { val1: null, val2: null, val3: null, val4: null, val5: null, val6: null } } } ")])],1)],1)],1)},i=[],r=s(n,o,i,!1,null,null);const d=r.exports,v={data(){return{val1:null,val2:null,val3:null,val4:null,val5:null,val6:null}},components:{InputMaskDoc:d}};var c=function(){var t=this,a=t._self._c;return a("div",[a("div",{staticClass:"content-section introduction"},[t._m(0),a("AppInputStyleSwitch")],1),a("div",{staticClass:"content-section implementation"},[a("div",{staticClass:"card"},[a("div",{staticClass:"p-fluid formgrid grid"},[a("div",{staticClass:"field col-12 md:col-4"},[a("label",{attrs:{for:"basic"}},[t._v("Basic")]),a("InputMask",{attrs:{mask:"99-999999",placeholder:"99-999999"},model:{value:t.val1,callback:function(e){t.val1=e},expression:"val1"}})],1),a("div",{staticClass:"field col-12 md:col-4"},[a("label",{attrs:{for:"ssn"}},[t._v("SSN")]),a("InputMask",{attrs:{mask:"999-99-9999",placeholder:"999-99-9999"},model:{value:t.val2,callback:function(e){t.val2=e},expression:"val2"}})],1),a("div",{staticClass:"field col-12 md:col-4"},[a("label",{attrs:{for:"date"}},[t._v("Date")]),a("InputMask",{attrs:{mask:"99/99/9999",placeholder:"99/99/9999",slotChar:"mm/dd/yyyy"},model:{value:t.val3,callback:function(e){t.val3=e},expression:"val3"}})],1),a("div",{staticClass:"field col-12 md:col-4"},[a("label",{attrs:{for:"Phone"}},[t._v("Phone")]),a("InputMask",{attrs:{mask:"(999) 999-9999",placeholder:"(999) 999-9999"},model:{value:t.val4,callback:function(e){t.val4=e},expression:"val4"}})],1),a("div",{staticClass:"field col-12 md:col-4"},[a("label",{attrs:{for:"phoneext"}},[t._v("Phone Ext")]),a("InputMask",{attrs:{mask:"(999) 999-9999? x99999",placeholder:"(999) 999-9999? x99999"},model:{value:t.val5,callback:function(e){t.val5=e},expression:"val5"}})],1),a("div",{staticClass:"field col-12 md:col-4"},[a("label",{attrs:{for:"serial"}},[t._v("Serial")]),a("InputMask",{attrs:{mask:"a*-999-a999",placeholder:"a*-999-a999"},model:{value:t.val6,callback:function(e){t.val6=e},expression:"val6"}})],1)])])]),a("InputMaskDoc")],1)},u=[function(){var l=this,t=l._self._c;return t("div",{staticClass:"feature-intro"},[t("h1",[l._v("InputMask")]),t("p",[l._v("InputMask component is used to enter input in a certain format such as numeric, date, currency, email and phone.")])])}],p=s(v,c,u,!1,null,null);const k=p.exports;export{k as default};
//# sourceMappingURL=InputMaskDemo-CaSEIUA5.js.map
