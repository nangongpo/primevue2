import{n as l}from"./app.component-CxwrbeA3.js";import{N as r}from"./NodeService-DGU-G-ef.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const s={data(){return{sourceCode1:{basic:'\n<TreeTable :value="nodes">\n    <template #header>\n        <div style="text-align:left">\n            <MultiSelect v-model="columns" :options="columnOptions" optionLabel="header" placeholder="Select Columns" style="width: 20em"/>\n        </div>\n    </template>\n    <Column field="name" header="Name" :expander="true"></Column>\n    <Column v-for="col of columns" :field="col.field" :header="col.header" :key="col.field"></Column>\n</TreeTable>\n        '},sourceCode2:{basic:"\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            nodes: null,\n            columnOptions: null,\n            columns: null\n        }\n    },\n    nodeService: null,\n    created() {\n        this.nodeService = new NodeService();\n\n        this.columns = [\n            {field: 'size', header: 'Size'},\n            {field: 'type', header: 'Type'}\n        ];\n\n        this.columnOptions = [...this.columns];\n    },\n    mounted() {\n        this.nodeService.getTreeTableNodes().then(data => this.nodes = data);\n    }\n}\n        "}}}};var i=function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("DocSectionCode",{attrs:{code:e.sourceCode1}}),t("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)],1)],1)},a=[],c=l(s,i,a,!1,null,null);const d=c.exports,u={data(){return{nodes:null,columnOptions:null,columns:null}},nodeService:null,created(){this.nodeService=new r,this.columns=[{field:"size",header:"Size"},{field:"type",header:"Type"}],this.columnOptions=[...this.columns]},mounted(){this.nodeService.getTreeTableNodes().then(o=>this.nodes=o)},components:{TreeTableColToggleDoc:d}};var m=function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("TreeTable",{attrs:{value:e.nodes},scopedSlots:e._u([{key:"header",fn:function(){return[t("div",{staticStyle:{"text-align":"left"}},[t("MultiSelect",{staticStyle:{width:"20em"},attrs:{options:e.columnOptions,optionLabel:"header",placeholder:"Select Columns"},model:{value:e.columns,callback:function(n){e.columns=n},expression:"columns"}})],1)]},proxy:!0}])},[t("Column",{attrs:{field:"name",header:"Name",expander:!0}}),e._l(e.columns,function(n){return t("Column",{key:n.field,attrs:{field:n.field,header:n.header}})})],2)],1)]),t("TreeTableColToggleDoc")],1)},p=[function(){var o=this,e=o._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[o._v("TreeTable "),e("span",[o._v("Column Toggle")])]),e("p",[o._v("MultiSelect component can be used to implement column toggle functionality.")])])])}],f=l(u,m,p,!1,null,null);const b=f.exports;export{b as default};
//# sourceMappingURL=TreeTableColToggleDemo-4zEhXdaM.js.map
