!function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function n(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?t(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):t(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(t,n,o){var i;return i=function(t,n){if("object"!=e(t)||!t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var i=o.call(t,n||"default");if("object"!=e(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(t)}(n,"string"),(n="symbol"==e(i)?i:i+"")in t?Object.defineProperty(t,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[n]=o,t}System.register(["./NodeService-legacy-DWh9huOt.js","./app.component-legacy-Dyxh1RLY.js","./app.fullcalendar-legacy-BjBSiNq4.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-NUaqKLPR.js"],(function(e,t){"use strict";var o,i;return{setters:[function(e){o=e.N},function(e){i=e.n},null,null,null],execute:function(){var t=document.createElement("style");t.textContent="button[data-v-bed121d6]{margin-right:.5rem}\n",document.head.appendChild(t);e("default",i({data:function(){return{loading:!1,nodes:null}},nodeService:null,created:function(){this.nodeService=new o},mounted:function(){var e=this;this.loading=!0,setTimeout((function(){e.nodes=e.initateNodes(),e.loading=!1}),2e3)},methods:{onNodeExpand:function(e){var t=this;e.children||(this.loading=!0,setTimeout((function(){var o=n({},e);o.children=[];for(var i=0;i<3;i++)o.children.push({key:e.key+"-"+i,label:"Lazy "+e.label+"-"+i});var r=n({},t.nodes);r[parseInt(e.key,10)]=o,t.nodes=r,t.loading=!1}),500))},initateNodes:function(){return[{key:"0",label:"Node 0",leaf:!1},{key:"1",label:"Node 1",leaf:!1},{key:"2",label:"Node 2",leaf:!1}]}}},(function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("Tree",{attrs:{value:e.nodes,loading:e.loading},on:{"node-expand":e.onNodeExpand}})],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v(' <Tree :value="nodes" @node-expand="onNodeExpand" :loading="loading"></Tree> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import NodeService from '../../service/NodeService'; export default { data() { return { loading: false, nodes: null } }, nodeService: null, created() { this.nodeService = new NodeService(); }, mounted() { this.loading = true; setTimeout(() => { this.nodes = this.initateNodes(); this.loading = false; }, 2000); }, methods: { onNodeExpand(node) { if (!node.children) { this.loading = true; setTimeout(() => { let _node = {...node}; _node.children = []; for (let i = 0; i < 3; i++) { _node.children.push({ key: node.key + '-' + i, label: 'Lazy ' + node.label + '-' + i }); } let _nodes = {...this.nodes} _nodes[parseInt(node.key, 10)] = _node; this.nodes = _nodes; this.loading = false; }, 500); } }, initateNodes() { return [{ key: '0', label: 'Node 0', leaf: false }, { key: '1', label: 'Node 1', leaf: false }, { key: '2', label: 'Node 2', leaf: false }]; } } } ")])],1)],1)],1)])}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[e._v("Tree "),t("span",[e._v("Lazy")])]),t("p",[e._v(" Lazy loading is handy when dealing with huge datasets. This example imitates a lazy loading case with timeouts. ")])])])}],!1,null,"bed121d6").exports)}}}))}();
//# sourceMappingURL=TreeLazyDemo-legacy-Chyt5VEb.js.map
