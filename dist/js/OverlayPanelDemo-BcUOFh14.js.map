{"version":3,"file":"OverlayPanelDemo-BcUOFh14.js","sources":["../../src/views/overlaypanel/OverlayPanelDemo.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>OverlayPanel</h1>\n                <p>OverlayPanel is a container component positioned as connected to its target.</p>\n            </div>\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <Button type=\"button\" icon=\"pi pi-search\" :label=\"selectedProduct ? selectedProduct.name : 'Select a Product'\" @click=\"toggle\" aria:haspopup=\"true\" aria-controls=\"overlay_panel\" />\n\n                <OverlayPanel ref=\"op\" appendTo=\"body\" :showCloseIcon=\"true\" id=\"overlay_panel\" style=\"width: 450px\">\n                    <DataTable :value=\"products\" :selection.sync=\"selectedProduct\" selectionMode=\"single\" :paginator=\"true\" :rows=\"5\" @row-select=\"onProductSelect\">\n                        <Column field=\"name\" header=\"Name\" sortable></Column>\n                        <Column header=\"Image\">\n                            <template #body=\"slotProps\">\n                                <img :src=\"$publicUrl('demo/images/product/' + slotProps.data.image)\" :alt=\"slotProps.data.image\" class=\"product-image\" />\n                            </template>\n                        </Column>\n                        <Column field=\"price\" header=\"Price\" sortable>\n                            <template #body=\"slotProps\">\n                                {{formatCurrency(slotProps.data.price)}}\n                            </template>\n                        </Column>\n                    </DataTable>\n                </OverlayPanel>\n            </div>\n        </div>\n\n        <OverlayPanelDoc/>\n    </div>\n</template>\n\n<script>\nimport ProductService from '../../service/ProductService'\nimport OverlayPanelDoc from './OverlayPanelDoc.vue'\n\nexport default {\n  data() {\n    return {\n      products: null,\n      selectedProduct: null\n    }\n  },\n  productService: null,\n  created() {\n    this.productService = new ProductService()\n  },\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data)\n  },\n  methods: {\n    toggle(event) {\n      this.$refs.op.toggle(event)\n    },\n    formatCurrency(value) {\n      return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'})\n    },\n    onProductSelect(event) {\n      this.$refs.op.hide()\n      this.$toast.add({severity:'info', summary: 'Product Selected', detail: event.data.name, life: 3000})\n    }\n  },\n  components: {\n    'OverlayPanelDoc': OverlayPanelDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n    min-width: 15rem;\n}\n\n.product-image {\n    width: 50px;\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\n}\n</style>\n"],"names":["_sfc_main","ProductService","data","event","value","OverlayPanelDoc"],"mappings":"qrMAuCAA,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,KACA,gBAAA,IACA,CACA,EACA,eAAA,KACA,SAAA,CACA,KAAA,eAAA,IAAAC,CACA,EACA,SAAA,CACA,KAAA,eAAA,mBAAA,KAAAC,GAAA,KAAA,SAAAA,CAAA,CACA,EACA,QAAA,CACA,OAAAC,EAAA,CACA,KAAA,MAAA,GAAA,OAAAA,CAAA,CACA,EACA,eAAAC,EAAA,CACA,OAAAA,EAAA,eAAA,QAAA,CAAA,MAAA,WAAA,SAAA,KAAA,CAAA,CACA,EACA,gBAAAD,EAAA,CACA,KAAA,MAAA,GAAA,KAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,mBAAA,OAAAA,EAAA,KAAA,KAAA,KAAA,GAAA,CAAA,CACA,CACA,EACA,WAAA,CACA,gBAAAE,CACA,CACA"}