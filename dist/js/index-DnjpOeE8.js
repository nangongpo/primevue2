import{n as o}from"./app.component-CxwrbeA3.js";import"./resize-observer-polyfill-B1PUzC5B.js";import"./app.fullcalendar-DqAsc8Hg.js";import"./preact-CNwUjBXN.js";import"./app.core-fp3qH1H1.js";const i={name:"Documentation",data(){return{importCode:{basic:"\nimport FileUpload from 'primevue2/fileupload';\n        "},baseCode:{basic:'\n<FileUpload name="demo[]" url="./upload" />\n        '},multipleUploadsCode:{basic:'\n<FileUpload name="demo[]" url="./upload" :multiple="true" />\n        '},basicUICode:{basic:'\n<FileUpload mode="basic" name="demo[]" url="./upload" />\n        '},autoUploadsCode:{basic:'\n<FileUpload mode="basic" name="demo[]" url="./upload" :auto="true" />\n        '},fileTypesCode:{basic:'\n<FileUpload mode="basic" name="demo[]" url="./upload" accept="image/*" />\n        '},fileSizeAndFileLimitCode:{basic:'\n<FileUpload name="demo[]" url="./upload" :maxFileSize="1000000" :fileLimit="3" />\n        '},customUploadCode:{basic:'\n<FileUpload name="demo[]" :customUpload="true" @uploader="myUploader" />\n        '},customUploadCode2:{basic:"\nmyUploader(event) {\n    //event.files == files to upload\n}\n        "},emptyTemplateCode:{basic:'\n<FileUpload name="demo[]" url="./upload" />\n    <template #empty>\n        <p>Drag and drop files to here to upload.</p>\n    </template>\n</FileUpload>\n        '}}}};var l=function(){var e=this,a=e._self._c;return a("div",[a("h5",[e._v("Import")]),a("DocSectionCode",{attrs:{code:e.importCode,importCode:""}}),a("h5",[e._v("Getting Started")]),e._m(0),a("DocSectionCode",{attrs:{code:e.baseCode}}),a("h5",[e._v("Multiple Uploads")]),e._m(1),a("DocSectionCode",{attrs:{code:e.multipleUploadsCode}}),a("h5",[e._v("Basic UI")]),a("p",[e._v("FileUpload basic mode provides a simpler UI as an alternative to advanced mode.")]),a("DocSectionCode",{attrs:{code:e.basicUICode}}),a("h5",[e._v("DragDrop")]),a("p",[e._v(" File selection can also be done by dragging and dropping from the filesystem to the content section of the component. ")]),a("h5",[e._v("Auto Uploads")]),e._m(2),a("DocSectionCode",{attrs:{code:e.autoUploadsCode}}),a("h5",[e._v("File Types")]),e._m(3),a("DocSectionCode",{attrs:{code:e.fileTypesCode}}),a("h5",[e._v("File Size and File Limit")]),e._m(4),a("DocSectionCode",{attrs:{code:e.fileSizeAndFileLimitCode}}),e._m(5),e._m(6),a("h5",[e._v("Request Customization")]),a("p",[e._v(" XHR request to upload the files can be customized using the before-upload callback that passes the xhr instance and FormData object as event parameters. ")]),a("h5",[e._v("Custom Upload")]),e._m(7),a("DocSectionCode",{attrs:{code:e.customUploadCode}}),a("DocSectionCode",{attrs:{code:e.customUploadCode2,importCode:""}}),a("h5",[e._v("Empty Template")]),a("p",[e._v("When there is no file selected, you may use the empty slot to display content.")]),a("DocSectionCode",{attrs:{code:e.emptyTemplateCode}}),a("h5",[e._v("Properties")]),a("div",{staticClass:"doc-tablewrapper"},[a("table",{staticClass:"doc-table"},[e._m(8),a("tbody",[e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17),e._m(18),e._m(19),e._m(20),e._m(21),e._m(22),a("tr",[a("td",[e._v("chooseLabel")]),a("td",[e._v("string")]),a("td",[e._v("null")]),a("td",[e._v(" Label of the choose button. Defaults to PrimeVue "),a("router-link",{attrs:{to:"/locale"}},[e._v("Locale")]),e._v(" configuration. ")],1)]),a("tr",[a("td",[e._v("uploadLabel")]),a("td",[e._v("string")]),a("td",[e._v("Upload")]),a("td",[e._v(" Label of the upload button. Defaults to PrimeVue "),a("router-link",{attrs:{to:"/locale"}},[e._v("Locale")]),e._v(" configuration. ")],1)]),a("tr",[a("td",[e._v("cancelLabel")]),a("td",[e._v("string")]),a("td",[e._v("Cancel")]),a("td",[e._v(" Label of the cancel button. Defaults to PrimeVue "),a("router-link",{attrs:{to:"/locale"}},[e._v("Locale")]),e._v(" configuration. ")],1)]),e._m(23),e._m(24),e._m(25),e._m(26),e._m(27)])])]),a("h5",[e._v("Events")]),e._m(28),a("h5",[e._v("Slots")]),e._m(29),a("h5",[e._v("Styling")]),a("p",[e._v(" Following is the list of structural style classes, for theming classes visit "),a("router-link",{attrs:{to:"/theming"}},[e._v("theming")]),e._v(" page. ")],1),e._m(30),a("h5",[e._v("Dependencies")]),a("p",[e._v("None.")])],1)},s=[function(){var t=this,e=t._self._c;return e("p",[t._v(" FileUpload requires a "),e("i",[t._v("url")]),t._v(" property as the upload target and a "),e("i",[t._v("name")]),t._v(" to identify the files at backend. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" Only one file can be selected at a time by default, to allow selecting multiple files at once enable "),e("i",[t._v("multiple")]),t._v(" option. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" When "),e("i",[t._v("auto")]),t._v(" property is enabled, upload begins as soon as file selection is completed or a file is dropped on the drop area. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" Selectable file types can be restricted with "),e("i",[t._v("accept")]),t._v(" property, example below only allows images to be uploaded. Read more about other possible values "),e("a",{attrs:{href:"https://www.w3schools.com/tags/att_input_accept.asp"}},[t._v(" here")]),t._v(". ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" Maximium file size can be restricted using "),e("i",[t._v("maxFileSize")]),t._v(" property defined in bytes. Similarly "),e("i",[t._v("fileLimit")]),t._v(" is available to restrict the number of files to be uploaded. ")])},function(){var t=this,e=t._self._c;return e("p",[t._v(" In order to customize the default messages use "),e("i",[t._v("invalidFileSizeMessage")]),t._v(" and "),e("i",[t._v("invalidFileLimitMessage")]),t._v(" options where {0} placeholder refers to the filename and {1} the file size. ")])},function(){var t=this,e=t._self._c;return e("ul",[e("li",[t._v(" invalidFileSizeMessage: '{0}: Invalid file size, file size should be smaller than {1}.' ")]),e("li",[t._v("invalidFileLimitMessage: 'Maximum number of files exceeded, limit is {0} at most.'")])])},function(){var t=this,e=t._self._c;return e("p",[t._v(" Uploading implementation can be overridden by enabling "),e("i",[t._v("customMode")]),t._v(" property and defining a custom upload handler event. ")])},function(){var t=this,e=t._self._c;return e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Type")]),e("th",[t._v("Default")]),e("th",[t._v("Description")])])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("name")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Name of the request parameter to identify the files at backend.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("url")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Remote url to upload the files.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("mode")]),e("td",[t._v("string")]),e("td",[t._v("advanced")]),e("td",[t._v('Defines the UI of the component, possible values are "advanced" and "basic".')])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("multiple")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("Used to select multiple files at once from file dialog.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("accept")]),e("td",[t._v("string")]),e("td",[t._v("false")]),e("td",[t._v('Pattern to restrict the allowed file types such as "image/*".')])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("disabled")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("Disables the upload functionality.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("auto")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("When enabled, upload begins automatically after selection is completed.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("maxFileSize")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Maximum file size allowed in bytes.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("invalidFileSizeMessage")]),e("td",[t._v("string")]),e("td",[t._v('"{0}: Invalid file size, file size should be smaller than {1}."')]),e("td",[t._v("Message of the invalid fize size.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("invalidFileTypeMessage")]),e("td",[t._v("string")]),e("td",[t._v('"{0}: Invalid file type, allowed file types: {1}".')]),e("td",[t._v("Message of the invalid file type.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("invalidFileLimitMessage")]),e("td",[t._v("string")]),e("td",[t._v("Maximum number of files exceeded, limit is {0} at most.")]),e("td",[t._v("Message to display when number of files to be uploaded exceeeds the limit.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("fileLimit")]),e("td",[t._v("number")]),e("td",[t._v("null")]),e("td",[t._v("Maximum number of files that can be uploaded.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("withCredentials")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v(" Cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates. ")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("previewWidth")]),e("td",[t._v("number")]),e("td",[t._v("50")]),e("td",[t._v("Width of the image thumbnail in pixels.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("customUpload")]),e("td",[t._v("boolean")]),e("td",[t._v("false")]),e("td",[t._v("Whether to use the default upload or a manual implementation defined in uploadHandler callback.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("showUploadButton")]),e("td",[t._v("boolean")]),e("td",[t._v("true")]),e("td",[t._v("Whether to show the upload button.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("showCancelButton")]),e("td",[t._v("boolean")]),e("td",[t._v("true")]),e("td",[t._v("Whether to show the cancel button.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("buttonStyle")]),e("td",[t._v("any")]),e("td",[t._v("null")]),e("td",[t._v("Inline style of the component.")])])},function(){var t=this,e=t._self._c;return e("tr",[e("td",[t._v("buttonClass")]),e("td",[t._v("string")]),e("td",[t._v("null")]),e("td",[t._v("Style class of the component.")])])},function(){var t=this,e=t._self._c;return e("div",{attrs:{classe:"doc-tablewrapper"}},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")]),e("th",[t._v("Description")])])]),e("tbody",[e("tr",[e("td",[t._v("before-upload")]),e("td",[t._v(" event.xhr: XmlHttpRequest instance. "),e("br"),t._v(" event.formData: FormData object. ")]),e("td",[t._v(" Callback to invoke before file upload begins to customize the request such as post parameters before the files. ")])]),e("tr",[e("td",[t._v("before-send")]),e("td",[t._v(" event.xhr: XmlHttpRequest instance. "),e("br"),t._v(" event.formData: FormData object. ")]),e("td",[t._v("Callback to invoke before file send begins to customize the request such as adding headers.")])]),e("tr",[e("td",[t._v("upload")]),e("td",[t._v(" event.xhr: XmlHttpRequest instance."),e("br"),t._v(" event.files: Uploaded files. ")]),e("td",[t._v("Callback to invoke when file upload is complete.")])]),e("tr",[e("td",[t._v("error")]),e("td",[t._v(" event.xhr: XmlHttpRequest instance."),e("br"),t._v(" event.files: Files that are not uploaded. ")]),e("td",[t._v("Callback to invoke if file upload fails.")])]),e("tr",[e("td",[t._v("clear")]),e("td",[t._v("-.")]),e("td",[t._v("Callback to invoke when files in queue are removed without uploading.")])]),e("tr",[e("td",[t._v("select")]),e("td",[t._v(" event.originalEvent: Original browser event. "),e("br"),t._v(" event.files: List of selected files. ")]),e("td",[t._v("Callback to invoke when file upload is complete.")])]),e("tr",[e("td",[t._v("progress")]),e("td",[t._v(" event.originalEvent: Original browser event. "),e("br"),t._v(" event.progress: Calculated progress value. ")]),e("td",[t._v("Callback to invoke when files are selected.")])]),e("tr",[e("td",[t._v("uploader")]),e("td",[t._v("event.files: List of selected files.")]),e("td",[t._v("Callback to invoke to implement a custom upload.")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Parameters")])])]),e("tbody",[e("tr",[e("td",[t._v("empty")]),e("td",[t._v("-")])])])])])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"doc-tablewrapper"},[e("table",{staticClass:"doc-table"},[e("thead",[e("tr",[e("th",[t._v("Name")]),e("th",[t._v("Element")])])]),e("tbody",[e("tr",[e("td",[t._v("p-fileupload")]),e("td",[t._v("Container element.")])]),e("tr",[e("td",[t._v("p-fileupload-buttonbar")]),e("td",[t._v("Header containing the buttons.")])]),e("tr",[e("td",[t._v("p-fileupload-content")]),e("td",[t._v("Content section.")])])])])])}],n=o(i,l,s,!1,null,null);const d=n.exports,r={name:"SourceCode",data(){return{sourceCode1:{basic:'\n<h3>Advanced</h3>\n<FileUpload name="demo[]" url="./upload.php" @upload="onUpload" :multiple="true" accept="image/*" :maxFileSize="1000000">\n    <template #empty>\n        <p>Drag and drop files to here to upload.</p>\n    </template>\n</FileUpload>\n\n<h3>Basic</h3>\n<FileUpload mode="basic" name="demo[]" url="./upload.php" accept="image/*" :maxFileSize="1000000" @upload="onUpload" />\n\n<h3>Basic with Auto</h3>\n<FileUpload mode="basic" name="demo[]" url="./upload.php" accept="image/*" :maxFileSize="1000000" @upload="onUpload" :auto="true" chooseLabel="Browse" />\n        '},sourceCode2:{basic:"\nexport default {\n	methods: {\n		onUpload() {\n			this.$toast.add({severity: 'info', summary: 'Success', detail: 'File Uploaded', life: 3000});\n		}\n	}\n}\n        "}}}};var _=function(){var e=this,a=e._self._c;return a("div",[e._m(0),a("DocSectionCode",{attrs:{code:e.sourceCode1}}),a("DocSectionCode",{attrs:{code:e.sourceCode2,importCode:""}})],1)},c=[function(){var t=this,e=t._self._c;return e("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/fileupload",target:"_blank",rel:"noopener noreferrer"}},[e("span",[t._v("View on GitHub")])])}],v=o(r,_,c,!1,null,null);const u=v.exports,m={components:{Documentation:d,SourceCode:u}};var p=function(){var e=this,a=e._self._c;return a("div",{staticClass:"content-section documentation"},[a("TabView",[a("TabPanel",{attrs:{header:"Documentation"}},[a("Documentation")],1),a("TabPanel",{attrs:{header:"Source"}},[a("SourceCode")],1)],1)],1)},f=[],h=o(m,p,f,!1,null,null);const b=h.exports,g={methods:{onUpload(){this.$toast.add({severity:"info",summary:"Success",detail:"File Uploaded",life:3e3})}},components:{FileUploadDoc:b}};var C=function(){var e=this,a=e._self._c;return a("div",[e._m(0),a("div",{staticClass:"content-section implementation"},[a("div",{staticClass:"card"},[a("h5",[e._v("Advanced")]),a("FileUpload",{attrs:{name:"demo[]",url:"./upload.php",multiple:!0,accept:"image/*",maxFileSize:1e6},on:{upload:e.onUpload},scopedSlots:e._u([{key:"empty",fn:function(){return[a("p",[e._v("Drag and drop files to here to upload.")])]},proxy:!0}])}),a("h5",[e._v("Basic")]),a("FileUpload",{attrs:{mode:"basic",name:"demo[]",url:"./upload.php",accept:"image/*",maxFileSize:1e6},on:{upload:e.onUpload}}),a("h5",[e._v("Basic with Auto")]),a("FileUpload",{attrs:{mode:"basic",name:"demo[]",url:"./upload.php",accept:"image/*",maxFileSize:1e6,auto:!0,chooseLabel:"Browse"},on:{upload:e.onUpload}})],1)]),a("FileUploadDoc")],1)},U=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[t._v("FileUpload")]),e("p",[t._v(" FileUpload is an advanced uploader with dragdrop support, multi file uploads, auto uploading, progress tracking and validations. ")])])])}],y=o(g,C,U,!1,null,"298790d2");const z=y.exports;export{z as default};
//# sourceMappingURL=index-DnjpOeE8.js.map
