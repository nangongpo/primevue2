import{N as a}from"./NodeService-DGU-G-ef.js";import{n as o}from"./app.component-D2FSMXVj.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const l={data(){return{nodes:null}},nodeService:null,created(){this.nodeService=new a},mounted(){this.nodeService.getTreeTableNodes().then(r=>this.nodes=r)}};var n=function(){var t=this,e=t._self._c;return e("div",[t._m(0),e("div",{staticClass:"content-section implementation"},[e("div",{staticClass:"card"},[e("h5",[t._v("Single Column Sorting")]),e("TreeTable",{attrs:{value:t.nodes,sortMode:"single"}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0,sortable:!0}}),e("Column",{attrs:{field:"size",header:"Size",sortable:!0}}),e("Column",{attrs:{field:"type",header:"Type",sortable:!0}})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Multiple Column Sorting")]),e("TreeTable",{attrs:{value:t.nodes,sortMode:"multiple"}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0,sortable:!0}}),e("Column",{attrs:{field:"size",header:"Size",sortable:!0}}),e("Column",{attrs:{field:"type",header:"Type",sortable:!0}})],1)],1),e("div",{staticClass:"card"},[e("h5",[t._v("Removable Sort")]),e("TreeTable",{attrs:{value:t.nodes,sortMode:"single",removableSort:""}},[e("Column",{attrs:{field:"name",header:"Name",expander:!0,sortable:!0}}),e("Column",{attrs:{field:"size",header:"Size",sortable:!0}}),e("Column",{attrs:{field:"type",header:"Type",sortable:!0}})],1)],1)]),e("div",{staticClass:"content-section documentation"},[e("TabView",[e("TabPanel",{attrs:{header:"Source"}},[e("CodeHighlight",[[t._v(' <h3>Single Column Sorting</h3> <TreeTable :value="nodes" sortMode="single"> <Column field="name" header="Name" :expander="true" :sortable="true"></Column> <Column field="size" header="Size" :sortable="true"></Column> <Column field="type" header="Type" :sortable="true"></Column> </TreeTable> <h3>Multiple Column Sorting</h3> <TreeTable :value="nodes" sortMode="multiple"> <Column field="name" header="Name" :expander="true" :sortable="true"></Column> <Column field="size" header="Size" :sortable="true"></Column> <Column field="type" header="Type" :sortable="true"></Column> </TreeTable> <h3>Removable Sort</h3> <TreeTable :value="nodes" sortMode="single" removableSort> <Column field="name" header="Name" :expander="true" :sortable="true"></Column> <Column field="size" header="Size" :sortable="true"></Column> <Column field="type" header="Type" :sortable="true"></Column> </TreeTable> ')]],2),e("CodeHighlight",{attrs:{lang:"javascript"}},[t._v(" import NodeService from '../../service/NodeService'; export default { data() { return { nodes: null } }, nodeService: null, created() { this.nodeService = new NodeService(); }, mounted() { this.nodeService.getTreeTableNodes().then(data => this.nodes = data); } } ")])],1)],1)],1)])},s=[function(){var r=this,t=r._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[r._v("TreeTable "),t("span",[r._v("Sort")])]),t("p",[r._v("TreeTable supports both single column and multiple column sorting..")])])])}],i=o(l,n,s,!1,null,null);const h=i.exports;export{h as default};
//# sourceMappingURL=TreeTableSortDemo-xDDpcDc8.js.map
