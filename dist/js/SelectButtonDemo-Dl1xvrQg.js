import{n as a}from"./app.component-2M6wTQPG.js";import"./app.fullcalendar-CKwQu0km.js";import"./preact-CNwUjBXN.js";import"./app.core-Bxt8ZFo4.js";const i={};var l=function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Documentation"}},[t("h5",[e._v("Import")]),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import SelectButton from 'primevue2/selectbutton'; ")]),t("h5",[e._v("Getting Started")]),t("p",[e._v("SelectButton requires a value to bind and a collection of arbitrary objects along with the "),t("i",[e._v("optionLabel")]),e._v(" property to specify the label property of the option.")]),t("CodeHighlight",[e._v(' <SelectButton v-model="selectedCity" :options="cities" optionLabel="name" /> ')]),t("CodeHighlight",{attrs:{lang:"js"}},[e._v(" export default { data() { return { selectedCity: null, cities: [ {name: 'London', code: 'LND'}, {name: 'Paris', code: 'PRS'}, {name: 'Rome', code: 'RM'} ] } } } ")]),t("h5",[e._v("Multiple")]),t("p",[e._v("SelectButton allows selecting only one item by default and setting "),t("i",[e._v("multiple")]),e._v(" option enables choosing more than one item. In multiple case, model property should be an array.")]),t("CodeHighlight",[e._v(' <SelectButton v-model="selectedCity" :options="cities" optionLabel="brand" :multiple="true" /> ')]),t("h5",[e._v("Templating")]),t("p",[e._v("Label of an option is used as the display text of an item by default, for custom content support define an "),t("i",[e._v("option")]),e._v(" template that gets the option instance as a parameter.")]),t("CodeHighlight",[[e._v(' <SelectButton v-model="selectedCar" :options="cars" optionLabel="brand"> <template #option="slotProps"> <div class="car-option"> <img :alt="slotProps.option.brand" :src="$publicUrl(\'demo/images/car/\' + slotProps.option.brand + \'.png\')" /> <div>{{slotProps.option.brand}}</div> </div> </template> </SelectButton> ')]],2),t("h5",[e._v("Properties")]),t("p",[e._v("Any property as style and class are passed to the main container element. Following are the additional properties to configure the component.")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Type")]),t("th",[e._v("Default")]),t("th",[e._v("Description")])])]),t("tbody",[t("tr",[t("td",[e._v("value")]),t("td",[e._v("any")]),t("td",[e._v("null")]),t("td",[e._v("Value of the component.")])]),t("tr",[t("td",[e._v("options")]),t("td",[e._v("array")]),t("td",[e._v("null")]),t("td",[e._v("An array of selectitems to display as the available options.")])]),t("tr",[t("td",[e._v("optionLabel")]),t("td",[e._v("string | function")]),t("td",[e._v("null")]),t("td",[e._v("Property name or getter function to use as the label of an option.")])]),t("tr",[t("td",[e._v("optionValue")]),t("td",[e._v("string | function")]),t("td",[e._v("null")]),t("td",[e._v("Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")])]),t("tr",[t("td",[e._v("optionDisabled")]),t("td",[e._v("string | function")]),t("td",[e._v("null")]),t("td",[e._v("Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")])]),t("tr",[t("td",[e._v("multiple")]),t("td",[e._v("boolean")]),t("td",[e._v("false")]),t("td",[e._v("When specified, allows selecting multiple values.")])]),t("tr",[t("td",[e._v("disabled")]),t("td",[e._v("boolean")]),t("td",[e._v("false")]),t("td",[e._v("When present, it specifies that the element should be disabled.")])]),t("tr",[t("td",[e._v("dataKey")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("A property to uniquely identify an option.")])]),t("tr",[t("td",[e._v("ariaLabelledBy")]),t("td",[e._v("string")]),t("td",[e._v("null")]),t("td",[e._v("Establishes relationships between the component and label(s) where its value should be one or more element IDs.")])])])])]),t("h5",[e._v("Events")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Parameters")]),t("th",[e._v("Description")])])]),t("tbody",[t("tr",[t("td",[e._v("input")]),t("td",[e._v("event: Single value or an array of values that are selected.")]),t("td",[e._v("Callback to invoke on value change.")])]),t("tr",[t("td",[e._v("focus")]),t("td",[e._v("event: Browser event")]),t("td",[e._v("Callback to invoke on focus.")])]),t("tr",[t("td",[e._v("blur")]),t("td",[e._v("event: Browser event")]),t("td",[e._v("Callback to invoke on blur.")])])])])]),t("h5",[e._v("Slots")]),t("div",{staticClass:"doc-tablewrapper"},[t("table",{staticClass:"doc-table"},[t("thead",[t("tr",[t("th",[e._v("Name")]),t("th",[e._v("Parameters")])])]),t("tbody",[t("tr",[t("td",[e._v("option")]),t("td",[e._v("option: Option instance"),t("br"),e._v(" index: Index of the option")])])])])]),t("h5",[e._v("Dependencies")]),t("p",[e._v("None.")])],1),t("TabPanel",{attrs:{header:"Source"}},[t("a",{staticClass:"btn-viewsource",attrs:{href:"https://github.com/nangongpo/primevue2/tree/main/src/views/selectbutton",target:"_blank",rel:"noopener noreferrer"}},[t("span",[e._v("View on GitHub")])]),t("CodeHighlight",[[e._v(' <h5>Single Selection</h5> <SelectButton v-model="value1" :options="options" /> <h5>Multiple Selection</h5> <SelectButton v-model="value2" :options="paymentOptions" optionLabel="name" multiple /> <h5>Custom Content</h5> <SelectButton v-model="value3" :options="justifyOptions" dataKey="value"> <template #option="slotProps"> <i :class="slotProps.option.icon"></i> </template> </SelectButton> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" export default { data() { return { value1: 'Off', value2: null, value3: null, options: ['Off', 'On'], paymentOptions: [ {name: 'Option 1', value: 1}, {name: 'Option 2', value: 2}, {name: 'Option 3', value: 3} ], justifyOptions: [ {icon: 'pi pi-align-left', value: 'left'}, {icon: 'pi pi-align-right', value: 'Right'}, {icon: 'pi pi-align-center', value: 'Center'}, {icon: 'pi pi-align-justify', value: 'Justify'}] } } } ")])],1)],1)],1)},s=[],r=a(i,l,s,!1,null,null);const p=r.exports,v={data(){return{value1:"Off",value2:null,value3:null,options:["Off","On"],paymentOptions:[{name:"Option 1",value:1},{name:"Option 2",value:2},{name:"Option 3",value:3}],justifyOptions:[{icon:"pi pi-align-left",value:"left"},{icon:"pi pi-align-right",value:"Right"},{icon:"pi pi-align-center",value:"Center"},{icon:"pi pi-align-justify",value:"Justify"}]}},components:{SelectButtonDoc:p}};var c=function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("h5",[e._v("Single Selection")]),t("SelectButton",{attrs:{options:e.options},model:{value:e.value1,callback:function(o){e.value1=o},expression:"value1"}}),t("h5",[e._v("Multiple Selection")]),t("SelectButton",{attrs:{options:e.paymentOptions,optionLabel:"name",multiple:""},model:{value:e.value2,callback:function(o){e.value2=o},expression:"value2"}}),t("h5",[e._v("Custom Content")]),t("SelectButton",{attrs:{options:e.justifyOptions,dataKey:"value"},scopedSlots:e._u([{key:"option",fn:function(o){return[t("i",{class:o.option.icon})]}}]),model:{value:e.value3,callback:function(o){e.value3=o},expression:"value3"}})],1)]),t("SelectButtonDoc")],1)},u=[function(){var n=this,e=n._self._c;return e("div",{staticClass:"content-section introduction"},[e("div",{staticClass:"feature-intro"},[e("h1",[n._v("SelectButton")]),e("p",[n._v("SelectButton is a form component to choose a value from a list of options using button elements.")])])])}],d=a(v,c,u,!1,null,null);const b=d.exports;export{b as default};
//# sourceMappingURL=SelectButtonDemo-Dl1xvrQg.js.map
