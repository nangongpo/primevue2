!function(){function e(e){return function(e){if(Array.isArray(e))return t(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"==typeof e)return t(e,n);var l=Object.prototype.toString.call(e).slice(8,-1);"Object"===l&&e.constructor&&(l=e.constructor.name);if("Map"===l||"Set"===l)return Array.from(e);if("Arguments"===l||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l))return t(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}System.register(["./NodeService-legacy-DWh9huOt.js","./app.component-legacy-BPrNxUCK.js","./app.fullcalendar-legacy-BjBSiNq4.js","./preact-legacy-D7Jvwh8t.js","./app.core-legacy-NUaqKLPR.js"],(function(t,n){"use strict";var l,o;return{setters:[function(e){l=e.N},function(e){o=e.n},null,null,null],execute:function(){t("default",o({data:function(){return{nodes:null,columnOptions:null,columns:null}},nodeService:null,created:function(){this.nodeService=new l,this.columns=[{field:"size",header:"Size"},{field:"type",header:"Type"}],this.columnOptions=e(this.columns)},mounted:function(){var e=this;this.nodeService.getTreeTableNodes().then((function(t){return e.nodes=t}))}},(function(){var e=this,t=e._self._c;return t("div",[e._m(0),t("div",{staticClass:"content-section implementation"},[t("div",{staticClass:"card"},[t("TreeTable",{attrs:{value:e.nodes},scopedSlots:e._u([{key:"header",fn:function(){return[t("div",{staticStyle:{"text-align":"left"}},[t("MultiSelect",{staticStyle:{width:"20em"},attrs:{options:e.columnOptions,optionLabel:"header",placeholder:"Select Columns"},model:{value:e.columns,callback:function(t){e.columns=t},expression:"columns"}})],1)]},proxy:!0}])},[t("Column",{attrs:{field:"name",header:"Name",expander:!0}}),e._l(e.columns,(function(e){return t("Column",{key:e.field,attrs:{field:e.field,header:e.header}})}))],2)],1)]),t("div",{staticClass:"content-section documentation"},[t("TabView",[t("TabPanel",{attrs:{header:"Source"}},[t("CodeHighlight",[[e._v(' <TreeTable :value="nodes"> <template #header> <div style="text-align:left"> <MultiSelect v-model="columns" :options="columnOptions" optionLabel="header" placeholder="Select Columns" style="width: 20em"/> </div> </template> <Column field="name" header="Name" :expander="true"></Column> <Column v-for="col of columns" :field="col.field" :header="col.header" :key="col.field"></Column> </TreeTable> ')]],2),t("CodeHighlight",{attrs:{lang:"javascript"}},[e._v(" import NodeService from '../../service/NodeService'; export default { data() { return { nodes: null, columnOptions: null, columns: null } }, nodeService: null, created() { this.nodeService = new NodeService(); this.columns = [ {field: 'size', header: 'Size'}, {field: 'type', header: 'Type'} ]; this.columnOptions = [...this.columns]; }, mounted() { this.nodeService.getTreeTableNodes().then(data => this.nodes = data); } } ")])],1)],1)],1)])}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content-section introduction"},[t("div",{staticClass:"feature-intro"},[t("h1",[e._v("TreeTable "),t("span",[e._v("Column Toggle")])]),t("p",[e._v("MultiSelect component can be used to implement column toggle functionality.")])])])}],!1,null,null).exports)}}}))}();
//# sourceMappingURL=TreeTableColToggleDemo-legacy-DhyphG3h.js.map
