{"version":3,"file":"ToastDemo-CtVGKNQj.js","sources":["../../src/doc/toast/Documentation.vue","../../src/doc/toast/SourceCode.vue","../../src/doc/toast/index.vue","../../src/views/toast/ToastDemo.vue"],"sourcesContent":["<template>\n  <div>\n    <h5>ToastService</h5>\n    <p>Toast messages are dynamically created using a <i>ToastService</i> that needs to be installed globally before the\n      application\n      instance is created.</p>\n    <DocSectionCode :code=\"toastServiceCode\" importCode />\n\n    <h5>Import</h5>\n    <DocSectionCode :code=\"importCode\" importCode />\n\n    <h5>Getting Started</h5>\n    <p>Ideal location of a Toast is the main application template so that it can be used by any component within the\n      application.</p>\n\n    <p>A single message is represented by the Message interface in PrimeVue that defines various properties such as\n      severity,\n      summary and detail. Messages are displayed by using the <i>add</i> method of the <b>$toast</b> property of the\n      application.</p>\n    <DocSectionCode :code=\"baseCode\" importCode />\n\n    <h5>Message API</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>severity</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Severity of the message.</td>\n          </tr>\n          <tr>\n            <td>summary</td>\n            <td>element</td>\n            <td>null</td>\n            <td>Summary content of the message.</td>\n          </tr>\n          <tr>\n            <td>detail</td>\n            <td>element</td>\n            <td>null</td>\n            <td>Detail content of the message.</td>\n          </tr>\n          <tr>\n            <td>closable</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether the message can be closed manually using the close icon.</td>\n          </tr>\n          <tr>\n            <td>life</td>\n            <td>number</td>\n            <td>null</td>\n            <td>Delay in milliseconds to close the message automatically.</td>\n          </tr>\n          <tr>\n            <td>group</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Key of the Toast to display the message.</td>\n          </tr>\n          <tr>\n            <td>styleClass</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Style class of the message.</td>\n          </tr>\n          <tr>\n            <td>contentStyleClass</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Style class of the content.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>MessageService API</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>add</td>\n            <td>message: Message instance</td>\n            <td>Displays the message in a suitable Toast component.</td>\n          </tr>\n          <tr>\n            <td>removeGroup</td>\n            <td>group: Name of the message group</td>\n            <td>Clears the messages that belongs to the group.</td>\n          </tr>\n          <tr>\n            <td>removeAllGroup</td>\n            <td>-</td>\n            <td>Clears all the messages.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Severities</h5>\n    <p>There are four possible values for the severity of a message. Info is the default.</p>\n\n    <ul>\n      <li>success</li>\n      <li>info</li>\n      <li>warn</li>\n      <li>error</li>\n    </ul>\n\n    <h5>Position</h5>\n    <p>There are four positions available for the toast container defined by the <i>position</i> property that defaults\n      to \"top-right\". Other\n      valid values are \"top-left\", \"top-center\", \"bottom-left\", \"botton-center\", \"bottom-right\" and \"center\".\n    </p>\n    <DocSectionCode :code=\"positionCode\" />\n\n    <h5>Groups</h5>\n    <p>A message can be targeted to a specific Toast component if their group properties match. Messages without a group\n      are forwarded to the default Toast component that does not have a group defined.\n    </p>\n    <DocSectionCode :code=\"groupsCode\" />\n    <DocSectionCode :code=\"groupsCode2\" importCode />\n\n\t\t\t\t<h5>Clearing Messages</h5>\n\t\t\t\t<p><i>removeGroup(group)</i> clears the messages for a specific Toast whereas <i>removeAllGroups()</i> method clears all messages.</p>\n    <DocSectionCode :code=\"clearingMessagesCode\" importCode />\n\n    <h5>Templating</h5>\n    <p>Templating allows customizing the content where the message instance is available as the implicit variable.</p>\n    <DocSectionCode :code=\"templatingCode\" />\n\n    <h5>Responsive</h5>\n    <p>Toast styling can be adjusted per screen size with the <i>breakpoints</i> option. The value of <i>breakpoints</i>\n      should be an object literal whose keys are the maximum screen sizes and values are the styles per screen. In\n      example below, width of the toast messages cover the whole page on screens whose widths is smaller than 921px.</p>\n    <DocSectionCode :code=\"responsiveCode\" />\n\n    <h5>Constants</h5>\n    <p>ToastSeverity constants API is provided to easily choose a severity of the message with typescript.</p>\n    <DocSectionCode :code=\"constantsCode\" importCode />\n\n    <h5>Properties</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>group</td>\n            <td>string</td>\n            <td>null</td>\n            <td>Unique identifier of a message group.</td>\n          </tr>\n          <tr>\n            <td>position</td>\n            <td>string</td>\n            <td>top-right</td>\n            <td>Position of the toast in viewport.</td>\n          </tr>\n          <tr>\n            <td>autoZIndex</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Whether to automatically manage layering.</td>\n          </tr>\n          <tr>\n            <td>baseZIndex</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Base zIndex value to use in layering.</td>\n          </tr>\n          <tr>\n            <td>breakpoints</td>\n            <td>object</td>\n            <td>null</td>\n            <td>Object literal to define styles per screen size.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Slots</h5>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Parameters</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>message</td>\n            <td>-</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Styling</h5>\n    <p>Following is the list of structural style classes, for theming classes visit <router-link\n        to=\"/theming\">theming</router-link> page.</p>\n    <div class=\"doc-tablewrapper\">\n      <table class=\"doc-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Element</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>p-toast</td>\n            <td>Main container element.</td>\n          </tr>\n          <tr>\n            <td>p-toast-message</td>\n            <td>Container of a message item.</td>\n          </tr>\n          <tr>\n            <td>p-toast-icon-close</td>\n            <td>Close icon of a message.</td>\n          </tr>\n          <tr>\n            <td>p-toast-icon</td>\n            <td>Severity icon.</td>\n          </tr>\n          <tr>\n            <td>p-toast-message-content</td>\n            <td>Container of message texts.</td>\n          </tr>\n          <tr>\n            <td>p-toast-summary</td>\n            <td>Summary of the message.</td>\n          </tr>\n          <tr>\n            <td>p-toast-detail</td>\n            <td>Detail of the message.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <h5>Dependencies</h5>\n    <p>None.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Documentation',\n  data() {\n    return {\n      toastServiceCode: {\n        basic: `\nimport ToastService from 'primevue2/toastservice';\nVue.use(ToastService);\n\n//example application instance\nnew Vue({\n    router,\n    render: h => h(App)\n}).$mount('#app');\n        `\n      },\n      importCode: {\n        basic: `\nimport Toast from 'primevue2/toast';\n        `\n      },\n      baseCode: {\n        basic: `\nthis.$toast.add({severity:'success', summary: 'Success Message', detail:'Order submitted', life: 3000});\n        `\n      },\n      positionCode: {\n        basic: `\n<Toast />\n<Toast position=\"top-left\" />\n<Toast position=\"top-center\" />\n<Toast position=\"top-right\" />\n<Toast position=\"center\" />\n<Toast position=\"bottom-left\" />\n<Toast position=\"bottom-center\" />\n<Toast position=\"bottom-right\" />\n        `\n      },\n      groupsCode: {\n        basic: `\n<Toast />\n<Toast group=\"mykey\" />\n        `\n      },\n      groupsCode2: {\n        basic: `\nthis.$toast.add({severity:'success', summary: 'Default Message'});\nthis.$toast.add({severity:'success', summary: 'Specific Message', group: 'mykey'});\n        `\n      },\n      clearingMessagesCode: {\n        basic: `\nthis.$toast.removeAllGroups();\n        `\n      },\n      templatingCode: {\n        basic: `\n<Toast position=\"bottom-center\" group=\"bc\">\n    <template #message=\"slotProps\">\n        <div class=\"flex flex-column\">\n            <div class=\"text-center\">\n                <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 3rem\"></i>\n                <h4>{{slotProps.message.summary}}</h4>\n                <p>{{slotProps.message.detail}}</p>\n            </div>\n            <div class=\"grid p-fluid\">\n                <div class=\"col-6\">\n                    <Button class=\"p-button-success\" label=\"Yes\" @click=\"onConfirm\" />\n                </div>\n                <div class=\"col-6\">\n                    <Button class=\"p-button-secondary\" label=\"No\" @click=\"onReject\" />\n                </div>\n            </div>\n        </div>\n    </template>\n</Toast>\n        `\n      },\n      responsiveCode: {\n        basic: `\n<Toast :breakpoints=\"{'920px': {width: '100%', right: '0', left: '0'}}\"></Toast>\n        `\n      },\n      constantsCode: {\n        basic: `\nimport {ToastSeverity} from 'primevue2/api';\n\nexport default {\n    methods: {\n        showInfo() {\n            this.$toast.add({severity: ToastSeverity.INFO, summary: 'Info Message', detail:'Message Content', life: 3000});\n        }\n    }\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    <a\n      href=\"https://github.com/nangongpo/primevue2/tree/main/src/views/toast\"\n      class=\"btn-viewsource\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\">\n      <span>View on GitHub</span>\n    </a>\n\n    <DocSectionCode :code=\"sourceCode1\" />\n    <DocSectionCode :code=\"sourceCode2\" importCode />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SourceCode',\n  data() {\n    return {\n      sourceCode1: {\n        basic: `\n<h5>Severities</h5>\n<Button label=\"Success\" class=\"p-button-success\" @click=\"showSuccess\" />\n<Button label=\"Info\" class=\"p-button-info\" @click=\"showInfo\" />\n<Button label=\"Warn\" class=\"p-button-warning\" @click=\"showWarn\" />\n<Button label=\"Error\" class=\"p-button-danger\" @click=\"showError\" />\n\n<h5>Positions</h5>\n<Button label=\"Top Left\" class=\"mr-2\" @click=\"showTopLeft\" />\n<Button label=\"Bottom Left\" class=\"p-button-warning\" @click=\"showBottomLeft\" />\n<Button label=\"Bottom Right\" class=\"p-button-success\" @click=\"showBottomRight\" />\n\n<h5>Options</h5>\n<Button @click=\"showMultiple\" label=\"Multiple\" class=\"p-button-warning\" />\n<Button @click=\"showSticky\" label=\"Sticky\" />\n\n<h5>Remove All</h5>\n<Button @click=\"clear\" label=\"Clear\" />\n        `\n      },\n      sourceCode2: {\n        basic: `\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tmessages: [],\n\t\t}\n\t},\n\tmethods: {\n\t\tshowSuccess() {\n            this.$toast.add({severity:'success', summary: 'Success Message', detail:'Message Content', life: 3000});\n        },\n        showInfo() {\n            this.$toast.add({severity:'info', summary: 'Info Message', detail:'Message Content', life: 3000});\n        },\n        showWarn() {\n            this.$toast.add({severity:'warn', summary: 'Warn Message', detail:'Message Content', life: 3000});\n        },\n        showError() {\n            this.$toast.add({severity:'error', summary: 'Error Message', detail:'Message Content', life: 3000});\n        },\n        showTopLeft() {\n            this.$toast.add({severity: 'info', summary: 'Info Message', detail: 'Message Content', group: 'tl', life: 3000});\n        },\n        showBottomLeft() {\n            this.$toast.add({severity:'warn', summary: 'Warn Message', detail:'Message Content', group: 'bl', life: 3000});\n        },\n        showBottomRight() {\n            this.$toast.add({severity:'success', summary: 'Success Message', detail:'Message Content', group: 'br', life: 3000});\n        },\n        showSticky() {\n            this.$toast.add({severity: 'info', summary: 'Sticky Message', detail: 'Message Content'});\n        },\n        showMultiple() {\n            this.$toast.add({severity:'info', summary:'Message 1', detail:'Message 1 Content', life: 3000});\n            this.$toast.add({severity:'info', summary:'Message 2', detail:'Message 2 Content', life: 3000});\n            this.$toast.add({severity:'info', summary:'Message 3', detail:'Message 3 Content', life: 3000});\n        },\n        clear() {\n            this.$toast.removeAllGroups();\n        }\n\t}\n}\n        `\n      },\n    }\n  }\n}\n</script>\n","<template>\n    <div class=\"content-section documentation\">\n    <TabView>\n      <TabPanel header=\"Documentation\">\n        <Documentation />\n      </TabPanel>\n      <TabPanel header=\"Source\">\n        <SourceCode />\n      </TabPanel>\n    </TabView>\n  </div>\n</template>\n\n<script>\nimport Documentation from './Documentation.vue'\nimport SourceCode from './SourceCode.vue'\nexport default {\n  components: { Documentation, SourceCode }\n}\n</script>\n","<template>\n  <div>\n    <div class=\"content-section introduction\">\n      <div class=\"feature-intro\">\n        <h1>Toast</h1>\n        <p>Toast is used to display messages in an overlay.</p>\n      </div>\n    </div>\n\n    <div class=\"content-section implementation\">\n      <Toast position=\"bottom-center\" group=\"bc\">\n        <template #message=\"slotProps\">\n          <div class=\"flex flex-column\">\n            <div class=\"text-center\">\n              <i class=\"pi pi-exclamation-triangle\" style=\"font-size: 3rem\"></i>\n              <h4>{{ slotProps.message.summary }}</h4>\n              <p>{{ slotProps.message.detail }}</p>\n            </div>\n            <div class=\"grid p-fluid\">\n              <div class=\"col-6\">\n                <Button class=\"p-button-success\" label=\"Yes\" @click=\"onConfirm\"></Button>\n              </div>\n              <div class=\"col-6\">\n                <Button class=\"p-button-secondary\" label=\"No\" @click=\"onReject\"></Button>\n              </div>\n            </div>\n          </div>\n        </template>\n      </Toast>\n\n      <div class=\"card\">\n        <h5>Severities</h5>\n        <Button label=\"Success\" class=\"p-button-success\" @click=\"showSuccess\" />\n        <Button label=\"Info\" class=\"p-button-info\" @click=\"showInfo\" />\n        <Button label=\"Warn\" class=\"p-button-warning\" @click=\"showWarn\" />\n        <Button label=\"Error\" class=\"p-button-danger\" @click=\"showError\" />\n\n        <h5>Positions</h5>\n        <Button label=\"Top Left\" class=\"mr-2\" @click=\"showTopLeft\" />\n        <Button label=\"Bottom Left\" class=\"p-button-warning\" @click=\"showBottomLeft\" />\n        <Button label=\"Bottom Right\" class=\"p-button-success\" @click=\"showBottomRight\" />\n\n        <h5>Options</h5>\n        <Button @click=\"showMultiple\" label=\"Multiple\" class=\"p-button-warning\" />\n        <Button @click=\"showSticky\" label=\"Sticky\" />\n\n        <h5>Remove All</h5>\n        <Button @click=\"clear\" label=\"Clear\" />\n\n        <h5>Template</h5>\n        <Button @click=\"showTemplate\" label=\"Confirm\" />\n      </div>\n    </div>\n\n    <ToastDoc />\n  </div>\n</template>\n\n<script>\nimport ToastDoc from '@/doc/toast/index.vue'\n\nexport default {\n  data() {\n    return {\n      messages: [],\n    }\n  },\n  methods: {\n    showSuccess() {\n      this.$toast.add({ severity: 'success', summary: 'Success Message', detail: 'Message Content', life: 3000 })\n    },\n    showInfo() {\n      this.$toast.add({ severity: 'info', summary: 'Info Message', detail: 'Message Content', life: 3000 })\n    },\n    showWarn() {\n      this.$toast.add({ severity: 'warn', summary: 'Warn Message', detail: 'Message Content', life: 3000 })\n    },\n    showError() {\n      this.$toast.add({ severity: 'error', summary: 'Error Message', detail: 'Message Content', life: 3000 })\n    },\n    showTopLeft() {\n      this.$toast.add({ severity: 'info', summary: 'Info Message', detail: 'Message Content', group: 'tl', life: 3000 })\n    },\n    showBottomLeft() {\n      this.$toast.add({ severity: 'warn', summary: 'Warn Message', detail: 'Message Content', group: 'bl', life: 3000 })\n    },\n    showBottomRight() {\n      this.$toast.add({ severity: 'success', summary: 'Success Message', detail: 'Message Content', group: 'br', life: 3000 })\n    },\n    showSticky() {\n      this.$toast.add({ severity: 'info', summary: 'Sticky Message', detail: 'Message Content' })\n    },\n    showMultiple() {\n      this.$toast.add({ severity: 'info', summary: 'Message 1', detail: 'Message 1 Content', life: 3000 })\n      this.$toast.add({ severity: 'info', summary: 'Message 2', detail: 'Message 2 Content', life: 3000 })\n      this.$toast.add({ severity: 'info', summary: 'Message 3', detail: 'Message 3 Content', life: 3000 })\n    },\n    showTemplate() {\n      this.$toast.add({ severity: 'warn', summary: 'Are you sure?', detail: 'Proceed to confirm', group: 'bc' })\n    },\n    onConfirm() {\n      this.$toast.removeGroup('bc')\n    },\n    onReject() {\n      this.$toast.removeGroup('bc')\n    },\n    clear() {\n      this.$toast.removeAllGroups()\n    }\n  },\n  components: {\n    'ToastDoc': ToastDoc\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n  min-width: 10rem;\n  margin-right: .5rem;\n}\n\n@media screen and (max-width: 960px) {\n  button {\n    width: 100%;\n    margin-bottom: .5rem;\n  }\n}\n</style>\n"],"names":["_sfc_main","Documentation","SourceCode","ToastDoc"],"mappings":"kMAgRA,MAAAA,EAAA,CACA,KAAA,gBACA,MAAA,CACA,MAAA,CACA,iBAAA,CACA,MAAA,+LAUA,EACA,WAAA,CACA,MAAA,kDAGA,EACA,SAAA,CACA,MAAA,sHAGA,EACA,aAAA,CACA,MAAA,6PAUA,EACA,WAAA,CACA,MAAA,gDAIA,EACA,YAAA,CACA,MAAA,qKAIA,EACA,qBAAA,CACA,MAAA,4CAGA,EACA,eAAA,CACA,MAAA,mxBAqBA,EACA,eAAA,CACA,MAAA,gGAGA,EACA,cAAA,CACA,MAAA,sQAWA,CACA,CACA,CACA,gzPClWAA,EAAA,CACA,KAAA,aACA,MAAA,CACA,MAAA,CACA,YAAA,CACA,MAAA,6vBAmBA,EACA,YAAA,CACA,MAAA,8uDA2CA,CACA,CACA,CACA,sdCxEAA,EAAA,CACA,WAAA,CAAA,cAAAC,EAAA,WAAAC,CAAA,CACA,gTC2CAF,EAAA,CACA,MAAA,CACA,MAAA,CACA,SAAA,CAAA,CACA,CACA,EACA,QAAA,CACA,aAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,UAAA,QAAA,kBAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,CACA,EACA,UAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,eAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,CACA,EACA,UAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,eAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,CACA,EACA,WAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,QAAA,QAAA,gBAAA,OAAA,kBAAA,KAAA,GAAA,CAAA,CACA,EACA,aAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,eAAA,OAAA,kBAAA,MAAA,KAAA,KAAA,GAAA,CAAA,CACA,EACA,gBAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,eAAA,OAAA,kBAAA,MAAA,KAAA,KAAA,GAAA,CAAA,CACA,EACA,iBAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,UAAA,QAAA,kBAAA,OAAA,kBAAA,MAAA,KAAA,KAAA,GAAA,CAAA,CACA,EACA,YAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,iBAAA,OAAA,iBAAA,CAAA,CACA,EACA,cAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,YAAA,OAAA,oBAAA,KAAA,GAAA,CAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,YAAA,OAAA,oBAAA,KAAA,GAAA,CAAA,EACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,YAAA,OAAA,oBAAA,KAAA,GAAA,CAAA,CACA,EACA,cAAA,CACA,KAAA,OAAA,IAAA,CAAA,SAAA,OAAA,QAAA,gBAAA,OAAA,qBAAA,MAAA,IAAA,CAAA,CACA,EACA,WAAA,CACA,KAAA,OAAA,YAAA,IAAA,CACA,EACA,UAAA,CACA,KAAA,OAAA,YAAA,IAAA,CACA,EACA,OAAA,CACA,KAAA,OAAA,gBAAA,CACA,CACA,EACA,WAAA,CACA,SAAAG,CACA,CACA"}