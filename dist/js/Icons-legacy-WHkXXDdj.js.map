{"version":3,"file":"Icons-legacy-WHkXXDdj.js","sources":["../../src/views/icons/Icons.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"content-section documentation\">\n      <h1>Icons</h1>\n      <p>\n        PrimeVue components internally use\n        <a href=\"https://github.com/primefaces/primeicons\">PrimeIcons</a>\n        library, the official icons suite from\n        <a href=\"https://www.primetek.com.tr\">PrimeTek</a>.\n      </p>\n\n      <h5>Download</h5>\n      <p>\n        PrimeIcons is available at npm, run the following command to download it\n        to your project.\n      </p>\n\n      <CodeHighlight lang=\"javascript\">\n        npm install primeicons --save\n      </CodeHighlight>\n\n      <h5>Getting Started</h5>\n      <p>\n        PrimeIcons use the <strong>pi pi-&#123;icon&#125;</strong> syntax such\n        as <strong>pi pi-check</strong>. A standalone icon can be displayed\n        using an element like <i>i</i> or <i>span</i>\n      </p>\n\n      <CodeHighlight>\n        &lt;i class=\"pi pi-check\"&gt;&lt;/i&gt; &lt;i class=\"pi\n        pi-times\"&gt;&lt;/i&gt;\n      </CodeHighlight>\n\n      <i class=\"pi pi-check\" style=\"margin-right: 0.5rem\"></i>\n      <i class=\"pi pi-times\"></i>\n\n      <h5>Size</h5>\n      <p>Size of the icons can easily be changed using font-size property.</p>\n\n      <CodeHighlight> &lt;i class=\"pi pi-check\"&gt;&lt;/i&gt; </CodeHighlight>\n\n      <i class=\"pi pi-check\"></i>\n\n      <CodeHighlight>\n        &lt;i class=\"pi pi-check\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\n      </CodeHighlight>\n\n      <i class=\"pi pi-check\" style=\"font-size: 2rem\"></i>\n\n      <h5>Spinning Animation</h5>\n      <p>Special pi-spin class applies continuous rotation to an icon.</p>\n      <CodeHighlight>\n        &lt;i class=\"pi pi-spin pi-spinner\" style=\"font-size:\n        2rem\"&gt;&lt;/i&gt;\n      </CodeHighlight>\n\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n\n      <h5>Constants</h5>\n      <p>\n        PrimeIcons constants API is provided to easily choose an icon with\n        typescript e.g. when defining a menu model.\n      </p>\n      <CodeHighlight> &lt;Menu :model=\"items\" /&gt; </CodeHighlight>\n\n      <CodeHighlight lang=\"javascript\">\n        import {PrimeIcons} from 'primevue2/api'; export default { data() {\n        return { items: [ { label: 'Update', icon: PrimeIcons.REFRESH, to:\n        '/update' }, { label: 'Delete', icon: PrimeIcons.TIMES, to: '/delete' }\n        ] } } }\n      </CodeHighlight>\n\n      <h5>List of Icons</h5>\n      <p>\n        Here is the current list of PrimeIcons, more icons are added\n        periodically. You may also\n        <a href=\"https://github.com/primefaces/primeicons/issues\"\n          >request new icons</a\n        >\n        at the issue tracker.\n      </p>\n\n      <InputText\n        v-model=\"filter\"\n        class=\"icon-filter\"\n        placeholder=\"Search an icon\" />\n\n      <div class=\"grid icons-list\">\n        <div\n          class=\"col-12 md:col-2 icon\"\n          v-for=\"icon of filteredIcons\"\n          :key=\"icon.properties.name\">\n          <i :class=\"'pi pi-' + icon.properties.name\"></i>\n          <div>pi-{{ icon.properties.name }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      icons: null,\n      filter: null\n    }\n  },\n  mounted() {\n    fetch('demo/data/icons.json', { headers: { 'Cache-Control': 'no-cache' } })\n      .then((res) => res.json())\n      .then((d) => {\n        let icons = d.icons\n        let data = icons.filter((value) => {\n          return value.icon.tags.indexOf('deprecate') === -1\n        })\n        data.sort((icon1, icon2) => {\n          if (icon1.properties.name < icon2.properties.name) return -1\n          else if (icon1.properties.name > icon2.properties.name) return 1\n          else return 0\n        })\n\n        this.icons = data\n      })\n  },\n  computed: {\n    filteredIcons() {\n      if (this.filter)\n        return this.icons.filter(\n          (icon) => icon.properties.name.indexOf(this.filter.toLowerCase()) > -1\n        )\n      else return this.icons\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.icon-filter {\n  width: 100%;\n  padding: 1rem;\n  margin: 1rem 0 1.5rem 0;\n}\n\n.icons-list {\n  text-align: center;\n\n  i {\n    font-size: 1.5rem;\n    color: var(--text-color-secondary);\n    margin-bottom: 0.5rem;\n  }\n\n  .icon {\n    padding-bottom: 2rem;\n  }\n}\n</style>\n"],"names":["data","icons","filter","mounted","_this","fetch","headers","then","res","json","d","value","icon","tags","indexOf","sort","icon1","icon2","properties","name","computed","filteredIcons","_this2","this","toLowerCase"],"mappings":"goBAqGA,CACAA,KAAAA,WACA,MAAA,CACAC,MAAA,KACAC,OAAA,KAEA,EACAC,mBAAAC,IAAAA,EACAC,KAAAA,MAAA,uBAAA,CAAAC,QAAA,CAAA,gBAAA,cACAC,MAAA,SAAAC,GAAA,OAAAA,EAAAC,UACAF,MAAA,SAAAG,GACA,IACAV,EADAU,EAAAT,MACAC,QAAA,SAAAS,GACA,OAAA,IAAAA,EAAAC,KAAAC,KAAAC,QAAA,YACA,IACAd,EAAAe,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,WAAAC,KAAAF,EAAAC,WAAAC,MAAA,EACAH,EAAAE,WAAAC,KAAAF,EAAAC,WAAAC,OACA,CACA,IAEAf,EAAAH,MAAAD,CACA,GACA,EACAoB,SAAA,CACAC,yBAAAC,IAAAA,OACA,OAAAC,KAAArB,OACAqB,KAAAtB,MAAAC,QACA,SAAAU,GAAA,OAAAA,EAAAM,WAAAC,KAAAL,QAAAQ,EAAApB,OAAAsB,gBAAA,CAAA,IAEAD,KAAAtB,KACA"}