"use strict";var e=require("primevue2/utils"),n=require("primevue2/ripple");function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function i(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=s(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var i=0,l=function(){};return{s:l,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r=!0,a=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return r=e.done,e},e:function(e){a=!0,o=e},f:function(){try{r||null==t.return||t.return()}finally{if(a)throw o}}}}function s(e,n){if(e){if("string"==typeof e)return l(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?l(e,n):void 0}}function l(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}var o={name:"Dropdown",props:{value:null,options:Array,optionLabel:null,optionValue:null,optionDisabled:null,scrollHeight:{type:String,default:"200px"},filter:Boolean,filterPlaceholder:String,filterLocale:String,editable:Boolean,placeholder:String,disabled:Boolean,dataKey:null,showClear:Boolean,inputId:String,tabindex:String,ariaLabelledBy:null,appendTo:{type:String,default:null},emptyFilterMessage:{type:String,default:"No results found"}},data:function(){return{focused:!1,filterValue:null,overlayVisible:!1}},watch:{value:function(){this.isModelValueChanged=!0}},outsideClickListener:null,scrollHandler:null,resizeListener:null,searchTimeout:null,currentSearchChar:null,previousSearchChar:null,searchValue:null,isValueChanged:!1,updated:function(){this.overlayVisible&&this.isModelValueChanged&&this.scrollValueInView(),this.isModelValueChanged=!1,this.onFilterUpdated()},beforeDestroy:function(){this.restoreAppend(),this.unbindOutsideClickListener(),this.unbindResizeListener(),this.scrollHandler&&(this.scrollHandler.destroy(),this.scrollHandler=null)},methods:{getOptionLabel:function(n){return this.optionLabel?e.ObjectUtils.resolveFieldData(n,this.optionLabel):n},getOptionValue:function(n){return this.optionValue?e.ObjectUtils.resolveFieldData(n,this.optionValue):n},getOptionRenderKey:function(n){return this.dataKey?e.ObjectUtils.resolveFieldData(n,this.dataKey):this.getOptionLabel(n)},isOptionDisabled:function(n){return!!this.optionDisabled&&e.ObjectUtils.resolveFieldData(n,this.optionDisabled)},getSelectedOption:function(){var n;if(null!=this.value&&this.options){var t,s=i(this.options);try{for(s.s();!(t=s.n()).done;){var l=t.value;if(e.ObjectUtils.equals(this.value,this.getOptionValue(l),this.equalityKey)){n=l;break}}}catch(e){s.e(e)}finally{s.f()}}return n},isSelected:function(n){return e.ObjectUtils.equals(this.value,this.getOptionValue(n),this.equalityKey)},getSelectedOptionIndex:function(){var n=-1;if(null!=this.value&&this.visibleOptions)for(var t=0;t<this.visibleOptions.length;t++)if(e.ObjectUtils.equals(this.value,this.getOptionValue(this.visibleOptions[t]),this.equalityKey)){n=t;break}return n},show:function(){this.$emit("before-show"),this.overlayVisible=!0},hide:function(){this.$emit("before-hide"),this.overlayVisible=!1},onFocus:function(){this.focused=!0},onBlur:function(){this.focused=!1},onKeyDown:function(e){switch(e.which){case 40:this.onDownKey(e);break;case 38:this.onUpKey(e);break;case 32:this.overlayVisible||(this.show(),e.preventDefault());break;case 13:case 27:this.overlayVisible&&(this.hide(),e.preventDefault());break;case 9:this.hide();break;default:this.search(e)}},onFilterKeyDown:function(e){switch(e.which){case 40:this.onDownKey(e);break;case 38:this.onUpKey(e);break;case 13:case 27:this.overlayVisible=!1,e.preventDefault()}},onDownKey:function(e){if(this.visibleOptions)if(!this.overlayVisible&&e.altKey)this.show();else{var n=this.findNextOption(this.getSelectedOptionIndex());n&&this.updateModel(e,this.getOptionValue(n))}e.preventDefault()},onUpKey:function(e){if(this.visibleOptions){var n=this.findPrevOption(this.getSelectedOptionIndex());n&&this.updateModel(e,this.getOptionValue(n))}e.preventDefault()},findNextOption:function(e){var n=e+1;if(n===this.visibleOptions.length)return null;var t=this.visibleOptions[n];return this.isOptionDisabled(t)?this.findNextOption(n):t},findPrevOption:function(e){var n=e-1;if(n<0)return null;var t=this.visibleOptions[n];return this.isOptionDisabled(t)?this.findPrevOption(n):t},onClearClick:function(e){this.updateModel(e,null)},onClick:function(n){this.disabled||e.DomHandler.hasClass(n.target,"p-dropdown-clear-icon")||"INPUT"===n.target.tagName||this.$refs.overlay&&this.$refs.overlay.contains(n.target)||(this.overlayVisible?this.hide():this.show(),this.$refs.focusInput.focus())},onOptionSelect:function(e,n){var t=this,i=this.getOptionValue(n);this.updateModel(e,i),this.$refs.focusInput.focus(),setTimeout((function(){t.hide()}),200)},onEditableInput:function(e){this.$emit("input",e.target.value)},onOverlayEnter:function(){this.$refs.overlay.style.zIndex=String(e.DomHandler.generateZIndex()),this.appendContainer(),this.alignOverlay(),this.bindOutsideClickListener(),this.bindScrollListener(),this.bindResizeListener(),this.filter&&this.$refs.filterInput.focus(),this.$emit("show")},onOverlayLeave:function(){this.unbindOutsideClickListener(),this.unbindScrollListener(),this.unbindResizeListener(),this.$emit("hide")},alignOverlay:function(){this.appendTo?(e.DomHandler.absolutePosition(this.$refs.overlay,this.$refs.container),this.$refs.overlay.style.minWidth=e.DomHandler.getOuterWidth(this.$refs.container)+"px"):e.DomHandler.relativePosition(this.$refs.overlay,this.$refs.container)},updateModel:function(e,n){this.$emit("input",n),this.$emit("change",{originalEvent:e,value:n})},bindOutsideClickListener:function(){var e=this;this.outsideClickListener||(this.outsideClickListener=function(n){e.overlayVisible&&e.$refs.overlay&&!e.$refs.container.contains(n.target)&&!e.$refs.overlay.contains(n.target)&&e.hide()},document.addEventListener("click",this.outsideClickListener))},unbindOutsideClickListener:function(){this.outsideClickListener&&(document.removeEventListener("click",this.outsideClickListener),this.outsideClickListener=null)},bindScrollListener:function(){var n=this;this.scrollHandler||(this.scrollHandler=new e.ConnectedOverlayScrollHandler(this.$el,(function(){n.overlayVisible&&n.hide()}))),this.scrollHandler.bindScrollListener()},unbindScrollListener:function(){this.scrollHandler&&this.scrollHandler.unbindScrollListener()},bindResizeListener:function(){var n=this;this.resizeListener||(this.resizeListener=function(){n.overlayVisible&&!e.DomHandler.isTouchDevice()&&n.hide()},window.addEventListener("resize",this.resizeListener))},unbindResizeListener:function(){this.resizeListener&&(window.removeEventListener("resize",this.resizeListener),this.resizeListener=null)},search:function(e){var n=this;if(this.visibleOptions){this.searchTimeout&&clearTimeout(this.searchTimeout);var t=e.key;this.previousSearchChar=this.currentSearchChar,this.currentSearchChar=t,this.searchValue=this.previousSearchChar===this.currentSearchChar?this.currentSearchChar:this.searchValue?this.searchValue+t:t;var i=this.getSelectedOptionIndex(),s=this.searchOption(++i);s&&this.updateModel(e,this.getOptionValue(s)),this.searchTimeout=setTimeout((function(){n.searchValue=null}),250)}},searchOption:function(e){var n;return this.searchValue&&((n=this.searchOptionInRange(e,this.visibleOptions.length))||(n=this.searchOptionInRange(0,e))),n},searchOptionInRange:function(e,n){for(var t=e;t<n;t++){var i=this.visibleOptions[t];if(this.getOptionLabel(i).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)))return i}return null},appendContainer:function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.$refs.overlay):document.getElementById(this.appendTo).appendChild(this.$refs.overlay))},restoreAppend:function(){this.$refs.overlay&&this.appendTo&&("body"===this.appendTo?document.body.removeChild(this.$refs.overlay):document.getElementById(this.appendTo).removeChild(this.$refs.overlay))},onFilterChange:function(e){this.filterValue=e.target.value,this.$emit("filter",{originalEvent:e,value:e.target.value})},onFilterUpdated:function(){this.overlayVisible&&this.alignOverlay()},scrollValueInView:function(){if(this.$refs.overlay){var n=e.DomHandler.findSingle(this.$refs.overlay,"li.p-highlight");n&&n.scrollIntoView({block:"nearest",inline:"start"})}}},computed:{visibleOptions:function(){var e=this;return this.filterValue&&this.filterValue.trim().length>0?this.options.filter((function(n){return e.getOptionLabel(n).toLocaleLowerCase(e.filterLocale).indexOf(e.filterValue.toLocaleLowerCase(e.filterLocale))>-1})):this.options},containerClass:function(){return["p-dropdown p-component p-inputwrapper",{"p-disabled":this.disabled,"p-dropdown-clearable":this.showClear&&!this.disabled,"p-focus":this.focused,"p-inputwrapper-filled":this.value,"p-inputwrapper-focus":this.focused||this.overlayVisible}]},labelClass:function(){return["p-dropdown-label p-inputtext",{"p-placeholder":this.label===this.placeholder,"p-dropdown-label-empty":!this.$scopedSlots.value&&("p-emptylabel"===this.label||0===this.label.length)}]},label:function(){var e=this.getSelectedOption();return e?this.getOptionLabel(e):this.placeholder||"p-emptylabel"},editableInputValue:function(){var e=this.getSelectedOption();return null!=e?this.getOptionLabel(e):this.value},equalityKey:function(){return this.optionValue?null:this.dataKey}},directives:{ripple:t(n).default}};function r(e,n,t,i,s,l,o,r,a,p){"boolean"!=typeof o&&(a=r,r=o,o=!1);const d="function"==typeof t?t.options:t;let h;if(e&&e.render&&(d.render=e.render,d.staticRenderFns=e.staticRenderFns,d._compiled=!0,s&&(d.functional=!0)),i&&(d._scopeId=i),l?(h=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,a(e)),e&&e._registeredComponents&&e._registeredComponents.add(l)},d._ssrRegister=h):n&&(h=o?function(e){n.call(this,p(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,r(e))}),h)if(d.functional){const e=d.render;d.render=function(n,t){return h.call(t),e(n,t)}}else{const e=d.beforeCreate;d.beforeCreate=e?[].concat(e,h):[h]}return t}const a="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function p(e){return(e,n)=>u(e,n)}let d;const h={};function u(e,n){const t=a?n.media||"default":e,i=h[t]||(h[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===d&&(d=document.head||document.getElementsByTagName("head")[0]),d.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),s=i.element.childNodes;s[e]&&i.element.removeChild(s[e]),s.length?i.element.insertBefore(n,s[e]):i.element.appendChild(n)}}}var c=o,A=function(){var e=this,n=e._self._c||e.$createElement;return n("div",{ref:"container",class:e.containerClass,on:{click:function(n){return e.onClick(n)}}},[n("div",{staticClass:"p-hidden-accessible"},[n("input",{ref:"focusInput",attrs:{type:"text",id:e.inputId,readonly:"",disabled:e.disabled,tabindex:e.tabindex,"aria-haspopup":"listbox","aria-expanded":e.overlayVisible,"aria-labelledby":e.ariaLabelledBy},on:{focus:e.onFocus,blur:e.onBlur,keydown:e.onKeyDown}})]),e._v(" "),e.editable?n("input",{staticClass:"p-dropdown-label p-inputtext",attrs:{type:"text",disabled:e.disabled,placeholder:e.placeholder,"aria-haspopup":"listbox","aria-expanded":e.overlayVisible},domProps:{value:e.editableInputValue},on:{focus:e.onFocus,blur:e.onBlur,input:e.onEditableInput}}):e._e(),e._v(" "),e.editable?e._e():n("span",{class:e.labelClass},[e._t("value",(function(){return[e._v("\n        "+e._s(e.label)+"\n      ")]}),{value:e.value,placeholder:e.placeholder})],2),e._v(" "),e.showClear&&null!=e.value?n("i",{staticClass:"p-dropdown-clear-icon pi pi-times",on:{click:function(n){return e.onClearClick(n)}}}):e._e(),e._v(" "),n("div",{staticClass:"p-dropdown-trigger",attrs:{role:"button","aria-haspopup":"listbox","aria-expanded":e.overlayVisible}},[e._t("indicator",(function(){return[n("span",{staticClass:"p-dropdown-trigger-icon pi pi-chevron-down"})]}))],2),e._v(" "),n("transition",{attrs:{name:"p-connected-overlay"},on:{enter:e.onOverlayEnter,leave:e.onOverlayLeave}},[e.overlayVisible?n("div",{ref:"overlay",staticClass:"p-dropdown-panel p-component"},[e.filter?n("div",{staticClass:"p-dropdown-header"},[n("div",{staticClass:"p-dropdown-filter-container"},[n("input",{ref:"filterInput",staticClass:"p-dropdown-filter p-inputtext p-component",attrs:{type:"text",autoComplete:"off",placeholder:e.filterPlaceholder},domProps:{value:e.filterValue},on:{keydown:e.onFilterKeyDown,input:e.onFilterChange}}),e._v(" "),n("span",{staticClass:"p-dropdown-filter-icon pi pi-search"})])]):e._e(),e._v(" "),n("div",{ref:"itemsWrapper",staticClass:"p-dropdown-items-wrapper",style:{"max-height":e.scrollHeight}},[n("ul",{staticClass:"p-dropdown-items",attrs:{role:"listbox"}},[e._l(e.visibleOptions,(function(t,i){return n("li",{directives:[{name:"ripple",rawName:"v-ripple"}],key:e.getOptionRenderKey(t),class:["p-dropdown-item",{"p-highlight":e.isSelected(t),"p-disabled":e.isOptionDisabled(t)}],attrs:{"aria-label":e.getOptionLabel(t),role:"option","aria-selected":e.isSelected(t)},on:{click:function(n){return e.onOptionSelect(n,t)}}},[e._t("option",(function(){return[e._v("\n                "+e._s(e.getOptionLabel(t))+"\n              ")]}),{option:t,index:i})],2)})),e._v(" "),e.filterValue&&(!e.visibleOptions||e.visibleOptions&&0===e.visibleOptions.length)?n("li",{staticClass:"p-dropdown-empty-message"},[e._v("\n              "+e._s(e.emptyFilterMessage)+"\n            ")]):e._e()],2)])]):e._e()])],1)};A._withStripped=!0;module.exports=r({render:A,staticRenderFns:[]},(function(e){e&&e("data-v-31ece89d_0",{source:"\n.p-dropdown {\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  cursor: pointer;\n  position: relative;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.p-dropdown-clear-icon {\n  position: absolute;\n  top: 50%;\n  margin-top: -0.5rem;\n}\n.p-dropdown-trigger {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-flex-shrink: 0;\n      -ms-flex-negative: 0;\n          flex-shrink: 0;\n}\n.p-dropdown-label {\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n  width: 1%;\n  text-overflow: ellipsis;\n  cursor: pointer;\n}\n.p-dropdown-label-empty {\n  overflow: hidden;\n  visibility: hidden;\n}\ninput.p-dropdown-label {\n  cursor: default;\n}\n.p-dropdown .p-dropdown-panel {\n  min-width: 100%;\n}\n.p-dropdown-panel {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n.p-dropdown-items-wrapper {\n  overflow: auto;\n}\n.p-dropdown-item {\n  cursor: pointer;\n  font-weight: normal;\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n}\n.p-dropdown-items {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n.p-dropdown-filter {\n  width: 100%;\n}\n.p-dropdown-filter-container {\n  position: relative;\n}\n.p-dropdown-filter-icon {\n  position: absolute;\n  top: 50%;\n  margin-top: -0.5rem;\n}\n.p-fluid .p-dropdown {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.p-fluid .p-dropdown .p-dropdown-label {\n  width: 1%;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/dropdown/Dropdown.vue"],names:[],mappings:";AAwkBA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,eAAA;EACA,kBAAA;EACA,yBAAA;KAAA,sBAAA;MAAA,qBAAA;UAAA,iBAAA;AACA;AAEA;EACA,kBAAA;EACA,QAAA;EACA,mBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,sBAAA;MAAA,oBAAA;UAAA,cAAA;AACA;AAEA;EACA,cAAA;EACA,mBAAA;EACA,gBAAA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;EACA,SAAA;EACA,uBAAA;EACA,eAAA;AACA;AAEA;EACA,gBAAA;EACA,kBAAA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;AACA;AAEA;EACA,cAAA;AACA;AAEA;EACA,eAAA;EACA,mBAAA;EACA,mBAAA;EACA,kBAAA;EACA,gBAAA;AACA;AAEA;EACA,SAAA;EACA,UAAA;EACA,qBAAA;AACA;AAEA;EACA,WAAA;AACA;AAEA;EACA,kBAAA;AACA;AAEA;EACA,kBAAA;EACA,QAAA;EACA,mBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA;AAEA;EACA,SAAA;AACA",file:"Dropdown.vue",sourcesContent:['<template>\n  <div ref="container" :class="containerClass" @click="onClick($event)">\n    <div class="p-hidden-accessible">\n      <input\n        ref="focusInput"\n        type="text"\n        :id="inputId"\n        readonly\n        :disabled="disabled"\n        @focus="onFocus"\n        @blur="onBlur"\n        @keydown="onKeyDown"\n        :tabindex="tabindex"\n        aria-haspopup="listbox"\n        :aria-expanded="overlayVisible"\n        :aria-labelledby="ariaLabelledBy" />\n    </div>\n    <input\n      v-if="editable"\n      type="text"\n      class="p-dropdown-label p-inputtext"\n      :disabled="disabled"\n      @focus="onFocus"\n      @blur="onBlur"\n      :placeholder="placeholder"\n      :value="editableInputValue"\n      @input="onEditableInput"\n      aria-haspopup="listbox"\n      :aria-expanded="overlayVisible" />\n    <span v-if="!editable" :class="labelClass">\n      <slot name="value" :value="value" :placeholder="placeholder">\n        {{ label }}\n      </slot>\n    </span>\n    <i v-if="showClear && value != null" class="p-dropdown-clear-icon pi pi-times" @click="onClearClick($event)"></i>\n    <div class="p-dropdown-trigger" role="button" aria-haspopup="listbox" :aria-expanded="overlayVisible">\n      <slot name="indicator">\n        <span class="p-dropdown-trigger-icon pi pi-chevron-down"></span>\n      </slot>\n    </div>\n    <transition name="p-connected-overlay" @enter="onOverlayEnter" @leave="onOverlayLeave">\n      <div ref="overlay" class="p-dropdown-panel p-component" v-if="overlayVisible">\n        <div class="p-dropdown-header" v-if="filter">\n          <div class="p-dropdown-filter-container">\n            <input\n              type="text"\n              ref="filterInput"\n              :value="filterValue"\n              autoComplete="off"\n              class="p-dropdown-filter p-inputtext p-component"\n              :placeholder="filterPlaceholder"\n              @keydown="onFilterKeyDown"\n              @input="onFilterChange" />\n            <span class="p-dropdown-filter-icon pi pi-search"></span>\n          </div>\n        </div>\n        <div ref="itemsWrapper" class="p-dropdown-items-wrapper" :style="{ \'max-height\': scrollHeight }">\n          <ul class="p-dropdown-items" role="listbox">\n            <li\n              v-for="(option, i) of visibleOptions"\n              :class="[\n                \'p-dropdown-item\',\n                { \'p-highlight\': isSelected(option), \'p-disabled\': isOptionDisabled(option) },\n              ]"\n              v-ripple\n              :aria-label="getOptionLabel(option)"\n              :key="getOptionRenderKey(option)"\n              @click="onOptionSelect($event, option)"\n              role="option"\n              :aria-selected="isSelected(option)">\n              <slot name="option" :option="option" :index="i">\n                {{ getOptionLabel(option) }}\n              </slot>\n            </li>\n            <li\n              v-if="filterValue && (!visibleOptions || (visibleOptions && visibleOptions.length === 0))"\n              class="p-dropdown-empty-message">\n              {{ emptyFilterMessage }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, ObjectUtils, DomHandler } from \'primevue2/utils\'\nimport Ripple from \'primevue2/ripple\'\n\nexport default {\n  name: \'Dropdown\',\n  props: {\n    value: null,\n    options: Array,\n    optionLabel: null,\n    optionValue: null,\n    optionDisabled: null,\n    scrollHeight: {\n      type: String,\n      default: \'200px\'\n    },\n    filter: Boolean,\n    filterPlaceholder: String,\n    filterLocale: String,\n    editable: Boolean,\n    placeholder: String,\n    disabled: Boolean,\n    dataKey: null,\n    showClear: Boolean,\n    inputId: String,\n    tabindex: String,\n    ariaLabelledBy: null,\n    appendTo: {\n      type: String,\n      default: null\n    },\n    emptyFilterMessage: {\n      type: String,\n      default: \'No results found\'\n    }\n  },\n  data() {\n    return {\n      focused: false,\n      filterValue: null,\n      overlayVisible: false\n    }\n  },\n  watch: {\n    value() {\n      this.isModelValueChanged = true\n    }\n  },\n  outsideClickListener: null,\n  scrollHandler: null,\n  resizeListener: null,\n  searchTimeout: null,\n  currentSearchChar: null,\n  previousSearchChar: null,\n  searchValue: null,\n  isValueChanged: false,\n  updated() {\n    if (this.overlayVisible && this.isModelValueChanged) {\n      this.scrollValueInView()\n    }\n    this.isModelValueChanged = false\n\n    this.onFilterUpdated()\n  },\n  beforeDestroy() {\n    this.restoreAppend()\n    this.unbindOutsideClickListener()\n    this.unbindResizeListener()\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy()\n      this.scrollHandler = null\n    }\n  },\n  methods: {\n    getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option\n    },\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option\n    },\n    getOptionRenderKey(option) {\n      return this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)\n    },\n    isOptionDisabled(option) {\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false\n    },\n    getSelectedOption() {\n      let selectedOption\n\n      if (this.value != null && this.options) {\n        for (let option of this.options) {\n          if ((ObjectUtils.equals(this.value, this.getOptionValue(option), this.equalityKey))) {\n            selectedOption = option\n            break\n          }\n        }\n      }\n\n      return selectedOption\n    },\n    isSelected(option) {\n      return ObjectUtils.equals(this.value, this.getOptionValue(option), this.equalityKey)\n    },\n    getSelectedOptionIndex() {\n      let selectedOptionIndex = -1\n\n      if (this.value != null && this.visibleOptions) {\n        for (let i = 0; i < this.visibleOptions.length; i++) {\n          if ((ObjectUtils.equals(this.value, this.getOptionValue(this.visibleOptions[i]), this.equalityKey))) {\n            selectedOptionIndex = i\n            break\n          }\n        }\n      }\n\n      return selectedOptionIndex\n    },\n    show() {\n      this.$emit(\'before-show\')\n      this.overlayVisible = true\n    },\n    hide() {\n      this.$emit(\'before-hide\')\n      this.overlayVisible = false\n    },\n    onFocus() {\n      this.focused = true\n    },\n    onBlur() {\n      this.focused = false\n    },\n    onKeyDown(event) {\n      switch (event.which) {\n      //down\n      case 40:\n        this.onDownKey(event)\n        break\n\n        //up\n      case 38:\n        this.onUpKey(event)\n        break\n\n        //space\n      case 32:\n        if (!this.overlayVisible) {\n          this.show()\n          event.preventDefault()\n        }\n        break\n\n        //enter and escape\n      case 13:\n      case 27:\n        if (this.overlayVisible) {\n          this.hide()\n          event.preventDefault()\n        }\n        break\n\n        //tab\n      case 9:\n        this.hide()\n        break\n\n      default:\n        this.search(event)\n        break\n      }\n    },\n    onFilterKeyDown(event) {\n      switch (event.which) {\n      //down\n      case 40:\n        this.onDownKey(event)\n        break\n\n        //up\n      case 38:\n        this.onUpKey(event)\n        break\n\n        //enter and escape\n      case 13:\n      case 27:\n        this.overlayVisible = false\n        event.preventDefault()\n        break\n\n      default:\n        break\n      }\n    },\n    onDownKey(event) {\n      if (this.visibleOptions) {\n        if (!this.overlayVisible && event.altKey) {\n          this.show()\n        }\n        else {\n          let nextOption = this.findNextOption(this.getSelectedOptionIndex())\n\n          if (nextOption) {\n            this.updateModel(event, this.getOptionValue(nextOption))\n          }\n        }\n      }\n\n      event.preventDefault()\n    },\n    onUpKey(event) {\n      if (this.visibleOptions) {\n        let prevOption = this.findPrevOption(this.getSelectedOptionIndex())\n\n        if (prevOption) {\n          this.updateModel(event, this.getOptionValue(prevOption))\n        }\n      }\n\n      event.preventDefault()\n    },\n    findNextOption(index) {\n      let i = index + 1\n      if (i === this.visibleOptions.length) {\n        return null\n      }\n\n      let option = this.visibleOptions[i]\n      if (this.isOptionDisabled(option))\n        return this.findNextOption(i)\n      else\n        return option\n\n    },\n    findPrevOption(index) {\n      let i = index - 1\n      if (i < 0) {\n        return null\n      }\n\n      let option = this.visibleOptions[i]\n      if (this.isOptionDisabled(option))\n        return this.findPrevOption(i)\n      else\n        return option\n    },\n    onClearClick(event) {\n      this.updateModel(event, null)\n    },\n    onClick(event) {\n      if (this.disabled) {\n        return\n      }\n\n      if (DomHandler.hasClass(event.target, \'p-dropdown-clear-icon\') || event.target.tagName === \'INPUT\') {\n        return\n      }\n      else if (!this.$refs.overlay || !this.$refs.overlay.contains(event.target)) {\n        if (this.overlayVisible)\n          this.hide()\n        else\n          this.show()\n\n        this.$refs.focusInput.focus()\n      }\n    },\n    onOptionSelect(event, option) {\n      let value = this.getOptionValue(option)\n      this.updateModel(event, value)\n      this.$refs.focusInput.focus()\n\n      setTimeout(() => {\n        this.hide()\n      }, 200)\n    },\n    onEditableInput(event) {\n      this.$emit(\'input\', event.target.value)\n    },\n    onOverlayEnter() {\n      this.$refs.overlay.style.zIndex = String(DomHandler.generateZIndex())\n      this.appendContainer()\n      this.alignOverlay()\n      this.bindOutsideClickListener()\n      this.bindScrollListener()\n      this.bindResizeListener()\n\n      if (this.filter) {\n        this.$refs.filterInput.focus()\n      }\n\n      this.$emit(\'show\')\n    },\n    onOverlayLeave() {\n      this.unbindOutsideClickListener()\n      this.unbindScrollListener()\n      this.unbindResizeListener()\n      this.$emit(\'hide\')\n    },\n    alignOverlay() {\n      if (this.appendTo) {\n        DomHandler.absolutePosition(this.$refs.overlay, this.$refs.container)\n        this.$refs.overlay.style.minWidth = DomHandler.getOuterWidth(this.$refs.container) + \'px\'\n      } else {\n        DomHandler.relativePosition(this.$refs.overlay, this.$refs.container)\n      }\n    },\n    updateModel(event, value) {\n      this.$emit(\'input\', value)\n      this.$emit(\'change\', { originalEvent: event, value: value })\n    },\n    bindOutsideClickListener() {\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = (event) => {\n          if (this.overlayVisible && this.$refs.overlay && !this.$refs.container.contains(event.target) && !this.$refs.overlay.contains(event.target)) {\n            this.hide()\n          }\n        }\n        document.addEventListener(\'click\', this.outsideClickListener)\n      }\n    },\n    unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener(\'click\', this.outsideClickListener)\n        this.outsideClickListener = null\n      }\n    },\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$el, () => {\n          if (this.overlayVisible) {\n            this.hide()\n          }\n        })\n      }\n\n      this.scrollHandler.bindScrollListener()\n    },\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener()\n      }\n    },\n    bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = () => {\n          if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n            this.hide()\n          }\n        }\n        window.addEventListener(\'resize\', this.resizeListener)\n      }\n    },\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener(\'resize\', this.resizeListener)\n        this.resizeListener = null\n      }\n    },\n    search(event) {\n      if (!this.visibleOptions) {\n        return\n      }\n\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout)\n      }\n\n      const char = event.key\n      this.previousSearchChar = this.currentSearchChar\n      this.currentSearchChar = char\n\n      if (this.previousSearchChar === this.currentSearchChar)\n        this.searchValue = this.currentSearchChar\n      else\n        this.searchValue = this.searchValue ? this.searchValue + char : char\n\n      let searchIndex = this.getSelectedOptionIndex()\n      let newOption = this.searchOption(++searchIndex)\n\n      if (newOption) {\n        this.updateModel(event, this.getOptionValue(newOption))\n      }\n\n      this.searchTimeout = setTimeout(() => {\n        this.searchValue = null\n      }, 250)\n    },\n    searchOption(index) {\n      let option\n\n      if (this.searchValue) {\n        option = this.searchOptionInRange(index, this.visibleOptions.length)\n\n        if (!option) {\n          option = this.searchOptionInRange(0, index)\n        }\n      }\n\n      return option\n    },\n    searchOptionInRange(start, end) {\n      for (let i = start; i < end; i++) {\n        let opt = this.visibleOptions[i]\n        let label = this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale)\n        if (label.startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale))) {\n          return opt\n        }\n      }\n\n      return null\n    },\n    appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === \'body\')\n          document.body.appendChild(this.$refs.overlay)\n        else\n          document.getElementById(this.appendTo).appendChild(this.$refs.overlay)\n      }\n    },\n    restoreAppend() {\n      if (this.$refs.overlay && this.appendTo) {\n        if (this.appendTo === \'body\')\n          document.body.removeChild(this.$refs.overlay)\n        else\n          document.getElementById(this.appendTo).removeChild(this.$refs.overlay)\n      }\n    },\n    onFilterChange(event) {\n      this.filterValue = event.target.value\n      this.$emit(\'filter\', { originalEvent: event, value: event.target.value })\n    },\n    onFilterUpdated() {\n      if (this.overlayVisible) {\n        this.alignOverlay()\n      }\n    },\n    scrollValueInView() {\n      if (this.$refs.overlay) {\n        let selectedItem = DomHandler.findSingle(this.$refs.overlay, \'li.p-highlight\')\n        if (selectedItem) {\n          selectedItem.scrollIntoView({ block: \'nearest\', inline: \'start\' })\n        }\n      }\n    },\n  },\n  computed: {\n    visibleOptions() {\n      if (this.filterValue && this.filterValue.trim().length > 0)\n        return this.options.filter(option => this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).indexOf(this.filterValue.toLocaleLowerCase(this.filterLocale)) > -1)\n      else\n        return this.options\n    },\n    containerClass() {\n      return [\n        \'p-dropdown p-component p-inputwrapper\',\n        {\n          \'p-disabled\': this.disabled,\n          \'p-dropdown-clearable\': this.showClear && !this.disabled,\n          \'p-focus\': this.focused,\n          \'p-inputwrapper-filled\': this.value,\n          \'p-inputwrapper-focus\': this.focused || this.overlayVisible\n        }\n      ]\n    },\n    labelClass() {\n      return [\n        \'p-dropdown-label p-inputtext\',\n        {\n          \'p-placeholder\': this.label === this.placeholder,\n          \'p-dropdown-label-empty\': !this.$scopedSlots[\'value\'] && (this.label === \'p-emptylabel\' || this.label.length === 0)\n        }\n      ]\n    },\n    label() {\n      let selectedOption = this.getSelectedOption()\n      if (selectedOption)\n        return this.getOptionLabel(selectedOption)\n      else\n        return this.placeholder || \'p-emptylabel\'\n    },\n    editableInputValue() {\n      let selectedOption = this.getSelectedOption()\n      if (selectedOption != null)\n        return this.getOptionLabel(selectedOption)\n      else\n        return this.value\n    },\n    equalityKey() {\n      return this.optionValue ? null : this.dataKey\n    }\n  },\n  directives: {\n    \'ripple\': Ripple\n  }\n}\n<\/script>\n\n<style>\n.p-dropdown {\n  display: inline-flex;\n  cursor: pointer;\n  position: relative;\n  user-select: none;\n}\n\n.p-dropdown-clear-icon {\n  position: absolute;\n  top: 50%;\n  margin-top: -0.5rem;\n}\n\n.p-dropdown-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n.p-dropdown-label {\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  flex: 1 1 auto;\n  width: 1%;\n  text-overflow: ellipsis;\n  cursor: pointer;\n}\n\n.p-dropdown-label-empty {\n  overflow: hidden;\n  visibility: hidden;\n}\n\ninput.p-dropdown-label {\n  cursor: default;\n}\n\n.p-dropdown .p-dropdown-panel {\n  min-width: 100%;\n}\n\n.p-dropdown-panel {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.p-dropdown-items-wrapper {\n  overflow: auto;\n}\n\n.p-dropdown-item {\n  cursor: pointer;\n  font-weight: normal;\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n}\n\n.p-dropdown-items {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n.p-dropdown-filter {\n  width: 100%;\n}\n\n.p-dropdown-filter-container {\n  position: relative;\n}\n\n.p-dropdown-filter-icon {\n  position: absolute;\n  top: 50%;\n  margin-top: -0.5rem;\n}\n\n.p-fluid .p-dropdown {\n  display: flex;\n}\n\n.p-fluid .p-dropdown .p-dropdown-label {\n  width: 1%;\n}\n</style>\n']},media:void 0})}),c,undefined,false,undefined,!1,p,void 0,void 0);
