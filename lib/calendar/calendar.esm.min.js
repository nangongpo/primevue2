import{DomHandler as e,ConnectedOverlayScrollHandler as n,UniqueComponentId as t}from"primevue2/utils";import i from"primevue2/inputtext";import a from"primevue2/button";import r from"primevue2/ripple";function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n,t){var i;return(n="symbol"==c(i=u(n,"string"))?i:i+"")in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){if("object"!=c(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var i=t.call(e,n||"default");if("object"!=c(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function h(e){return m(e)||p(e)||v(e)||d()}function d(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function p(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function m(e){if(Array.isArray(e))return y(e)}function f(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=v(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var i=0,a=function(){};return{s:a,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,s=!0,l=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return s=e.done,e},e:function(e){l=!0,r=e},f:function(){try{s||null==t.return||t.return()}finally{if(l)throw r}}}}function v(e,n){if(e){if("string"==typeof e)return y(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?y(e,n):void 0}}function y(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}var A={name:"Calendar",inheritAttrs:!1,props:{value:null,selectionMode:{type:String,default:"single"},dateFormat:String,inline:{type:Boolean,default:!1},showOtherMonths:{type:Boolean,default:!0},selectOtherMonths:{type:Boolean,default:!1},showIcon:{type:Boolean,default:!1},icon:{type:String,default:"pi pi-calendar"},numberOfMonths:{type:Number,default:1},responsiveOptions:Array,view:{type:String,default:"date"},touchUI:{type:Boolean,default:!1},monthNavigator:{type:Boolean,default:!1},yearNavigator:{type:Boolean,default:!1},yearRange:{type:String,default:null},panelClass:{type:String,default:null},panelStyle:{type:String,default:null},minDate:{type:Date,value:null},maxDate:{type:Date,value:null},disabledDates:{type:Array,value:null},disabledDays:{type:Array,value:null},maxDateCount:{type:Number,value:null},showOnFocus:{type:Boolean,default:!0},autoZIndex:{type:Boolean,default:!0},baseZIndex:{type:Number,default:0},showButtonBar:{type:Boolean,default:!1},shortYearCutoff:{type:String,default:"+10"},showTime:{type:Boolean,default:!1},timeOnly:{type:Boolean,default:!1},hourFormat:{type:String,default:"24"},stepHour:{type:Number,default:1},stepMinute:{type:Number,default:1},stepSecond:{type:Number,default:1},showSeconds:{type:Boolean,default:!1},hideOnDateTimeSelect:{type:Boolean,default:!1},timeSeparator:{type:String,default:":"},showWeek:{type:Boolean,default:!1},manualInput:{type:Boolean,default:!0},ariaLabelledBy:{type:String,default:null},appendTo:{type:String,default:null},inputClass:null,inputStyle:null,className:null,styles:null},navigationState:null,timePickerChange:!1,scrollHandler:null,outsideClickListener:null,maskClickListener:null,resizeListener:null,mask:null,timePickerTimer:null,isKeydown:!1,preventFocus:!1,created:function(){this.updateCurrentMetaData()},mounted:function(){this.createResponsiveStyle(),this.inline&&(this.$refs.overlay&&this.$refs.overlay.setAttribute(this.attributeSelector,""),this.$attrs.disabled||(this.initFocusableCell(),this.$refs.overlay.style.width=e.getOuterWidth(this.$el)+"px"))},updated:function(){this.$refs.overlay&&(this.preventFocus=!0,this.updateFocus()),this.$refs.input&&null!=this.selectionStart&&null!=this.selectionEnd&&(this.$refs.input.$el.selectionStart=this.selectionStart,this.$refs.input.$el.selectionEnd=this.selectionEnd,this.selectionStart=null,this.selectionEnd=null)},beforeDestroy:function(){this.timePickerTimer&&clearTimeout(this.timePickerTimer),this.mask&&this.destroyMask(),this.destroyResponsiveStyleElement(),this.restoreAppend(),this.unbindOutsideClickListener(),this.unbindResizeListener(),this.scrollHandler&&(this.scrollHandler.destroy(),this.scrollHandler=null)},data:function(){return{currentMonth:null,currentYear:null,currentHour:null,currentMinute:null,currentSecond:null,pm:null,focused:!1,overlayVisible:!1,currentView:this.view}},watch:{value:function(){this.updateCurrentMetaData()},months:function(){this.$refs.overlay&&(this.focused||setTimeout(this.updateFocus,0))},numberOfMonths:function(){this.destroyResponsiveStyleElement(),this.createResponsiveStyle()},responsiveOptions:function(){this.destroyResponsiveStyleElement(),this.createResponsiveStyle()},currentView:function(){var e=this;Promise.resolve(null).then((function(){return e.alignOverlay()}))}},methods:{isComparable:function(){return null!=this.value&&"string"!=typeof this.value},isSelected:function(e){if(!this.isComparable())return!1;if(this.value){if(this.isSingleSelection())return this.isDateEquals(this.value,e);if(this.isMultipleSelection()){var n,t=!1,i=f(this.value);try{for(i.s();!(n=i.n()).done;){if(t=this.isDateEquals(n.value,e))break}}catch(e){i.e(e)}finally{i.f()}return t}if(this.isRangeSelection())return this.value[1]?this.isDateEquals(this.value[0],e)||this.isDateEquals(this.value[1],e)||this.isDateBetween(this.value[0],this.value[1],e):this.isDateEquals(this.value[0],e)}return!1},isMonthSelected:function(e){var n=this;if(this.isComparable()){if("month"!==this.view)return!1;var t=this.isRangeSelection()?this.value[0]:this.value,i=function(t){return t.getMonth()===e&&t.getFullYear()===n.currentYear};return this.isMultipleSelection()?t.some(i):i(t)}return!1},isYearSelected:function(e){if(this.isComparable()){if("year"!==this.view)return!1;var n=this.isRangeSelection()?this.value[0]:this.value;return!(this.isMultipleSelection()||!this.isComparable())&&n.getFullYear()===e}return!1},isDateEquals:function(e,n){return!!e&&(e.getDate()===n.day&&e.getMonth()===n.month&&e.getFullYear()===n.year)},isDateBetween:function(e,n,t){if(e&&n){var i=new Date(t.year,t.month,t.day);return e.getTime()<=i.getTime()&&n.getTime()>=i.getTime()}return!1},getFirstDayOfMonthIndex:function(e,n){var t=new Date;t.setDate(1),t.setMonth(e),t.setFullYear(n);var i=t.getDay()+this.sundayIndex;return i>=7?i-7:i},getDaysCountInMonth:function(e,n){return 32-this.daylightSavingAdjust(new Date(n,e,32)).getDate()},getDaysCountInPrevMonth:function(e,n){var t=this.getPreviousMonthAndYear(e,n);return this.getDaysCountInMonth(t.month,t.year)},getPreviousMonthAndYear:function(e,n){var t,i;return 0===e?(t=11,i=n-1):(t=e-1,i=n),{month:t,year:i}},getNextMonthAndYear:function(e,n){var t,i;return 11===e?(t=0,i=n+1):(t=e+1,i=n),{month:t,year:i}},daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},isToday:function(e,n,t,i){return e.getDate()===n&&e.getMonth()===t&&e.getFullYear()===i},isSelectable:function(e,n,t,i){var a=!0,r=!0,s=!0,l=!0;return!(i&&!this.selectOtherMonths)&&(this.minDate&&(this.minDate.getFullYear()>t||this.minDate.getFullYear()===t&&(this.minDate.getMonth()>n||this.minDate.getMonth()===n&&this.minDate.getDate()>e))&&(a=!1),this.maxDate&&(this.maxDate.getFullYear()<t||this.maxDate.getFullYear()===t&&(this.maxDate.getMonth()<n||this.maxDate.getMonth()===n&&this.maxDate.getDate()<e))&&(r=!1),this.disabledDates&&(s=!this.isDateDisabled(e,n,t)),this.disabledDays&&(l=!this.isDayDisabled(e,n,t)),a&&r&&s&&l)},onOverlayEnter:function(n){n.setAttribute(this.attributeSelector,""),this.autoZIndex&&(this.$refs.overlay.style.zIndex=String(this.baseZIndex+e.generateZIndex())),this.appendContainer(),this.alignOverlay(),this.$emit("show")},onOverlayEnterComplete:function(){this.bindOutsideClickListener(),this.bindScrollListener(),this.bindResizeListener()},onOverlayLeave:function(){this.currentView=this.view,this.unbindOutsideClickListener(),this.unbindScrollListener(),this.unbindResizeListener(),this.$emit("hide"),this.mask&&this.disableModality()},onPrevButtonClick:function(e){this.showOtherMonths&&(this.navigationState={backward:!0,button:!0},this.navBackward(e))},onNextButtonClick:function(e){this.showOtherMonths&&(this.navigationState={backward:!1,button:!0},this.navForward(e))},navBackward:function(e){e.preventDefault(),this.isEnabled()&&("month"===this.currentView?this.decrementYear():"year"===this.currentView?this.decrementDecade():(0===this.currentMonth?(this.currentMonth=11,this.decrementYear()):this.currentMonth--,this.$emit("month-change",{month:this.currentMonth+1,year:this.currentYear})))},navForward:function(e){e.preventDefault(),this.isEnabled()&&("month"===this.currentView?this.incrementYear():"year"===this.currentView?this.incrementDecade():(11===this.currentMonth?(this.currentMonth=0,this.incrementYear()):this.currentMonth++,this.$emit("month-change",{month:this.currentMonth+1,year:this.currentYear})))},decrementYear:function(){this.currentYear--},decrementDecade:function(){this.currentYear=this.currentYear-10},incrementYear:function(){this.currentYear++},incrementDecade:function(){this.currentYear=this.currentYear+10},switchToMonthView:function(e){this.currentView="month",setTimeout(this.updateFocus,0),e.preventDefault()},switchToYearView:function(e){this.currentView="year",setTimeout(this.updateFocus,0),e.preventDefault()},isEnabled:function(){return!this.$attrs.disabled&&!this.$attrs.readonly},updateCurrentTimeMeta:function(e){var n=e.getHours();"12"===this.hourFormat?(this.pm=n>11,this.currentHour=n>=12?12==n?12:n-12:0==n?12:n):this.currentHour=e.getHours(),this.currentMinute=e.getMinutes(),this.currentSecond=e.getSeconds()},bindOutsideClickListener:function(){var e=this;this.outsideClickListener||(this.outsideClickListener=function(n){e.overlayVisible&&e.isOutsideClicked(n)&&(e.overlayVisible=!1)},document.addEventListener("mousedown",this.outsideClickListener))},unbindOutsideClickListener:function(){this.outsideClickListener&&(document.removeEventListener("mousedown",this.outsideClickListener),this.outsideClickListener=null)},bindScrollListener:function(){var e=this;this.scrollHandler||(this.scrollHandler=new n(this.$el,(function(){e.overlayVisible&&(e.overlayVisible=!1)}))),this.scrollHandler.bindScrollListener()},unbindScrollListener:function(){this.scrollHandler&&this.scrollHandler.unbindScrollListener()},bindResizeListener:function(){var e=this;this.resizeListener||(this.resizeListener=function(){e.overlayVisible&&(e.overlayVisible=!1)},window.addEventListener("resize",this.resizeListener))},unbindResizeListener:function(){this.resizeListener&&(window.removeEventListener("resize",this.resizeListener),this.resizeListener=null)},isOutsideClicked:function(e){return!(this.$el.isSameNode(e.target)||this.isNavIconClicked(e)||this.$el.contains(e.target)||this.$refs.overlay&&this.$refs.overlay.contains(e.target))},isNavIconClicked:function(n){return e.hasClass(n.target,"p-datepicker-prev")||e.hasClass(n.target,"p-datepicker-prev-icon")||e.hasClass(n.target,"p-datepicker-next")||e.hasClass(n.target,"p-datepicker-next-icon")},alignOverlay:function(){this.touchUI?this.enableModality():this.$refs.overlay&&(this.appendTo?e.absolutePosition(this.$refs.overlay,this.$el):e.relativePosition(this.$refs.overlay,this.$el))},onButtonClick:function(){this.isEnabled()&&(this.overlayVisible?this.overlayVisible=!1:(this.$refs.input.$el.focus(),this.overlayVisible=!0))},isDateDisabled:function(e,n,t){if(this.disabledDates){var i,a=f(this.disabledDates);try{for(a.s();!(i=a.n()).done;){var r=i.value;if(r.getFullYear()===t&&r.getMonth()===n&&r.getDate()===e)return!0}}catch(e){a.e(e)}finally{a.f()}}return!1},isDayDisabled:function(e,n,t){if(this.disabledDays){var i=new Date(t,n,e).getDay();return-1!==this.disabledDays.indexOf(i)}return!1},onMonthDropdownChange:function(e){this.currentMonth=parseInt(e),this.$emit("month-change",{month:this.currentMonth+1,year:this.currentYear})},onYearDropdownChange:function(e){this.currentYear=parseInt(e),this.$emit("year-change",{month:this.currentMonth+1,year:this.currentYear})},onDateSelect:function(n,t){var i=this;if(!this.$attrs.disabled&&t.selectable){if(e.find(this.$refs.overlay,".p-datepicker-calendar td span:not(.p-disabled)").forEach((function(e){return e.tabIndex=-1})),n&&n.currentTarget.focus(),this.isMultipleSelection()&&this.isSelected(t)){var a=this.value.filter((function(e){return!i.isDateEquals(e,t)}));this.updateModel(a)}else this.shouldSelectDate(t)&&(t.otherMonth?(this.currentMonth=t.month,this.currentYear=t.year,this.selectDate(t)):this.selectDate(t));!this.isSingleSelection()||this.showTime&&!this.hideOnDateTimeSelect||setTimeout((function(){i.overlayVisible=!1}),150)}},selectDate:function(e){var n=new Date(e.year,e.month,e.day);this.showTime&&(n.setHours("12"===this.hourFormat&&this.pm&&12!=this.currentHour?this.currentHour+12:this.currentHour),n.setMinutes(this.currentMinute),n.setSeconds(this.currentSecond)),this.minDate&&this.minDate>n&&(this.currentHour=(n=this.minDate).getHours(),this.currentMinute=n.getMinutes(),this.currentSecond=n.getSeconds()),this.maxDate&&this.maxDate<n&&(this.currentHour=(n=this.maxDate).getHours(),this.currentMinute=n.getMinutes(),this.currentSecond=n.getSeconds());var t=null;if(this.isSingleSelection())t=n;else if(this.isMultipleSelection())t=this.value?[].concat(h(this.value),[n]):[n];else if(this.isRangeSelection())if(this.value&&this.value.length){var i=this.value[0],a=this.value[1];!a&&n.getTime()>=i.getTime()?a=n:(i=n,a=null),t=[i,a]}else t=[n,null];null!==t&&this.updateModel(t),this.$emit("date-select",n)},updateModel:function(e){this.$emit("input",e)},shouldSelectDate:function(){return!this.isMultipleSelection()||(null==this.maxDateCount||this.maxDateCount>(this.value?this.value.length:0))},isSingleSelection:function(){return"single"===this.selectionMode},isRangeSelection:function(){return"range"===this.selectionMode},isMultipleSelection:function(){return"multiple"===this.selectionMode},formatValue:function(e){if("string"==typeof e)return e;var n="";if(e)try{if(this.isSingleSelection())n=this.formatDateTime(e);else if(this.isMultipleSelection())for(var t=0;t<e.length;t++){n+=this.formatDateTime(e[t]),t!==e.length-1&&(n+=", ")}else if(this.isRangeSelection()&&e&&e.length){var i=e[1];n=this.formatDateTime(e[0]),i&&(n+=" - "+this.formatDateTime(i))}}catch(t){n=e}return n},formatDateTime:function(e){var n=null;return e&&(this.timeOnly?n=this.formatTime(e):(n=this.formatDate(e,this.datePattern),this.showTime&&(n+=" "+this.formatTime(e)))),n},formatDate:function(e,n){if(!e)return"";var t,i=function(e){var i=t+1<n.length&&n.charAt(t+1)===e;return i&&t++,i},a=function(e,n,t){var a=""+n;if(i(e))for(;a.length<t;)a="0"+a;return a},r=function(e,n,t,a){return i(e)?a[n]:t[n]},s="",l=!1;if(e)for(t=0;t<n.length;t++)if(l)"'"!==n.charAt(t)||i("'")?s+=n.charAt(t):l=!1;else switch(n.charAt(t)){case"d":s+=a("d",e.getDate(),2);break;case"D":s+=r("D",e.getDay(),this.$primevue.config.locale.dayNamesShort,this.$primevue.config.locale.dayNames);break;case"o":s+=a("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":s+=a("m",e.getMonth()+1,2);break;case"M":s+=r("M",e.getMonth(),this.$primevue.config.locale.monthNamesShort,this.$primevue.config.locale.monthNames);break;case"y":s+=i("y")?e.getFullYear():(e.getFullYear()%100<10?"0":"")+e.getFullYear()%100;break;case"@":s+=e.getTime();break;case"!":s+=1e4*e.getTime()+this.ticksTo1970;break;case"'":i("'")?s+="'":l=!0;break;default:s+=n.charAt(t)}return s},formatTime:function(e){if(!e)return"";var n="",t=e.getHours(),i=e.getMinutes(),a=e.getSeconds();return"12"===this.hourFormat&&t>11&&12!==t&&(t-=12),n+="12"===this.hourFormat&&0===t?12:t<10?"0"+t:t,n+=":",n+=i<10?"0"+i:i,this.showSeconds&&(n+=":",n+=a<10?"0"+a:a),"12"===this.hourFormat&&(n+=e.getHours()>11?" "+this.pmLabel:" "+this.amLabel),n},onTodayButtonClick:function(e){var n=new Date,t={day:n.getDate(),month:n.getMonth(),year:n.getFullYear(),otherMonth:n.getMonth()!==this.currentMonth||n.getFullYear()!==this.currentYear,today:!0,selectable:!0};this.onDateSelect(null,t),this.$emit("today-click",n),e.preventDefault()},onClearButtonClick:function(e){this.updateModel(null),this.overlayVisible=!1,this.$emit("clear-click",e),e.preventDefault()},onTimePickerElementMouseDown:function(e,n,t){this.isEnabled()&&(this.repeat(e,null,n,t),e.preventDefault())},onTimePickerElementMouseUp:function(e){this.isEnabled()&&(this.clearTimePickerTimer(),this.updateModelTime(),e.preventDefault())},onTimePickerElementMouseLeave:function(){this.clearTimePickerTimer()},repeat:function(e,n,t,i){var a=this,r=n||500;switch(this.clearTimePickerTimer(),this.timePickerTimer=setTimeout((function(){a.repeat(e,100,t,i)}),r),t){case 0:1===i?this.incrementHour(e):this.decrementHour(e);break;case 1:1===i?this.incrementMinute(e):this.decrementMinute(e);break;case 2:1===i?this.incrementSecond(e):this.decrementSecond(e)}},convertTo24Hour:function(e,n){return"12"==this.hourFormat?12===e?n?12:0:n?e+12:e:e},validateTime:function(e,n,t,i){var a=this.isComparable()?this.value:this.viewDate,r=this.convertTo24Hour(e,i);this.isRangeSelection()&&(a=this.value[1]||this.value[0]),this.isMultipleSelection()&&(a=this.value[this.value.length-1]);var s=a?a.toDateString():null;if(this.minDate&&s&&this.minDate.toDateString()===s){if(this.minDate.getHours()>r)return!1;if(this.minDate.getHours()===r){if(this.minDate.getMinutes()>n)return!1;if(this.minDate.getMinutes()===n&&this.minDate.getSeconds()>t)return!1}}if(this.maxDate&&s&&this.maxDate.toDateString()===s){if(this.maxDate.getHours()<r)return!1;if(this.maxDate.getHours()===r){if(this.maxDate.getMinutes()<n)return!1;if(this.maxDate.getMinutes()===n&&this.maxDate.getSeconds()<t)return!1}}return!0},incrementHour:function(e){var n=this.currentHour+this.stepHour,t=this.pm;"24"==this.hourFormat?n=n>=24?n-24:n:"12"==this.hourFormat&&(this.currentHour<12&&n>11&&(t=!this.pm),n=n>=13?n-12:n),this.validateTime(n,this.currentMinute,this.currentSecond,t)&&(this.currentHour=n,this.pm=t),e.preventDefault()},decrementHour:function(e){var n=this.currentHour-this.stepHour,t=this.pm;"24"==this.hourFormat?n=n<0?24+n:n:"12"==this.hourFormat&&(12===this.currentHour&&(t=!this.pm),n=n<=0?12+n:n),this.validateTime(n,this.currentMinute,this.currentSecond,t)&&(this.currentHour=n,this.pm=t),e.preventDefault()},incrementMinute:function(e){var n=this.currentMinute+this.stepMinute;this.validateTime(this.currentHour,n,this.currentSecond,!0)&&(this.currentMinute=n>59?n-60:n),e.preventDefault()},decrementMinute:function(e){var n=this.currentMinute-this.stepMinute;this.validateTime(this.currentHour,n=n<0?60+n:n,this.currentSecond,!0)&&(this.currentMinute=n),e.preventDefault()},incrementSecond:function(e){var n=this.currentSecond+this.stepSecond;this.validateTime(this.currentHour,this.currentMinute,n,!0)&&(this.currentSecond=n>59?n-60:n),e.preventDefault()},decrementSecond:function(e){var n=this.currentSecond-this.stepSecond;this.validateTime(this.currentHour,this.currentMinute,n=n<0?60+n:n,!0)&&(this.currentSecond=n),e.preventDefault()},updateModelTime:function(){var e=this;this.timePickerChange=!0;var n=this.isComparable()?this.value:new Date;this.isRangeSelection()&&(n=this.value[1]||this.value[0]),this.isMultipleSelection()&&(n=this.value[this.value.length-1]),(n=n?new Date(n.getTime()):new Date).setHours("12"==this.hourFormat?12===this.currentHour?this.pm?12:0:this.pm?this.currentHour+12:this.currentHour:this.currentHour),n.setMinutes(this.currentMinute),n.setSeconds(this.currentSecond),this.isRangeSelection()&&(n=this.value[1]?[this.value[0],n]:[n,null]),this.isMultipleSelection()&&(n=[].concat(h(this.value.slice(0,-1)),[n])),this.updateModel(n),this.$emit("date-select",n),setTimeout((function(){return e.timePickerChange=!1}),0)},toggleAMPM:function(e){this.pm=!this.pm,this.updateModelTime(),e.preventDefault()},clearTimePickerTimer:function(){this.timePickerTimer&&clearInterval(this.timePickerTimer)},onMonthSelect:function(e,n){"month"===this.view?this.onDateSelect(e,{year:this.currentYear,month:n,day:1,selectable:!0}):(this.currentMonth=n,this.currentView="date",this.$emit("month-change",{month:this.currentMonth+1,year:this.currentYear})),setTimeout(this.updateFocus,0)},onYearSelect:function(e,n){"year"===this.view?this.onDateSelect(e,{year:n,month:0,day:1,selectable:!0}):(this.currentYear=n,this.currentView="month",this.$emit("year-change",{month:this.currentMonth+1,year:this.currentYear})),setTimeout(this.updateFocus,0)},enableModality:function(){var n=this;this.mask||(this.mask=document.createElement("div"),this.mask.style.zIndex=String(parseInt(this.$refs.overlay.style.zIndex,10)-1),e.addMultipleClasses(this.mask,"p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter"),this.maskClickListener=function(){n.overlayVisible=!1},this.mask.addEventListener("click",this.maskClickListener),document.body.appendChild(this.mask),e.addClass(document.body,"p-overflow-hidden"))},disableModality:function(){var n=this;this.mask&&(this.overlayVisible=!1,e.addClass(this.mask,"p-component-overlay-leave"),this.mask.addEventListener("animationend",(function(){n.destroyMask()})))},destroyMask:function(){this.mask.removeEventListener("click",this.maskClickListener),this.maskClickListener=null,document.body.removeChild(this.mask),this.mask=null;for(var n,t=document.body.children,i=0;i<t.length;i++){if(e.hasClass(t[i],"p-datepicker-mask-scrollblocker")){n=!0;break}}n||e.removeClass(document.body,"p-overflow-hidden")},updateCurrentMetaData:function(){var e=this.viewDate;this.currentMonth=e.getMonth(),this.currentYear=e.getFullYear(),(this.showTime||this.timeOnly)&&this.updateCurrentTimeMeta(e)},isValidSelection:function(e){var n=this,t=!0;return this.isSingleSelection()?this.isSelectable(e.getDate(),e.getMonth(),e.getFullYear(),!1)||(t=!1):e.every((function(e){return n.isSelectable(e.getDate(),e.getMonth(),e.getFullYear(),!1)}))&&this.isRangeSelection()&&(t=e.length>1&&e[1]>e[0]),t},parseValue:function(e){if(!e||0===e.trim().length)return null;var n;if(this.isSingleSelection())n=this.parseDateTime(e);else if(this.isMultipleSelection()){n=[];var t,i=f(e.split(","));try{for(i.s();!(t=i.n()).done;){n.push(this.parseDateTime(t.value.trim()))}}catch(e){i.e(e)}finally{i.f()}}else if(this.isRangeSelection()){var a=e.split(" - ");n=[];for(var r=0;r<a.length;r++)n[r]=this.parseDateTime(a[r].trim())}return n},parseDateTime:function(e){var n,t=e.split(" ");if(this.timeOnly)n=new Date,this.populateTime(n,t[0],t[1]);else{var i=this.datePattern;this.showTime?(n=this.parseDate(t[0],i),this.populateTime(n,t[1],t[2])):n=this.parseDate(e,i)}return n},populateTime:function(e,n,t){if("12"==this.hourFormat&&!t)throw"Invalid Time";this.pm="PM"===t||"pm"===t;var i=this.parseTime(n);e.setHours(i.hour),e.setMinutes(i.minute),e.setSeconds(i.second)},parseTime:function(e){var n=e.split(":"),t=/^[0-9][0-9]$/;if(n.length!==(this.showSeconds?3:2)||!n[0].match(t)||!n[1].match(t)||this.showSeconds&&!n[2].match(t))throw"Invalid time";var i=parseInt(n[0]),a=parseInt(n[1]),r=this.showSeconds?parseInt(n[2]):null;if(isNaN(i)||isNaN(a)||i>23||a>59||"12"==this.hourFormat&&i>12||this.showSeconds&&(isNaN(r)||r>59))throw"Invalid time";return"12"==this.hourFormat&&12!==i&&this.pm&&(i+=12),{hour:i,minute:a,second:r}},parseDate:function(e,n){if(null==n||null==e)throw"Invalid arguments";if(""===(e="object"===c(e)?e.toString():e+""))return null;var t,i,a,r,s=0,l="string"!=typeof this.shortYearCutoff?this.shortYearCutoff:(new Date).getFullYear()%100+parseInt(this.shortYearCutoff,10),o=-1,u=-1,h=-1,d=-1,p=!1,m=function(e){var i=t+1<n.length&&n.charAt(t+1)===e;return i&&t++,i},f=function(n){var t=m(n),i="@"===n?14:"!"===n?20:"y"===n&&t?4:"o"===n?3:2,a=new RegExp("^\\d{"+("y"===n?i:1)+","+i+"}"),r=e.substring(s).match(a);if(!r)throw"Missing number at position "+s;return s+=r[0].length,parseInt(r[0],10)},v=function(n,t,i){for(var a=-1,r=m(n)?i:t,l=[],o=0;o<r.length;o++)l.push([o,r[o]]);l.sort((function(e,n){return-(e[1].length-n[1].length)}));for(var u=0;u<l.length;u++){var c=l[u][1];if(e.substr(s,c.length).toLowerCase()===c.toLowerCase()){a=l[u][0],s+=c.length;break}}if(-1!==a)return a+1;throw"Unknown name at position "+s},y=function(){if(e.charAt(s)!==n.charAt(t))throw"Unexpected literal at position "+s;s++};for("month"===this.currentView&&(h=1),t=0;t<n.length;t++)if(p)"'"!==n.charAt(t)||m("'")?y():p=!1;else switch(n.charAt(t)){case"d":h=f("d");break;case"D":v("D",this.$primevue.config.locale.dayNamesShort,this.$primevue.config.locale.dayNames);break;case"o":d=f("o");break;case"m":u=f("m");break;case"M":u=v("M",this.$primevue.config.locale.monthNamesShort,this.$primevue.config.locale.monthNames);break;case"y":o=f("y");break;case"@":o=(r=new Date(f("@"))).getFullYear(),u=r.getMonth()+1,h=r.getDate();break;case"!":o=(r=new Date((f("!")-this.ticksTo1970)/1e4)).getFullYear(),u=r.getMonth()+1,h=r.getDate();break;case"'":m("'")?y():p=!0;break;default:y()}if(s<e.length&&(a=e.substr(s),!/^\s+/.test(a)))throw"Extra/unparsed characters found in date: "+a;if(-1===o?o=(new Date).getFullYear():o<100&&(o+=(new Date).getFullYear()-(new Date).getFullYear()%100+(o<=l?0:-100)),d>-1)for(u=1,h=d;;){if(h<=(i=this.getDaysCountInMonth(o,u-1)))break;u++,h-=i}if((r=this.daylightSavingAdjust(new Date(o,u-1,h))).getFullYear()!==o||r.getMonth()+1!==u||r.getDate()!==h)throw"Invalid date";return r},getWeekNumber:function(e){var n=new Date(e.getTime());n.setDate(n.getDate()+4-(n.getDay()||7));var t=n.getTime();return n.setMonth(0),n.setDate(1),Math.floor(Math.round((t-n.getTime())/864e5)/7)+1},onDateCellKeydown:function(n,t,i){var a=n.currentTarget,r=a.parentElement;switch(n.which){case 40:a.tabIndex="-1";var s=e.index(r),l=r.parentElement.nextElementSibling;if(l)e.hasClass(l.children[s].children[0],"p-disabled")?(this.navigationState={backward:!1},this.navForward(n)):(l.children[s].children[0].tabIndex="0",l.children[s].children[0].focus());else this.navigationState={backward:!1},this.navForward(n);n.preventDefault();break;case 38:a.tabIndex="-1";var o=e.index(r),u=r.parentElement.previousElementSibling;if(u){var c=u.children[o].children[0];e.hasClass(c,"p-disabled")?(this.navigationState={backward:!0},this.navBackward(n)):(c.tabIndex="0",c.focus())}else this.navigationState={backward:!0},this.navBackward(n);n.preventDefault();break;case 37:a.tabIndex="-1";var h=r.previousElementSibling;if(h){var d=h.children[0];e.hasClass(d,"p-disabled")?this.navigateToMonth(!0,i):(d.tabIndex="0",d.focus())}else this.navigateToMonth(!0,i);n.preventDefault();break;case 39:a.tabIndex="-1";var p=r.nextElementSibling;if(p){var m=p.children[0];e.hasClass(m,"p-disabled")?this.navigateToMonth(!1,i):(m.tabIndex="0",m.focus())}else this.navigateToMonth(!1,i);n.preventDefault();break;case 13:case 32:this.onDateSelect(n,t),n.preventDefault();break;case 27:this.overlayVisible=!1,n.preventDefault();break;case 9:this.inline||this.trapFocus(n)}},navigateToMonth:function(n,t){if(n)if(1===this.numberOfMonths||0===t)this.navigationState={backward:!0},this.navBackward(event);else{var i=e.find(this.$refs.overlay.children[t-1],".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"),a=i[i.length-1];a.tabIndex="0",a.focus()}else if(1===this.numberOfMonths||t===this.numberOfMonths-1)this.navigationState={backward:!1},this.navForward(event);else{var r=e.findSingle(this.$refs.overlay.children[t+1],".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)");r.tabIndex="0",r.focus()}},onMonthCellKeydown:function(n,t){var i=n.currentTarget;switch(n.which){case 38:case 40:i.tabIndex="-1";var a=i.parentElement.children,r=e.index(i),s=a[40===n.which?r+3:r-3];s&&(s.tabIndex="0",s.focus()),n.preventDefault();break;case 37:i.tabIndex="-1";var l=i.previousElementSibling;l?(l.tabIndex="0",l.focus()):(this.navigationState={backward:!0},this.navBackward(n)),n.preventDefault();break;case 39:i.tabIndex="-1";var o=i.nextElementSibling;o?(o.tabIndex="0",o.focus()):(this.navigationState={backward:!1},this.navForward(n)),n.preventDefault();break;case 13:case 32:this.onMonthSelect(n,t),n.preventDefault();break;case 27:this.overlayVisible=!1,n.preventDefault();break;case 9:this.inline||this.trapFocus(n)}},onYearCellKeydown:function(n,t){var i=n.currentTarget;switch(n.which){case 38:case 40:i.tabIndex="-1";var a=i.parentElement.children,r=e.index(i),s=a[40===n.which?r+2:r-2];s&&(s.tabIndex="0",s.focus()),n.preventDefault();break;case 37:i.tabIndex="-1";var l=i.previousElementSibling;l?(l.tabIndex="0",l.focus()):(this.navigationState={backward:!0},this.navBackward(n)),n.preventDefault();break;case 39:i.tabIndex="-1";var o=i.nextElementSibling;o?(o.tabIndex="0",o.focus()):(this.navigationState={backward:!1},this.navForward(n)),n.preventDefault();break;case 13:case 32:this.onMonthSelect(n,t),n.preventDefault();break;case 27:this.overlayVisible=!1,n.preventDefault();break;case 9:this.trapFocus(n)}},updateFocus:function(){var n;if(this.navigationState){if(this.navigationState.button)this.initFocusableCell(),this.navigationState.backward?e.findSingle(this.$refs.overlay,".p-datepicker-prev").focus():e.findSingle(this.$refs.overlay,".p-datepicker-next").focus();else{var t;if(this.navigationState.backward)(t=e.find(this.$refs.overlay,"month"===this.currentView?".p-monthpicker .p-monthpicker-month:not(.p-disabled)":"year"===this.currentView?".p-yearpicker .p-yearpicker-year:not(.p-disabled)":".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)"))&&t.length>0&&(n=t[t.length-1]);else n=e.findSingle(this.$refs.overlay,"month"===this.currentView?".p-monthpicker .p-monthpicker-month:not(.p-disabled)":"year"===this.currentView?".p-yearpicker .p-yearpicker-year:not(.p-disabled)":".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)");n&&(n.tabIndex="0",n.focus())}this.navigationState=null}else this.initFocusableCell()},initFocusableCell:function(){var n;if("month"===this.currentView){var t=e.find(this.$refs.overlay,".p-monthpicker .p-monthpicker-month"),i=e.findSingle(this.$refs.overlay,".p-monthpicker .p-monthpicker-month.p-highlight");t.forEach((function(e){return e.tabIndex=-1})),n=i||t[0]}else if("year"===this.currentView){var a=e.find(this.$refs.overlay,".p-yearpicker .p-yearpicker-year"),r=e.findSingle(this.$refs.overlay,".p-yearpicker .p-yearpicker-year.p-highlight");a.forEach((function(e){return e.tabIndex=-1})),n=r||a[0]}else if(this.$refs.overlay&&!(n=e.findSingle(this.$refs.overlay,"span.p-highlight"))){var s=e.findSingle(this.$refs.overlay,"td.p-datepicker-today span:not(.p-disabled):not(.p-ink)");n=s||e.findSingle(this.$refs.overlay,".p-datepicker-calendar td span:not(.p-disabled):not(.p-ink")}n&&(n.tabIndex="0",this.preventFocus||this.navigationState&&this.navigationState.button||this.timePickerChange||n.focus(),this.preventFocus=!1)},trapFocus:function(n){n.preventDefault();var t=e.getFocusableElements(this.$refs.overlay);if(t&&t.length>0)if(document.activeElement){var i=t.indexOf(document.activeElement);n.shiftKey?-1==i||0===i?t[t.length-1].focus():t[i-1].focus():-1==i||i===t.length-1?t[0].focus():t[i+1].focus()}else t[0].focus()},onContainerButtonKeydown:function(e){switch(e.which){case 9:this.inline||this.trapFocus(e);break;case 27:this.overlayVisible=!1,e.preventDefault()}},onInput:function(e){if(this.isKeydown){this.isKeydown=!1;try{this.selectionStart=this.$refs.input.$el.selectionStart,this.selectionEnd=this.$refs.input.$el.selectionEnd;var n=this.parseValue(e);this.isValidSelection(n)&&this.updateModel(n)}catch(n){this.updateModel(e)}}},appendContainer:function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.$refs.overlay):document.getElementById(this.appendTo).appendChild(this.$refs.overlay))},restoreAppend:function(){this.$refs.overlay&&this.appendTo&&("body"===this.appendTo?document.body.removeChild(this.$refs.overlay):document.getElementById(this.appendTo).removeChild(this.$refs.overlay))},getMonthName:function(e){return this.$primevue.config.locale.monthNames[e]},getYear:function(e){return("month"===this.currentView?this.currentYear:e.year)+this.yearName},createResponsiveStyle:function(){if(this.numberOfMonths>1&&this.responsiveOptions){this.responsiveStyleElement||(this.responsiveStyleElement=document.createElement("style"),this.responsiveStyleElement.type="text/css",document.body.appendChild(this.responsiveStyleElement));var e="";if(this.responsiveOptions)for(var n=h(this.responsiveOptions).filter((function(e){return!(!e.breakpoint||!e.numMonths)})).sort((function(e,n){return-1*e.breakpoint.localeCompare(n.breakpoint,void 0,{numeric:!0})})),t=0;t<n.length;t++){for(var i=n[t],a=i.breakpoint,r=i.numMonths,s="\n                            .p-datepicker[".concat(this.attributeSelector,"] .p-datepicker-group:nth-child(").concat(r,") .p-datepicker-next {\n                                display: inline-flex !important;\n                            }\n                        "),l=r;l<this.numberOfMonths;l++)s+="\n                                .p-datepicker[".concat(this.attributeSelector,"] .p-datepicker-group:nth-child(").concat(l+1,") {\n                                    display: none !important;\n                                }\n                            ");e+="\n                            @media screen and (max-width: ".concat(a,") {\n                                ").concat(s,"\n                            }\n                        ")}this.responsiveStyleElement.innerHTML=e}},destroyResponsiveStyleElement:function(){this.responsiveStyleElement&&(this.responsiveStyleElement.remove(),this.responsiveStyleElement=null)}},computed:{listeners:function(){var n=this,t=this;return l(l({},t.$listeners),{},{input:function(e){n.onInput(e)},focus:function(e){t.focus=!0,t.showOnFocus&&t.isEnabled()&&(t.overlayVisible=!0),t.focused=!0,t.$emit("focus",e)},blur:function(e){t.focused=!1,t.$emit("blur",e)},keydown:function(n){t.isKeydown=!0,40===n.keyCode&&t.$refs.overlay?t.trapFocus(n):27===n.keyCode?t.overlayVisible&&(t.overlayVisible=!1,n.preventDefault()):9===n.keyCode&&(t.showOnFocus&&e.getFocusableElements(t.$refs.overlay).forEach((function(e){return e.tabIndex="-1"})),t.overlayVisible&&(t.overlayVisible=!1)),t.$emit("keydown",n)}})},viewDate:function(){var e=this.value;return"string"==typeof e?new Date:(e&&Array.isArray(e)&&(this.isRangeSelection()?e=e[1]||e[0]:this.isMultipleSelection()&&(e=e[e.length-1])),e||new Date)},inputFieldValue:function(){return this.formatValue(this.value)},containerClass:function(){return["p-calendar p-component p-inputwrapper",this.className,{"p-calendar-w-btn":this.showIcon,"p-calendar-timeonly":this.timeOnly,"p-inputwrapper-filled":this.value,"p-inputwrapper-focus":this.focused}]},panelStyleClass:function(){return["p-datepicker p-component",this.panelClass,{"p-datepicker-inline":this.inline,"p-disabled":this.$attrs.disabled,"p-datepicker-timeonly":this.timeOnly,"p-datepicker-multiple-month":this.numberOfMonths>1,"p-datepicker-monthpicker":"month"===this.currentView,"p-datepicker-yearpicker":"year"===this.currentView,"p-datepicker-touch-ui":this.touchUI}]},months:function(){for(var e=[],n=0;n<this.numberOfMonths;n++){var t=this.currentMonth+n,i=this.currentYear;t>11&&(t=t%11-1,i+=1);for(var a=[],r=this.getFirstDayOfMonthIndex(t,i),s=this.getDaysCountInMonth(t,i),l=this.getDaysCountInPrevMonth(t,i),o=1,u=new Date,c=[],h=Math.ceil((s+r)/7),d=0;d<h;d++){var p=[];if(0==d){for(var m=l-r+1;m<=l;m++){var f=this.getPreviousMonthAndYear(t,i);p.push({day:m,month:f.month,year:f.year,otherMonth:!0,today:this.isToday(u,m,f.month,f.year),selectable:this.isSelectable(m,f.month,f.year,!0)})}for(var v=7-p.length,y=0;y<v;y++)p.push({day:o,month:t,year:i,today:this.isToday(u,o,t,i),selectable:this.isSelectable(o,t,i,!1)}),o++}else for(var A=0;A<7;A++){if(o>s){var k=this.getNextMonthAndYear(t,i);p.push({day:o-s,month:k.month,year:k.year,otherMonth:!0,today:this.isToday(u,o-s,k.month,k.year),selectable:this.isSelectable(o-s,k.month,k.year,!0)})}else p.push({day:o,month:t,year:i,today:this.isToday(u,o,t,i),selectable:this.isSelectable(o,t,i,!1)});o++}this.showWeek&&c.push(this.getWeekNumber(new Date(p[0].year,p[0].month,p[0].day))),a.push(p)}e.push({month:t,year:i,dates:a,weekNumbers:c})}return e},weekDays:function(){for(var e=[],n=this.$primevue.config.locale.firstDayOfWeek,t=0;t<7;t++)e.push(this.$primevue.config.locale.dayNamesMin[n]),n=6==n?0:++n;return e},ticksTo1970:function(){return 24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*60*60*1e7},sundayIndex:function(){return this.$primevue.config.locale.firstDayOfWeek>0?7-this.$primevue.config.locale.firstDayOfWeek:0},datePattern:function(){return this.dateFormat||this.$primevue.config.locale.dateFormat},yearOptions:function(){if(this.yearRange){var e=this.yearRange.split(":"),n=parseInt(e[0]),t=parseInt(e[1]),i=[];this.currentYear<n?this.currentYear=t:this.currentYear>t&&(this.currentYear=n);for(var a=n;a<=t;a++)i.push(a);return i}return null},monthPickerValues:function(){for(var e=[],n=0;n<=11;n++)e.push(this.$primevue.config.locale.monthNamesShort[n]);return e},yearPickerValues:function(){for(var e=[],n=this.currentYear-this.currentYear%10,t=0;t<10;t++)e.push(n+t);return e},formattedCurrentHour:function(){return this.currentHour<10?"0"+this.currentHour:this.currentHour},formattedCurrentMinute:function(){return this.currentMinute<10?"0"+this.currentMinute:this.currentMinute},formattedCurrentSecond:function(){return this.currentSecond<10?"0"+this.currentSecond:this.currentSecond},datePickerTitle:function(){return this.$primevue.config.locale.datePickerTitle||["date","year"]},amLabel:function(){return this.$primevue.config.locale.am||"AM"},pmLabel:function(){return this.$primevue.config.locale.pm||"PM"},todayLabel:function(){return this.$primevue.config.locale.today},clearLabel:function(){return this.$primevue.config.locale.clear},weekHeaderLabel:function(){return this.$primevue.config.locale.weekHeader},monthNames:function(){return this.$primevue.config.locale.monthNames},yearName:function(){return this.$primevue.config.locale.yearName},attributeSelector:function(){return t()},switchViewButtonDisabled:function(){return this.numberOfMonths>1||this.$attrs.disabled}},components:{CalendarInputText:i,CalendarButton:a},directives:{ripple:r}};function k(e,n,t,i,a,r,s,l,o,u){"boolean"!=typeof s&&(o=l,l=s,s=!1);const c="function"==typeof t?t.options:t;let h;if(e&&e.render&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns,c._compiled=!0,a&&(c.functional=!0)),i&&(c._scopeId=i),r?(h=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,o(e)),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=h):n&&(h=s?function(e){n.call(this,u(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,l(e))}),h)if(c.functional){const e=c.render;c.render=function(n,t){return h.call(t),e(n,t)}}else{const e=c.beforeCreate;c.beforeCreate=e?[].concat(e,h):[h]}return t}const b="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function g(e){return(e,n)=>D(e,n)}let w;const M={};function D(e,n){const t=b?n.media||"default":e,i=M[t]||(M[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===w&&(w=document.head||document.getElementsByTagName("head")[0]),w.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),a=i.element.childNodes;a[e]&&i.element.removeChild(a[e]),a.length?i.element.insertBefore(n,a[e]):i.element.appendChild(n)}}}var C=A,S=function(){var e=this,n=e._self._c||e.$createElement;return n("span",{class:e.containerClass,style:e.styles},[e.inline?e._e():n("CalendarInputText",e._g(e._b({ref:"input",class:e.inputClass,style:e.inputStyle,attrs:{type:"text",value:e.inputFieldValue,readonly:!e.manualInput,"aria-labelledby":e.ariaLabelledBy,inputmode:"none"}},"CalendarInputText",e.$attrs,!1),e.listeners)),e._v(" "),e.showIcon?n("CalendarButton",{staticClass:"p-datepicker-trigger",attrs:{icon:e.icon,tabindex:"-1",disabled:e.$attrs.disabled,type:"button","aria-label":e.inputFieldValue},on:{click:e.onButtonClick}}):e._e(),e._v(" "),n("transition",{attrs:{name:"p-connected-overlay"},on:{enter:e.onOverlayEnter,"after-enter":e.onOverlayEnterComplete,leave:e.onOverlayLeave}},[e.inline||e.overlayVisible?n("div",{ref:"overlay",class:e.panelStyleClass,attrs:{role:e.inline?null:"dialog","aria-labelledby":e.ariaLabelledBy}},[e.timeOnly?e._e():[n("div",{staticClass:"p-datepicker-group-container"},e._l(e.months,(function(t,i){return n("div",{key:t.month+t.year,staticClass:"p-datepicker-group"},[n("div",{staticClass:"p-datepicker-header"},[e._t("header"),e._v(" "),n("button",{directives:[{name:"show",rawName:"v-show",value:0===i,expression:"groupIndex === 0"},{name:"ripple",rawName:"v-ripple"}],staticClass:"p-datepicker-prev p-link",attrs:{type:"button",disabled:e.$attrs.disabled},on:{click:e.onPrevButtonClick,keydown:e.onContainerButtonKeydown}},[n("span",{staticClass:"p-datepicker-prev-icon pi pi-chevron-left"})]),e._v(" "),n("div",{staticClass:"p-datepicker-title"},[e._l(e.datePickerTitle,(function(i){return["date"===i&&"date"===e.currentView?n("button",{key:"title_"+i,staticClass:"p-datepicker-month p-link",attrs:{type:"button",disabled:e.switchViewButtonDisabled},on:{click:e.switchToMonthView,keydown:e.onContainerButtonKeydown}},[e._v("\n                    "+e._s(e.getMonthName(t.month))+"\n                  ")]):e._e(),e._v(" "),"year"===i&&"year"!==e.currentView?n("button",{key:"title_"+i,staticClass:"p-datepicker-year p-link",attrs:{type:"button",disabled:e.switchViewButtonDisabled},on:{click:e.switchToYearView,keydown:e.onContainerButtonKeydown}},[e._v("\n                    "+e._s(e.getYear(t))+"\n                  ")]):e._e(),e._v(" "),"year"===i&&"year"===e.currentView?n("span",{key:"title_"+i+"_decade",staticClass:"p-datepicker-decade"},[e._t("decade",(function(){return[e._v("\n                      "+e._s(e.yearPickerValues[0])+" - "+e._s(e.yearPickerValues[e.yearPickerValues.length-1])+"\n                    ")]}),{years:e.yearPickerValues})],2):e._e()]}))],2),e._v(" "),n("button",{directives:[{name:"show",rawName:"v-show",value:1===e.numberOfMonths||i===e.numberOfMonths-1,expression:"numberOfMonths === 1 ? true : groupIndex === numberOfMonths - 1"},{name:"ripple",rawName:"v-ripple"}],staticClass:"p-datepicker-next p-link",attrs:{type:"button",disabled:e.$attrs.disabled},on:{click:e.onNextButtonClick,keydown:e.onContainerButtonKeydown}},[n("span",{staticClass:"p-datepicker-next-icon pi pi-chevron-right"})])],2),e._v(" "),"date"===e.currentView?n("div",{staticClass:"p-datepicker-calendar-container"},[n("table",{staticClass:"p-datepicker-calendar"},[n("thead",[n("tr",[e.showWeek?n("th",{staticClass:"p-datepicker-weekheader p-disabled",attrs:{scope:"col"}},[n("span",[e._v(e._s(e.weekHeaderLabel))])]):e._e(),e._v(" "),e._l(e.weekDays,(function(t){return n("th",{key:t,attrs:{scope:"col"}},[n("span",[e._v(e._s(t))])])}))],2)]),e._v(" "),n("tbody",e._l(t.dates,(function(a,r){return n("tr",{key:a[0].day+""+a[0].month},[e.showWeek?n("td",{staticClass:"p-datepicker-weeknumber"},[n("span",{staticClass:"p-disabled"},[t.weekNumbers[r]<10?n("span",{staticStyle:{visibility:"hidden"}},[e._v("0")]):e._e(),e._v("\n                        "+e._s(t.weekNumbers[r])+"\n                      ")])]):e._e(),e._v(" "),e._l(a,(function(t){return n("td",{key:t.day+""+t.month,class:{"p-datepicker-other-month":t.otherMonth,"p-datepicker-today":t.today}},[n("span",{directives:[{name:"ripple",rawName:"v-ripple"}],class:{"p-highlight":e.isSelected(t),"p-disabled":!t.selectable},attrs:{draggable:"false"},on:{click:function(n){return e.onDateSelect(n,t)},keydown:function(n){return e.onDateCellKeydown(n,t,i)}}},[e._t("date",(function(){return[e._v(e._s(t.day))]}),{date:t})],2)])}))],2)})),0)])]):e._e()])})),0),e._v(" "),"month"===e.currentView?n("div",{staticClass:"p-monthpicker"},e._l(e.monthPickerValues,(function(t,i){return n("span",{directives:[{name:"ripple",rawName:"v-ripple"}],key:t,staticClass:"p-monthpicker-month",class:{"p-highlight":e.isMonthSelected(i)},on:{click:function(n){return e.onMonthSelect(n,i)},keydown:function(n){return e.onMonthCellKeydown(n,i)}}},[e._v("\n            "+e._s(t)+"\n          ")])})),0):e._e(),e._v(" "),"year"===e.currentView?n("div",{staticClass:"p-yearpicker"},e._l(e.yearPickerValues,(function(t){return n("span",{directives:[{name:"ripple",rawName:"v-ripple"}],key:t,staticClass:"p-yearpicker-year",class:{"p-highlight":e.isYearSelected(t)},on:{click:function(n){return e.onYearSelect(n,t)},keydown:function(n){return e.onYearCellKeydown(n,t)}}},[e._v("\n            "+e._s(t)+"\n          ")])})),0):e._e()],e._v(" "),(e.showTime||e.timeOnly)&&"date"===e.currentView?n("div",{staticClass:"p-timepicker"},[n("div",{staticClass:"p-hour-picker"},[n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{type:"button"},on:{mousedown:function(n){return e.onTimePickerElementMouseDown(n,0,1)},mouseup:function(n){return e.onTimePickerElementMouseUp(n)},keydown:[e.onContainerButtonKeydown,function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseDown(n,0,1)}],mouseleave:function(n){return e.onTimePickerElementMouseLeave()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseUp(n)}}},[n("span",{staticClass:"pi pi-chevron-up"})]),e._v(" "),n("span",[e._v(e._s(e.formattedCurrentHour))]),e._v(" "),n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{type:"button"},on:{mousedown:function(n){return e.onTimePickerElementMouseDown(n,0,-1)},mouseup:function(n){return e.onTimePickerElementMouseUp(n)},keydown:[e.onContainerButtonKeydown,function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseDown(n,0,-1)}],mouseleave:function(n){return e.onTimePickerElementMouseLeave()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseUp(n)}}},[n("span",{staticClass:"pi pi-chevron-down"})])]),e._v(" "),n("div",{staticClass:"p-separator"},[n("span",[e._v(e._s(e.timeSeparator))])]),e._v(" "),n("div",{staticClass:"p-minute-picker"},[n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{disabled:e.$attrs.disabled,type:"button"},on:{mousedown:function(n){return e.onTimePickerElementMouseDown(n,1,1)},mouseup:function(n){return e.onTimePickerElementMouseUp(n)},keydown:[e.onContainerButtonKeydown,function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseDown(n,1,1)}],mouseleave:function(n){return e.onTimePickerElementMouseLeave()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseUp(n)}}},[n("span",{staticClass:"pi pi-chevron-up"})]),e._v(" "),n("span",[e._v(e._s(e.formattedCurrentMinute))]),e._v(" "),n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{disabled:e.$attrs.disabled,type:"button"},on:{mousedown:function(n){return e.onTimePickerElementMouseDown(n,1,-1)},mouseup:function(n){return e.onTimePickerElementMouseUp(n)},keydown:[e.onContainerButtonKeydown,function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseDown(n,1,-1)}],mouseleave:function(n){return e.onTimePickerElementMouseLeave()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseUp(n)}}},[n("span",{staticClass:"pi pi-chevron-down"})])]),e._v(" "),e.showSeconds?n("div",{staticClass:"p-separator"},[n("span",[e._v(e._s(e.timeSeparator))])]):e._e(),e._v(" "),e.showSeconds?n("div",{staticClass:"p-second-picker"},[n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{disabled:e.$attrs.disabled,type:"button"},on:{mousedown:function(n){return e.onTimePickerElementMouseDown(n,2,1)},mouseup:function(n){return e.onTimePickerElementMouseUp(n)},keydown:[e.onContainerButtonKeydown,function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseDown(n,2,1)}],mouseleave:function(n){return e.onTimePickerElementMouseLeave()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseUp(n)}}},[n("span",{staticClass:"pi pi-chevron-up"})]),e._v(" "),n("span",[e._v(e._s(e.formattedCurrentSecond))]),e._v(" "),n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{disabled:e.$attrs.disabled,type:"button"},on:{mousedown:function(n){return e.onTimePickerElementMouseDown(n,2,-1)},mouseup:function(n){return e.onTimePickerElementMouseUp(n)},keydown:[e.onContainerButtonKeydown,function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseDown(n,2,-1)}],mouseleave:function(n){return e.onTimePickerElementMouseLeave()},keyup:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.onTimePickerElementMouseUp(n)}}},[n("span",{staticClass:"pi pi-chevron-down"})])]):e._e(),e._v(" "),"12"==e.hourFormat?n("div",{staticClass:"p-separator"},[n("span",[e._v(e._s(e.timeSeparator))])]):e._e(),e._v(" "),"12"==e.hourFormat?n("div",{staticClass:"p-ampm-picker"},[n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{type:"button",disabled:e.$attrs.disabled},on:{click:function(n){return e.toggleAMPM(n)}}},[n("span",{staticClass:"pi pi-chevron-up"})]),e._v(" "),n("span",[e._v(e._s(e.pm?e.pmLabel:e.amLabel))]),e._v(" "),n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-link",attrs:{type:"button",disabled:e.$attrs.disabled},on:{click:function(n){return e.toggleAMPM(n)}}},[n("span",{staticClass:"pi pi-chevron-down"})])]):e._e()]):e._e(),e._v(" "),e.showButtonBar?n("div",{staticClass:"p-datepicker-buttonbar"},[n("CalendarButton",{staticClass:"p-button-text",attrs:{type:"button",label:e.todayLabel},on:{click:function(n){return e.onTodayButtonClick(n)},keydown:e.onContainerButtonKeydown}}),e._v(" "),n("CalendarButton",{staticClass:"p-button-text",attrs:{type:"button",label:e.clearLabel},on:{click:function(n){return e.onClearButtonClick(n)},keydown:e.onContainerButtonKeydown}})],1):e._e(),e._v(" "),e._t("footer")],2):e._e()])],1)};S._withStripped=!0;var x=k({render:S,staticRenderFns:[]},(function(e){e&&e("data-v-fbebe2ca_0",{source:"\n.p-calendar {\n  position: relative;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  max-width: 100%;\n}\n.p-calendar .p-inputtext {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n  width: 1%;\n}\n.p-calendar-w-btn .p-inputtext {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.p-calendar-w-btn .p-datepicker-trigger {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n/* Fluid */\n.p-fluid .p-calendar {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.p-fluid .p-calendar .p-inputtext {\n  width: 1%;\n}\n\n/* Datepicker */\n.p-calendar .p-datepicker {\n  min-width: 100%;\n}\n.p-datepicker {\nwidth: auto;\n  position: absolute;\n}\n.p-datepicker-inline {\n  display: inline-block;\n  position: static;\n  overflow-x: auto;\n}\n\n/* Header */\n.p-datepicker-header {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.p-datepicker-header .p-datepicker-title {\n  margin: 0 auto;\n}\n.p-datepicker-prev,\n.p-datepicker-next {\n  cursor: pointer;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  overflow: hidden;\n  position: relative;\n}\n\n/* Multiple Month DatePicker */\n.p-datepicker-multiple-month .p-datepicker-group-container {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\n\n/* DatePicker Table */\n.p-datepicker table {\nwidth: 100%;\nborder-collapse: collapse;\n}\n.p-datepicker td > span {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  cursor: pointer;\n  margin: 0 auto;\n  overflow: hidden;\n  position: relative;\n}\n\n/* Month Picker */\n.p-monthpicker-month {\n  width: 33.3%;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n\n/* Year Picker */\n.p-yearpicker-year {\n  width: 50%;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n\n/*  Button Bar */\n.p-datepicker-buttonbar {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n\n/* Time Picker */\n.p-timepicker {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.p-timepicker button {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n.p-timepicker > div {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n\n/* Touch UI */\n.p-datepicker-touch-ui,\n.p-calendar .p-datepicker-touch-ui {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 80vw;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/calendar/Calendar.vue"],names:[],mappings:";AAukFA;EACA,kBAAA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,eAAA;AACA;AAEA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;EACA,SAAA;AACA;AAEA;EACA,0BAAA;EACA,6BAAA;AACA;AAEA;EACA,yBAAA;EACA,4BAAA;AACA;;AAEA,UAAA;AACA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA;AAEA;EACA,SAAA;AACA;;AAEA,eAAA;AACA;EACA,eAAA;AACA;AAEA;AACA,WAAA;EACA,kBAAA;AACA;AAEA;EACA,qBAAA;EACA,gBAAA;EACA,gBAAA;AACA;;AAEA,WAAA;AACA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,yBAAA;EAAA,sCAAA;MAAA,sBAAA;UAAA,8BAAA;AACA;AAEA;EACA,cAAA;AACA;AAEA;;EAEA,eAAA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,gBAAA;EACA,kBAAA;AACA;;AAEA,8BAAA;AACA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA;AAEA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;;AAEA,qBAAA;AACA;AACA,WAAA;AACA,yBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,eAAA;EACA,cAAA;EACA,gBAAA;EACA,kBAAA;AACA;;AAEA,iBAAA;AACA;EACA,YAAA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,eAAA;EACA,gBAAA;EACA,kBAAA;AACA;;AAEA,gBAAA;AACA;EACA,UAAA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,eAAA;EACA,gBAAA;EACA,kBAAA;AACA;;AAEA,gBAAA;AACA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,sCAAA;MAAA,sBAAA;UAAA,8BAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;AACA;;AAEA,gBAAA;AACA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,eAAA;EACA,gBAAA;EACA,kBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,4BAAA;EAAA,6BAAA;EAAA,8BAAA;MAAA,0BAAA;UAAA,sBAAA;AACA;;AAEA,aAAA;AACA;;EAEA,eAAA;EACA,QAAA;EACA,SAAA;EACA,eAAA;EACA,wCAAA;UAAA,gCAAA;AACA",file:"Calendar.vue",sourcesContent:["<template>\n  <span :class=\"containerClass\" :style=\"styles\">\n    <CalendarInputText\n      ref=\"input\"\n      v-if=\"!inline\"\n      type=\"text\"\n      v-bind=\"$attrs\"\n      v-on=\"listeners\"\n      :value=\"inputFieldValue\"\n      :readonly=\"!manualInput\"\n      :aria-labelledby=\"ariaLabelledBy\"\n      inputmode=\"none\"\n      :class=\"inputClass\"\n      :style=\"inputStyle\" />\n    <CalendarButton\n      v-if=\"showIcon\"\n      :icon=\"icon\"\n      tabindex=\"-1\"\n      class=\"p-datepicker-trigger\"\n      :disabled=\"$attrs.disabled\"\n      @click=\"onButtonClick\"\n      type=\"button\"\n      :aria-label=\"inputFieldValue\" />\n    <transition\n      name=\"p-connected-overlay\"\n      @enter=\"onOverlayEnter\"\n      @after-enter=\"onOverlayEnterComplete\"\n      @leave=\"onOverlayLeave\">\n      <div\n        ref=\"overlay\"\n        :class=\"panelStyleClass\"\n        v-if=\"inline ? true : overlayVisible\"\n        :role=\"inline ? null : 'dialog'\"\n        :aria-labelledby=\"ariaLabelledBy\">\n        <template v-if=\"!timeOnly\">\n          <div class=\"p-datepicker-group-container\">\n            <div class=\"p-datepicker-group\" v-for=\"(month, groupIndex) of months\" :key=\"month.month + month.year\">\n              <div class=\"p-datepicker-header\">\n                <slot name=\"header\"></slot>\n                <button\n                  class=\"p-datepicker-prev p-link\"\n                  v-show=\"groupIndex === 0\"\n                  @click=\"onPrevButtonClick\"\n                  type=\"button\"\n                  @keydown=\"onContainerButtonKeydown\"\n                  v-ripple\n                  :disabled=\"$attrs.disabled\">\n                  <span class=\"p-datepicker-prev-icon pi pi-chevron-left\"></span>\n                </button>\n                <div class=\"p-datepicker-title\">\n                  <template v-for=\"titleKey in datePickerTitle\">\n                    <button\n                      v-if=\"titleKey === 'date' && currentView === 'date'\"\n                      :key=\"`title_${titleKey}`\"\n                      type=\"button\"\n                      @click=\"switchToMonthView\"\n                      @keydown=\"onContainerButtonKeydown\"\n                      class=\"p-datepicker-month p-link\"\n                      :disabled=\"switchViewButtonDisabled\">\n                      {{ getMonthName(month.month) }}\n                    </button>\n                    <button\n                      v-if=\"titleKey === 'year' && currentView !== 'year'\"\n                      :key=\"`title_${titleKey}`\"\n                      type=\"button\"\n                      @click=\"switchToYearView\"\n                      @keydown=\"onContainerButtonKeydown\"\n                      class=\"p-datepicker-year p-link\"\n                      :disabled=\"switchViewButtonDisabled\">\n                      {{ getYear(month) }}\n                    </button>\n                    <span\n                      v-if=\"titleKey === 'year' && currentView === 'year'\"\n                      :key=\"`title_${titleKey}_decade`\"\n                      class=\"p-datepicker-decade\">\n                      <slot name=\"decade\" :years=\"yearPickerValues\">\n                        {{ yearPickerValues[0] }} - {{ yearPickerValues[yearPickerValues.length - 1] }}\n                      </slot>\n                    </span>\n                  </template>\n                </div>\n                <button\n                  class=\"p-datepicker-next p-link\"\n                  v-show=\"numberOfMonths === 1 ? true : groupIndex === numberOfMonths - 1\"\n                  @click=\"onNextButtonClick\"\n                  type=\"button\"\n                  @keydown=\"onContainerButtonKeydown\"\n                  v-ripple\n                  :disabled=\"$attrs.disabled\">\n                  <span class=\"p-datepicker-next-icon pi pi-chevron-right\"></span>\n                </button>\n              </div>\n              <div class=\"p-datepicker-calendar-container\" v-if=\"currentView === 'date'\">\n                <table class=\"p-datepicker-calendar\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" v-if=\"showWeek\" class=\"p-datepicker-weekheader p-disabled\">\n                        <span>{{ weekHeaderLabel }}</span>\n                      </th>\n                      <th scope=\"col\" v-for=\"weekDay of weekDays\" :key=\"weekDay\">\n                        <span>{{ weekDay }}</span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"(week, i) of month.dates\" :key=\"week[0].day + '' + week[0].month\">\n                      <td v-if=\"showWeek\" class=\"p-datepicker-weeknumber\">\n                        <span class=\"p-disabled\">\n                          <span style=\"visibility: hidden\" v-if=\"month.weekNumbers[i] < 10\">0</span>\n                          {{ month.weekNumbers[i] }}\n                        </span>\n                      </td>\n                      <td\n                        v-for=\"date of week\"\n                        :key=\"date.day + '' + date.month\"\n                        :class=\"{ 'p-datepicker-other-month': date.otherMonth, 'p-datepicker-today': date.today }\">\n                        <span\n                          :class=\"{ 'p-highlight': isSelected(date), 'p-disabled': !date.selectable }\"\n                          @click=\"onDateSelect($event, date)\"\n                          draggable=\"false\"\n                          @keydown=\"onDateCellKeydown($event, date, groupIndex)\"\n                          v-ripple>\n                          <slot name=\"date\" :date=\"date\">{{ date.day }}</slot>\n                        </span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n          <div class=\"p-monthpicker\" v-if=\"currentView === 'month'\">\n            <span\n              v-for=\"(m, i) of monthPickerValues\"\n              :key=\"m\"\n              @click=\"onMonthSelect($event, i)\"\n              @keydown=\"onMonthCellKeydown($event, i)\"\n              class=\"p-monthpicker-month\"\n              :class=\"{ 'p-highlight': isMonthSelected(i) }\"\n              v-ripple>\n              {{ m }}\n            </span>\n          </div>\n          <div class=\"p-yearpicker\" v-if=\"currentView === 'year'\">\n            <span\n              v-for=\"y of yearPickerValues\"\n              :key=\"y\"\n              @click=\"onYearSelect($event, y)\"\n              @keydown=\"onYearCellKeydown($event, y)\"\n              class=\"p-yearpicker-year\"\n              :class=\"{ 'p-highlight': isYearSelected(y) }\"\n              v-ripple>\n              {{ y }}\n            </span>\n          </div>\n        </template>\n        <div class=\"p-timepicker\" v-if=\"(showTime || timeOnly) && currentView === 'date'\">\n          <div class=\"p-hour-picker\">\n            <button\n              class=\"p-link\"\n              @mousedown=\"onTimePickerElementMouseDown($event, 0, 1)\"\n              @mouseup=\"onTimePickerElementMouseUp($event)\"\n              @keydown=\"onContainerButtonKeydown\"\n              v-ripple\n              @mouseleave=\"onTimePickerElementMouseLeave()\"\n              @keydown.enter=\"onTimePickerElementMouseDown($event, 0, 1)\"\n              @keyup.enter=\"onTimePickerElementMouseUp($event)\"\n              type=\"button\">\n              <span class=\"pi pi-chevron-up\"></span>\n            </button>\n            <span>{{ formattedCurrentHour }}</span>\n            <button\n              class=\"p-link\"\n              @mousedown=\"onTimePickerElementMouseDown($event, 0, -1)\"\n              @mouseup=\"onTimePickerElementMouseUp($event)\"\n              @keydown=\"onContainerButtonKeydown\"\n              v-ripple\n              @mouseleave=\"onTimePickerElementMouseLeave()\"\n              @keydown.enter=\"onTimePickerElementMouseDown($event, 0, -1)\"\n              @keyup.enter=\"onTimePickerElementMouseUp($event)\"\n              type=\"button\">\n              <span class=\"pi pi-chevron-down\"></span>\n            </button>\n          </div>\n          <div class=\"p-separator\">\n            <span>{{ timeSeparator }}</span>\n          </div>\n          <div class=\"p-minute-picker\">\n            <button\n              class=\"p-link\"\n              @mousedown=\"onTimePickerElementMouseDown($event, 1, 1)\"\n              @mouseup=\"onTimePickerElementMouseUp($event)\"\n              @keydown=\"onContainerButtonKeydown\"\n              v-ripple\n              :disabled=\"$attrs.disabled\"\n              @mouseleave=\"onTimePickerElementMouseLeave()\"\n              @keydown.enter=\"onTimePickerElementMouseDown($event, 1, 1)\"\n              @keyup.enter=\"onTimePickerElementMouseUp($event)\"\n              type=\"button\">\n              <span class=\"pi pi-chevron-up\"></span>\n            </button>\n            <span>{{ formattedCurrentMinute }}</span>\n            <button\n              class=\"p-link\"\n              @mousedown=\"onTimePickerElementMouseDown($event, 1, -1)\"\n              @mouseup=\"onTimePickerElementMouseUp($event)\"\n              @keydown=\"onContainerButtonKeydown\"\n              v-ripple\n              :disabled=\"$attrs.disabled\"\n              @mouseleave=\"onTimePickerElementMouseLeave()\"\n              @keydown.enter=\"onTimePickerElementMouseDown($event, 1, -1)\"\n              @keyup.enter=\"onTimePickerElementMouseUp($event)\"\n              type=\"button\">\n              <span class=\"pi pi-chevron-down\"></span>\n            </button>\n          </div>\n          <div class=\"p-separator\" v-if=\"showSeconds\">\n            <span>{{ timeSeparator }}</span>\n          </div>\n          <div class=\"p-second-picker\" v-if=\"showSeconds\">\n            <button\n              class=\"p-link\"\n              @mousedown=\"onTimePickerElementMouseDown($event, 2, 1)\"\n              @mouseup=\"onTimePickerElementMouseUp($event)\"\n              @keydown=\"onContainerButtonKeydown\"\n              v-ripple\n              :disabled=\"$attrs.disabled\"\n              @mouseleave=\"onTimePickerElementMouseLeave()\"\n              @keydown.enter=\"onTimePickerElementMouseDown($event, 2, 1)\"\n              @keyup.enter=\"onTimePickerElementMouseUp($event)\"\n              type=\"button\">\n              <span class=\"pi pi-chevron-up\"></span>\n            </button>\n            <span>{{ formattedCurrentSecond }}</span>\n            <button\n              class=\"p-link\"\n              @mousedown=\"onTimePickerElementMouseDown($event, 2, -1)\"\n              @mouseup=\"onTimePickerElementMouseUp($event)\"\n              @keydown=\"onContainerButtonKeydown\"\n              v-ripple\n              :disabled=\"$attrs.disabled\"\n              @mouseleave=\"onTimePickerElementMouseLeave()\"\n              @keydown.enter=\"onTimePickerElementMouseDown($event, 2, -1)\"\n              @keyup.enter=\"onTimePickerElementMouseUp($event)\"\n              type=\"button\">\n              <span class=\"pi pi-chevron-down\"></span>\n            </button>\n          </div>\n          <div class=\"p-separator\" v-if=\"hourFormat == '12'\">\n            <span>{{ timeSeparator }}</span>\n          </div>\n          <div class=\"p-ampm-picker\" v-if=\"hourFormat == '12'\">\n            <button class=\"p-link\" @click=\"toggleAMPM($event)\" type=\"button\" v-ripple :disabled=\"$attrs.disabled\">\n              <span class=\"pi pi-chevron-up\"></span>\n            </button>\n            <span>{{ pm ? pmLabel : amLabel }}</span>\n            <button class=\"p-link\" @click=\"toggleAMPM($event)\" type=\"button\" v-ripple :disabled=\"$attrs.disabled\">\n              <span class=\"pi pi-chevron-down\"></span>\n            </button>\n          </div>\n        </div>\n        <div class=\"p-datepicker-buttonbar\" v-if=\"showButtonBar\">\n          <CalendarButton\n            type=\"button\"\n            :label=\"todayLabel\"\n            @click=\"onTodayButtonClick($event)\"\n            class=\"p-button-text\"\n            @keydown=\"onContainerButtonKeydown\" />\n          <CalendarButton\n            type=\"button\"\n            :label=\"clearLabel\"\n            @click=\"onClearButtonClick($event)\"\n            class=\"p-button-text\"\n            @keydown=\"onContainerButtonKeydown\" />\n        </div>\n        <slot name=\"footer\"></slot>\n      </div>\n    </transition>\n  </span>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, UniqueComponentId, DomHandler } from 'primevue2/utils'\nimport InputText from 'primevue2/inputtext'\nimport Button from 'primevue2/button'\nimport Ripple from 'primevue2/ripple'\n\nexport default {\n  name: 'Calendar',\n  inheritAttrs: false,\n  props: {\n    value: null,\n    selectionMode: {\n      type: String,\n      default: 'single'\n    },\n    dateFormat: String,\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    showOtherMonths: {\n      type: Boolean,\n      default: true\n    },\n    selectOtherMonths: {\n      type: Boolean,\n      default: false\n    },\n    showIcon: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: 'pi pi-calendar'\n    },\n    numberOfMonths: {\n      type: Number,\n      default: 1\n    },\n    responsiveOptions: Array,\n    view: {\n      type: String,\n      default: 'date'\n    },\n    touchUI: {\n      type: Boolean,\n      default: false\n    },\n    monthNavigator: {\n      type: Boolean,\n      default: false\n    },\n    yearNavigator: {\n      type: Boolean,\n      default: false\n    },\n    yearRange: {\n      type: String,\n      default: null\n    },\n    panelClass: {\n      type: String,\n      default: null\n    },\n    panelStyle: {\n      type: String,\n      default: null\n    },\n    minDate: {\n      type: Date,\n      value: null\n    },\n    maxDate: {\n      type: Date,\n      value: null\n    },\n    disabledDates: {\n      type: Array,\n      value: null\n    },\n    disabledDays: {\n      type: Array,\n      value: null\n    },\n    maxDateCount: {\n      type: Number,\n      value: null\n    },\n    showOnFocus: {\n      type: Boolean,\n      default: true\n    },\n    autoZIndex: {\n      type: Boolean,\n      default: true\n    },\n    baseZIndex: {\n      type: Number,\n      default: 0\n    },\n    showButtonBar: {\n      type: Boolean,\n      default: false\n    },\n    shortYearCutoff: {\n      type: String,\n      default: '+10'\n    },\n    showTime: {\n      type: Boolean,\n      default: false\n    },\n    timeOnly: {\n      type: Boolean,\n      default: false\n    },\n    hourFormat: {\n      type: String,\n      default: '24'\n    },\n    stepHour: {\n      type: Number,\n      default: 1\n    },\n    stepMinute: {\n      type: Number,\n      default: 1\n    },\n    stepSecond: {\n      type: Number,\n      default: 1\n    },\n    showSeconds: {\n      type: Boolean,\n      default: false\n    },\n    hideOnDateTimeSelect: {\n      type: Boolean,\n      default: false\n    },\n    timeSeparator: {\n      type: String,\n      default: ':'\n    },\n    showWeek: {\n      type: Boolean,\n      default: false\n    },\n    manualInput: {\n      type: Boolean,\n      default: true\n    },\n    ariaLabelledBy: {\n      type: String,\n      default: null\n    },\n    appendTo: {\n      type: String,\n      default: null\n    },\n    inputClass: null,\n    inputStyle: null,\n    className: null,\n    styles: null\n  },\n  navigationState: null,\n  timePickerChange: false,\n  scrollHandler: null,\n  outsideClickListener: null,\n  maskClickListener: null,\n  resizeListener: null,\n  mask: null,\n  timePickerTimer: null,\n  isKeydown: false,\n  preventFocus: false,\n  created() {\n    this.updateCurrentMetaData()\n  },\n  mounted() {\n    this.createResponsiveStyle()\n    if (this.inline) {\n      this.$refs.overlay && this.$refs.overlay.setAttribute(this.attributeSelector, '')\n      if (!this.$attrs.disabled) {\n        this.initFocusableCell()\n        this.$refs.overlay.style.width = DomHandler.getOuterWidth(this.$el) + 'px'\n      }\n    }\n  },\n  updated() {\n    if (this.$refs.overlay) {\n      this.preventFocus = true\n      this.updateFocus()\n    }\n\n    if (this.$refs.input && this.selectionStart != null && this.selectionEnd != null) {\n      this.$refs.input.$el.selectionStart = this.selectionStart\n      this.$refs.input.$el.selectionEnd = this.selectionEnd\n      this.selectionStart = null\n      this.selectionEnd = null\n    }\n  },\n  beforeDestroy() {\n    if (this.timePickerTimer) {\n      clearTimeout(this.timePickerTimer)\n    }\n\n    if (this.mask) {\n      this.destroyMask()\n    }\n\n    this.destroyResponsiveStyleElement()\n    this.restoreAppend()\n    this.unbindOutsideClickListener()\n    this.unbindResizeListener()\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy()\n      this.scrollHandler = null\n    }\n  },\n  data() {\n    return {\n      currentMonth: null,\n      currentYear: null,\n      currentHour: null,\n      currentMinute: null,\n      currentSecond: null,\n      pm: null,\n      focused: false,\n      overlayVisible: false,\n      currentView: this.view\n    }\n  },\n  watch: {\n    value() {\n      this.updateCurrentMetaData()\n    },\n    months() {\n      if (this.$refs.overlay) {\n        if (!this.focused) {\n          setTimeout(this.updateFocus, 0)\n        }\n      }\n    },\n    numberOfMonths() {\n      this.destroyResponsiveStyleElement()\n      this.createResponsiveStyle()\n    },\n    responsiveOptions() {\n      this.destroyResponsiveStyleElement()\n      this.createResponsiveStyle()\n    },\n    currentView() {\n      Promise.resolve(null).then(() => this.alignOverlay())\n    }\n  },\n  methods: {\n    isComparable() {\n      return this.value != null && typeof this.value !== 'string'\n    },\n    isSelected(dateMeta) {\n      if (!this.isComparable()) {\n        return false\n      }\n\n      if (this.value) {\n        if (this.isSingleSelection()) {\n          return this.isDateEquals(this.value, dateMeta)\n        }\n        else if (this.isMultipleSelection()) {\n          let selected = false\n          for (let date of this.value) {\n            selected = this.isDateEquals(date, dateMeta)\n            if (selected) {\n              break\n            }\n          }\n\n          return selected\n        }\n        else if (this.isRangeSelection()) {\n          if (this.value[1])\n            return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta)\n          else {\n            return this.isDateEquals(this.value[0], dateMeta)\n          }\n\n        }\n      }\n\n      return false\n    },\n    isMonthSelected(month) {\n      if (this.isComparable()) {\n        if (this.view !== 'month') {\n          return false\n        }\n\n        let value = this.isRangeSelection() ? this.value[0] : this.value\n        const isMonthSelected = (valueDate) => valueDate.getMonth() === month && valueDate.getFullYear() === this.currentYear\n\n        if (this.isMultipleSelection()) {\n          return value.some(isMonthSelected)\n        }\n        return isMonthSelected(value)\n      }\n\n      return false\n    },\n    isYearSelected(year) {\n      if (this.isComparable()) {\n        if (this.view !== 'year') {\n          return false\n        }\n\n        let value = this.isRangeSelection() ? this.value[0] : this.value\n        return !this.isMultipleSelection() && this.isComparable() ? (value.getFullYear() === year) : false\n      }\n      return false\n    },\n    isDateEquals(value, dateMeta) {\n      if (value)\n        return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year\n      else\n        return false\n    },\n    isDateBetween(start, end, dateMeta) {\n      let between = false\n      if (start && end) {\n        let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day)\n        return start.getTime() <= date.getTime() && end.getTime() >= date.getTime()\n      }\n\n      return between\n    },\n    getFirstDayOfMonthIndex(month, year) {\n      let day = new Date()\n      day.setDate(1)\n      day.setMonth(month)\n      day.setFullYear(year)\n\n      let dayIndex = day.getDay() + this.sundayIndex\n      return dayIndex >= 7 ? dayIndex - 7 : dayIndex\n    },\n    getDaysCountInMonth(month, year) {\n      return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate()\n    },\n    getDaysCountInPrevMonth(month, year) {\n      let prev = this.getPreviousMonthAndYear(month, year)\n      return this.getDaysCountInMonth(prev.month, prev.year)\n    },\n    getPreviousMonthAndYear(month, year) {\n      let m, y\n\n      if (month === 0) {\n        m = 11\n        y = year - 1\n      }\n      else {\n        m = month - 1\n        y = year\n      }\n\n      return { 'month': m, 'year': y }\n    },\n    getNextMonthAndYear(month, year) {\n      let m, y\n\n      if (month === 11) {\n        m = 0\n        y = year + 1\n      }\n      else {\n        m = month + 1\n        y = year\n      }\n\n      return { 'month': m, 'year': y }\n    },\n    daylightSavingAdjust(date) {\n      if (!date) {\n        return null\n      }\n\n      date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0)\n\n      return date\n    },\n    isToday(today, day, month, year) {\n      return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year\n    },\n    isSelectable(day, month, year, otherMonth) {\n      let validMin = true\n      let validMax = true\n      let validDate = true\n      let validDay = true\n\n      if (otherMonth && !this.selectOtherMonths) {\n        return false\n      }\n\n      if (this.minDate) {\n        if (this.minDate.getFullYear() > year) {\n          validMin = false\n        }\n        else if (this.minDate.getFullYear() === year) {\n          if (this.minDate.getMonth() > month) {\n            validMin = false\n          }\n          else if (this.minDate.getMonth() === month) {\n            if (this.minDate.getDate() > day) {\n              validMin = false\n            }\n          }\n        }\n      }\n\n      if (this.maxDate) {\n        if (this.maxDate.getFullYear() < year) {\n          validMax = false\n        }\n        else if (this.maxDate.getFullYear() === year) {\n          if (this.maxDate.getMonth() < month) {\n            validMax = false\n          }\n          else if (this.maxDate.getMonth() === month) {\n            if (this.maxDate.getDate() < day) {\n              validMax = false\n            }\n          }\n        }\n      }\n\n      if (this.disabledDates) {\n        validDate = !this.isDateDisabled(day, month, year)\n      }\n\n      if (this.disabledDays) {\n        validDay = !this.isDayDisabled(day, month, year)\n      }\n\n      return validMin && validMax && validDate && validDay\n    },\n    onOverlayEnter(el) {\n      el.setAttribute(this.attributeSelector, '')\n\n      if (this.autoZIndex) {\n        this.$refs.overlay.style.zIndex = String(this.baseZIndex + DomHandler.generateZIndex())\n      }\n      this.appendContainer()\n      this.alignOverlay()\n      this.$emit('show')\n    },\n    onOverlayEnterComplete() {\n      this.bindOutsideClickListener()\n      this.bindScrollListener()\n      this.bindResizeListener()\n    },\n    onOverlayLeave() {\n      this.currentView = this.view\n      this.unbindOutsideClickListener()\n      this.unbindScrollListener()\n      this.unbindResizeListener()\n      this.$emit('hide')\n\n      if (this.mask) {\n        this.disableModality()\n      }\n    },\n    onPrevButtonClick(event) {\n      if (this.showOtherMonths) {\n        this.navigationState = { backward: true, button: true }\n        this.navBackward(event)\n      }\n    },\n    onNextButtonClick(event) {\n      if (this.showOtherMonths) {\n        this.navigationState = { backward: false, button: true }\n        this.navForward(event)\n      }\n    },\n    navBackward(event) {\n      event.preventDefault()\n\n      if (!this.isEnabled()) {\n        return\n      }\n\n      if (this.currentView === 'month') {\n        this.decrementYear()\n      }\n      else if (this.currentView === 'year') {\n        this.decrementDecade()\n      }\n      else {\n        if (this.currentMonth === 0) {\n          this.currentMonth = 11\n          this.decrementYear()\n        }\n        else {\n          this.currentMonth--\n        }\n\n        this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear })\n      }\n    },\n    navForward(event) {\n      event.preventDefault()\n\n      if (!this.isEnabled()) {\n        return\n      }\n\n      if (this.currentView === 'month') {\n        this.incrementYear()\n      }\n      else if (this.currentView === 'year') {\n        this.incrementDecade()\n      }\n      else {\n        if (this.currentMonth === 11) {\n          this.currentMonth = 0\n          this.incrementYear()\n        }\n        else {\n          this.currentMonth++\n        }\n\n        this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear })\n      }\n    },\n    decrementYear() {\n      this.currentYear--\n    },\n    decrementDecade() {\n      this.currentYear = this.currentYear - 10\n    },\n    incrementYear() {\n      this.currentYear++\n    },\n    incrementDecade() {\n      this.currentYear = this.currentYear + 10\n    },\n    switchToMonthView(event) {\n      this.currentView = 'month'\n      setTimeout(this.updateFocus, 0)\n      event.preventDefault()\n    },\n    switchToYearView(event) {\n      this.currentView = 'year'\n      setTimeout(this.updateFocus, 0)\n      event.preventDefault()\n    },\n    isEnabled() {\n      return !this.$attrs.disabled && !this.$attrs.readonly\n    },\n    updateCurrentTimeMeta(date) {\n      const hours = date.getHours()\n\n      if (this.hourFormat === '12') {\n        this.pm = hours > 11\n\n        if (hours >= 12)\n          this.currentHour = (hours == 12) ? 12 : hours - 12\n        else\n          this.currentHour = (hours == 0) ? 12 : hours\n      }\n      else {\n        this.currentHour = date.getHours()\n      }\n\n      this.currentMinute = date.getMinutes()\n      this.currentSecond = date.getSeconds()\n    },\n    bindOutsideClickListener() {\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = (event) => {\n          if (this.overlayVisible && this.isOutsideClicked(event)) {\n            this.overlayVisible = false\n          }\n        }\n        document.addEventListener('mousedown', this.outsideClickListener)\n      }\n    },\n    unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('mousedown', this.outsideClickListener)\n        this.outsideClickListener = null\n      }\n    },\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$el, () => {\n          if (this.overlayVisible) {\n            this.overlayVisible = false\n          }\n        })\n      }\n\n      this.scrollHandler.bindScrollListener()\n    },\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener()\n      }\n    },\n    bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = () => {\n          if (this.overlayVisible) {\n            this.overlayVisible = false\n          }\n        }\n        window.addEventListener('resize', this.resizeListener)\n      }\n    },\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener)\n        this.resizeListener = null\n      }\n    },\n    isOutsideClicked(event) {\n      return !(this.$el.isSameNode(event.target) || this.isNavIconClicked(event) ||\n        this.$el.contains(event.target) || (this.$refs.overlay && this.$refs.overlay.contains(event.target)))\n    },\n    isNavIconClicked(event) {\n      return (DomHandler.hasClass(event.target, 'p-datepicker-prev') || DomHandler.hasClass(event.target, 'p-datepicker-prev-icon')\n        || DomHandler.hasClass(event.target, 'p-datepicker-next') || DomHandler.hasClass(event.target, 'p-datepicker-next-icon'))\n    },\n    alignOverlay() {\n      if (this.touchUI) {\n        this.enableModality()\n      }\n      else if (this.$refs.overlay) {\n        if (this.appendTo)\n          DomHandler.absolutePosition(this.$refs.overlay, this.$el)\n        else\n          DomHandler.relativePosition(this.$refs.overlay, this.$el)\n      }\n    },\n    onButtonClick() {\n      if (this.isEnabled()) {\n        if (!this.overlayVisible) {\n          this.$refs.input.$el.focus()\n          this.overlayVisible = true\n        }\n        else {\n          this.overlayVisible = false\n        }\n      }\n    },\n    isDateDisabled(day, month, year) {\n      if (this.disabledDates) {\n        for (let disabledDate of this.disabledDates) {\n          if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {\n            return true\n          }\n        }\n      }\n\n      return false\n    },\n    isDayDisabled(day, month, year) {\n      if (this.disabledDays) {\n        let weekday = new Date(year, month, day)\n        let weekdayNumber = weekday.getDay()\n        return this.disabledDays.indexOf(weekdayNumber) !== -1\n      }\n      return false\n    },\n    onMonthDropdownChange(value) {\n      this.currentMonth = parseInt(value)\n      this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear })\n    },\n    onYearDropdownChange(value) {\n      this.currentYear = parseInt(value)\n      this.$emit('year-change', { month: this.currentMonth + 1, year: this.currentYear })\n    },\n    onDateSelect(event, dateMeta) {\n      if (this.$attrs.disabled || !dateMeta.selectable) {\n        return\n      }\n\n      DomHandler.find(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled)').forEach(cell => cell.tabIndex = -1)\n\n      if (event) {\n        event.currentTarget.focus()\n      }\n\n      if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\n        let newValue = this.value.filter(date => !this.isDateEquals(date, dateMeta))\n        this.updateModel(newValue)\n      }\n      else {\n        if (this.shouldSelectDate(dateMeta)) {\n          if (dateMeta.otherMonth) {\n            this.currentMonth = dateMeta.month\n            this.currentYear = dateMeta.year\n            this.selectDate(dateMeta)\n          }\n          else {\n            this.selectDate(dateMeta)\n          }\n        }\n      }\n\n      if (this.isSingleSelection() && (!this.showTime || this.hideOnDateTimeSelect)) {\n        setTimeout(() => {\n          this.overlayVisible = false\n        }, 150)\n      }\n    },\n    selectDate(dateMeta) {\n      let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day)\n\n      if (this.showTime) {\n        if (this.hourFormat === '12' && this.pm && this.currentHour != 12)\n          date.setHours(this.currentHour + 12)\n        else\n          date.setHours(this.currentHour)\n\n        date.setMinutes(this.currentMinute)\n        date.setSeconds(this.currentSecond)\n      }\n\n      if (this.minDate && this.minDate > date) {\n        date = this.minDate\n        this.currentHour = date.getHours()\n        this.currentMinute = date.getMinutes()\n        this.currentSecond = date.getSeconds()\n      }\n\n      if (this.maxDate && this.maxDate < date) {\n        date = this.maxDate\n        this.currentHour = date.getHours()\n        this.currentMinute = date.getMinutes()\n        this.currentSecond = date.getSeconds()\n      }\n\n      let modelVal = null\n\n      if (this.isSingleSelection()) {\n        modelVal = date\n      }\n      else if (this.isMultipleSelection()) {\n        modelVal = this.value ? [...this.value, date] : [date]\n      }\n      else if (this.isRangeSelection()) {\n        if (this.value && this.value.length) {\n          let startDate = this.value[0]\n          let endDate = this.value[1]\n\n          if (!endDate && date.getTime() >= startDate.getTime()) {\n            endDate = date\n          }\n          else {\n            startDate = date\n            endDate = null\n          }\n          modelVal = [startDate, endDate]\n        }\n        else {\n          modelVal = [date, null]\n        }\n      }\n\n      if (modelVal !== null) {\n        this.updateModel(modelVal)\n      }\n      this.$emit('date-select', date)\n    },\n    updateModel(value) {\n      this.$emit('input', value)\n    },\n    shouldSelectDate() {\n      if (this.isMultipleSelection())\n        return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true\n      else\n        return true\n    },\n    isSingleSelection() {\n      return this.selectionMode === 'single'\n    },\n    isRangeSelection() {\n      return this.selectionMode === 'range'\n    },\n    isMultipleSelection() {\n      return this.selectionMode === 'multiple'\n    },\n    formatValue(value) {\n      if (typeof value === 'string') {\n        return value\n      }\n\n      let formattedValue = ''\n      if (value) {\n        try {\n          if (this.isSingleSelection()) {\n            formattedValue = this.formatDateTime(value)\n          }\n          else if (this.isMultipleSelection()) {\n            for (let i = 0; i < value.length; i++) {\n              let dateAsString = this.formatDateTime(value[i])\n              formattedValue += dateAsString\n              if (i !== (value.length - 1)) {\n                formattedValue += ', '\n              }\n            }\n          }\n          else if (this.isRangeSelection()) {\n            if (value && value.length) {\n              let startDate = value[0]\n              let endDate = value[1]\n\n              formattedValue = this.formatDateTime(startDate)\n              if (endDate) {\n                formattedValue += ' - ' + this.formatDateTime(endDate)\n              }\n            }\n          }\n        }\n        catch (err) {\n          formattedValue = value\n        }\n      }\n\n      return formattedValue\n    },\n    formatDateTime(date) {\n      let formattedValue = null\n      if (date) {\n        if (this.timeOnly) {\n          formattedValue = this.formatTime(date)\n        }\n        else {\n          formattedValue = this.formatDate(date, this.datePattern)\n          if (this.showTime) {\n            formattedValue += ' ' + this.formatTime(date)\n          }\n        }\n      }\n\n      return formattedValue\n    },\n    formatDate(date, format) {\n      if (!date) {\n        return ''\n      }\n\n      let iFormat\n      const lookAhead = (match) => {\n          const matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match)\n          if (matches) {\n            iFormat++\n          }\n          return matches\n        },\n        formatNumber = (match, value, len) => {\n          let num = '' + value\n          if (lookAhead(match)) {\n            while (num.length < len) {\n              num = '0' + num\n            }\n          }\n          return num\n        },\n        formatName = (match, value, shortNames, longNames) => {\n          return (lookAhead(match) ? longNames[value] : shortNames[value])\n        }\n      let output = ''\n      let literal = false\n\n      if (date) {\n        for (iFormat = 0; iFormat < format.length; iFormat++) {\n          if (literal) {\n            if (format.charAt(iFormat) === '\\'' && !lookAhead('\\'')) {\n              literal = false\n            } else {\n              output += format.charAt(iFormat)\n            }\n          } else {\n            switch (format.charAt(iFormat)) {\n            case 'd':\n              output += formatNumber('d', date.getDate(), 2)\n              break\n            case 'D':\n              output += formatName('D', date.getDay(), this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames)\n              break\n            case 'o':\n              output += formatNumber('o',\n                Math.round((\n                  new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\n                    new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3)\n              break\n            case 'm':\n              output += formatNumber('m', date.getMonth() + 1, 2)\n              break\n            case 'M':\n              output += formatName('M', date.getMonth(), this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames)\n              break\n            case 'y':\n              output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100)\n              break\n            case '@':\n              output += date.getTime()\n              break\n            case '!':\n              output += date.getTime() * 10000 + this.ticksTo1970\n              break\n            case '\\'':\n              if (lookAhead('\\'')) {\n                output += '\\''\n              } else {\n                literal = true\n              }\n              break\n            default:\n              output += format.charAt(iFormat)\n            }\n          }\n        }\n      }\n      return output\n    },\n    formatTime(date) {\n      if (!date) {\n        return ''\n      }\n\n      let output = ''\n      let hours = date.getHours()\n      let minutes = date.getMinutes()\n      let seconds = date.getSeconds()\n\n      if (this.hourFormat === '12' && hours > 11 && hours !== 12) {\n        hours -= 12\n      }\n\n      if (this.hourFormat === '12') {\n        output += hours === 0 ? 12 : (hours < 10) ? '0' + hours : hours\n      }\n      else {\n        output += (hours < 10) ? '0' + hours : hours\n      }\n      output += ':'\n      output += (minutes < 10) ? '0' + minutes : minutes\n\n      if (this.showSeconds) {\n        output += ':'\n        output += (seconds < 10) ? '0' + seconds : seconds\n      }\n\n      if (this.hourFormat === '12') {\n        output += date.getHours() > 11 ? ' ' + this.pmLabel : ' ' + this.amLabel\n      }\n\n      return output\n    },\n    onTodayButtonClick(event) {\n      let date = new Date()\n      let dateMeta = {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear(),\n        otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\n        today: true,\n        selectable: true\n      }\n\n      this.onDateSelect(null, dateMeta)\n      this.$emit('today-click', date)\n      event.preventDefault()\n    },\n    onClearButtonClick(event) {\n      this.updateModel(null)\n      this.overlayVisible = false\n      this.$emit('clear-click', event)\n      event.preventDefault()\n    },\n    onTimePickerElementMouseDown(event, type, direction) {\n      if (this.isEnabled()) {\n        this.repeat(event, null, type, direction)\n        event.preventDefault()\n      }\n    },\n    onTimePickerElementMouseUp(event) {\n      if (this.isEnabled()) {\n        this.clearTimePickerTimer()\n        this.updateModelTime()\n        event.preventDefault()\n      }\n    },\n    onTimePickerElementMouseLeave() {\n      this.clearTimePickerTimer()\n    },\n    repeat(event, interval, type, direction) {\n      let i = interval || 500\n\n      this.clearTimePickerTimer()\n      this.timePickerTimer = setTimeout(() => {\n        this.repeat(event, 100, type, direction)\n      }, i)\n\n      switch (type) {\n      case 0:\n        if (direction === 1)\n          this.incrementHour(event)\n        else\n          this.decrementHour(event)\n        break\n\n      case 1:\n        if (direction === 1)\n          this.incrementMinute(event)\n        else\n          this.decrementMinute(event)\n        break\n\n      case 2:\n        if (direction === 1)\n          this.incrementSecond(event)\n        else\n          this.decrementSecond(event)\n        break\n      }\n    },\n    convertTo24Hour(hours, pm) {\n      if (this.hourFormat == '12') {\n        if (hours === 12) {\n          return (pm ? 12 : 0)\n        } else {\n          return (pm ? hours + 12 : hours)\n        }\n      }\n      return hours\n    },\n    validateTime(hour, minute, second, pm) {\n      let value = this.isComparable() ? this.value : this.viewDate\n      const convertedHour = this.convertTo24Hour(hour, pm)\n\n      if (this.isRangeSelection()) {\n        value = this.value[1] || this.value[0]\n      }\n      if (this.isMultipleSelection()) {\n        value = this.value[this.value.length - 1]\n      }\n      const valueDateString = value ? value.toDateString() : null\n      if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\n        if (this.minDate.getHours() > convertedHour) {\n          return false\n        }\n        if (this.minDate.getHours() === convertedHour) {\n          if (this.minDate.getMinutes() > minute) {\n            return false\n          }\n          if (this.minDate.getMinutes() === minute) {\n            if (this.minDate.getSeconds() > second) {\n              return false\n            }\n          }\n        }\n      }\n\n      if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\n        if (this.maxDate.getHours() < convertedHour) {\n          return false\n        }\n        if (this.maxDate.getHours() === convertedHour) {\n          if (this.maxDate.getMinutes() < minute) {\n            return false\n          }\n          if (this.maxDate.getMinutes() === minute) {\n            if (this.maxDate.getSeconds() < second) {\n              return false\n            }\n          }\n        }\n      }\n      return true\n    },\n    incrementHour(event) {\n      let prevHour = this.currentHour\n      let newHour = this.currentHour + this.stepHour\n      let newPM = this.pm\n\n      if (this.hourFormat == '24')\n        newHour = (newHour >= 24) ? (newHour - 24) : newHour\n      else if (this.hourFormat == '12') {\n        // Before the AM/PM break, now after\n        if (prevHour < 12 && newHour > 11) {\n          newPM = !this.pm\n        }\n        newHour = (newHour >= 13) ? (newHour - 12) : newHour\n      }\n\n      if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n        this.currentHour = newHour\n        this.pm = newPM\n      }\n\n      event.preventDefault()\n    },\n    decrementHour(event) {\n      let newHour = this.currentHour - this.stepHour\n      let newPM = this.pm\n\n      if (this.hourFormat == '24')\n        newHour = (newHour < 0) ? (24 + newHour) : newHour\n      else if (this.hourFormat == '12') {\n        // If we were at noon/midnight, then switch\n        if (this.currentHour === 12) {\n          newPM = !this.pm\n        }\n        newHour = (newHour <= 0) ? (12 + newHour) : newHour\n      }\n\n      if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\n        this.currentHour = newHour\n        this.pm = newPM\n      }\n\n      event.preventDefault()\n    },\n    incrementMinute(event) {\n      let newMinute = this.currentMinute + this.stepMinute\n      if (this.validateTime(this.currentHour, newMinute, this.currentSecond, true)) {\n        this.currentMinute = (newMinute > 59) ? newMinute - 60 : newMinute\n      }\n\n      event.preventDefault()\n    },\n    decrementMinute(event) {\n      let newMinute = this.currentMinute - this.stepMinute\n      newMinute = (newMinute < 0) ? 60 + newMinute : newMinute\n      if (this.validateTime(this.currentHour, newMinute, this.currentSecond, true)) {\n        this.currentMinute = newMinute\n      }\n\n      event.preventDefault()\n    },\n    incrementSecond(event) {\n      let newSecond = this.currentSecond + this.stepSecond\n      if (this.validateTime(this.currentHour, this.currentMinute, newSecond, true)) {\n        this.currentSecond = (newSecond > 59) ? newSecond - 60 : newSecond\n      }\n\n      event.preventDefault()\n    },\n    decrementSecond(event) {\n      let newSecond = this.currentSecond - this.stepSecond\n      newSecond = (newSecond < 0) ? 60 + newSecond : newSecond\n      if (this.validateTime(this.currentHour, this.currentMinute, newSecond, true)) {\n        this.currentSecond = newSecond\n      }\n\n      event.preventDefault()\n    },\n    updateModelTime() {\n      this.timePickerChange = true\n      let value = this.isComparable() ? this.value : new Date()\n\n      if (this.isRangeSelection()) {\n        value = this.value[1] || this.value[0]\n      }\n      if (this.isMultipleSelection()) {\n        value = this.value[this.value.length - 1]\n      }\n      value = value ? new Date(value.getTime()) : new Date()\n\n      if (this.hourFormat == '12') {\n        if (this.currentHour === 12)\n          value.setHours(this.pm ? 12 : 0)\n        else\n          value.setHours(this.pm ? this.currentHour + 12 : this.currentHour)\n      }\n      else {\n        value.setHours(this.currentHour)\n      }\n\n      value.setMinutes(this.currentMinute)\n      value.setSeconds(this.currentSecond)\n\n      if (this.isRangeSelection()) {\n        if (this.value[1])\n          value = [this.value[0], value]\n        else\n          value = [value, null]\n      }\n\n      if (this.isMultipleSelection()) {\n        value = [...this.value.slice(0, -1), value]\n      }\n\n      this.updateModel(value)\n      this.$emit('date-select', value)\n      setTimeout(() => this.timePickerChange = false, 0)\n    },\n    toggleAMPM(event) {\n      this.pm = !this.pm\n      this.updateModelTime()\n      event.preventDefault()\n    },\n    clearTimePickerTimer() {\n      if (this.timePickerTimer) {\n        clearInterval(this.timePickerTimer)\n      }\n    },\n    onMonthSelect(event, month) {\n      if (this.view === 'month') {\n        this.onDateSelect(event, { year: this.currentYear, month: month, day: 1, selectable: true })\n      }\n      else {\n        this.currentMonth = month\n        this.currentView = 'date'\n        this.$emit('month-change', { month: this.currentMonth + 1, year: this.currentYear })\n      }\n\n      setTimeout(this.updateFocus, 0)\n    },\n    onYearSelect(event, year) {\n      if (this.view === 'year') {\n        this.onDateSelect(event, { year: year, month: 0, day: 1, selectable: true })\n      }\n      else {\n        this.currentYear = year\n        this.currentView = 'month'\n        this.$emit('year-change', { month: this.currentMonth + 1, year: this.currentYear })\n      }\n\n      setTimeout(this.updateFocus, 0)\n    },\n    enableModality() {\n      if (!this.mask) {\n        this.mask = document.createElement('div')\n        this.mask.style.zIndex = String(parseInt(this.$refs.overlay.style.zIndex, 10) - 1)\n        DomHandler.addMultipleClasses(this.mask, 'p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter')\n\n        this.maskClickListener = () => {\n          this.overlayVisible = false\n        }\n        this.mask.addEventListener('click', this.maskClickListener)\n\n        document.body.appendChild(this.mask)\n        DomHandler.addClass(document.body, 'p-overflow-hidden')\n      }\n    },\n    disableModality() {\n      if (this.mask) {\n        this.overlayVisible = false\n\n        DomHandler.addClass(this.mask, 'p-component-overlay-leave')\n        this.mask.addEventListener('animationend', () => {\n          this.destroyMask()\n        })\n      }\n    },\n    destroyMask() {\n      this.mask.removeEventListener('click', this.maskClickListener)\n      this.maskClickListener = null\n      document.body.removeChild(this.mask)\n      this.mask = null\n\n      let bodyChildren = document.body.children\n      let hasBlockerMasks\n      for (let i = 0; i < bodyChildren.length; i++) {\n        let bodyChild = bodyChildren[i]\n        if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\n          hasBlockerMasks = true\n          break\n        }\n      }\n\n      if (!hasBlockerMasks) {\n        DomHandler.removeClass(document.body, 'p-overflow-hidden')\n      }\n    },\n    updateCurrentMetaData() {\n      const viewDate = this.viewDate\n      this.currentMonth = viewDate.getMonth()\n      this.currentYear = viewDate.getFullYear()\n\n      if (this.showTime || this.timeOnly) {\n        this.updateCurrentTimeMeta(viewDate)\n      }\n    },\n    isValidSelection(value) {\n      let isValid = true\n      if (this.isSingleSelection()) {\n        if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\n          isValid = false\n        }\n      } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\n        if (this.isRangeSelection()) {\n          isValid = value.length > 1 && value[1] > value[0] ? true : false\n        }\n      }\n      return isValid\n    },\n    parseValue(text) {\n      if (!text || text.trim().length === 0) {\n        return null\n      }\n\n      let value\n\n      if (this.isSingleSelection()) {\n        value = this.parseDateTime(text)\n      }\n      else if (this.isMultipleSelection()) {\n        let tokens = text.split(',')\n        value = []\n        for (let token of tokens) {\n          value.push(this.parseDateTime(token.trim()))\n        }\n      }\n      else if (this.isRangeSelection()) {\n        let tokens = text.split(' - ')\n        value = []\n        for (let i = 0; i < tokens.length; i++) {\n          value[i] = this.parseDateTime(tokens[i].trim())\n        }\n      }\n\n      return value\n    },\n    parseDateTime(text) {\n      let date\n      let parts = text.split(' ')\n\n      if (this.timeOnly) {\n        date = new Date()\n        this.populateTime(date, parts[0], parts[1])\n      }\n      else {\n        const dateFormat = this.datePattern\n        if (this.showTime) {\n          date = this.parseDate(parts[0], dateFormat)\n          this.populateTime(date, parts[1], parts[2])\n        }\n        else {\n          date = this.parseDate(text, dateFormat)\n        }\n      }\n\n      return date\n    },\n    populateTime(value, timeString, ampm) {\n      if (this.hourFormat == '12' && !ampm) {\n        throw 'Invalid Time'\n      }\n\n      this.pm = (ampm === 'PM' || ampm === 'pm')\n      let time = this.parseTime(timeString)\n      value.setHours(time.hour)\n      value.setMinutes(time.minute)\n      value.setSeconds(time.second)\n    },\n    parseTime(value) {\n      let tokens = value.split(':')\n      let validTokenLength = this.showSeconds ? 3 : 2\n      let regex = (/^[0-9][0-9]$/)\n\n      if (tokens.length !== validTokenLength || !tokens[0].match(regex) || !tokens[1].match(regex) || (this.showSeconds && !tokens[2].match(regex))) {\n        throw 'Invalid time'\n      }\n\n      let h = parseInt(tokens[0])\n      let m = parseInt(tokens[1])\n      let s = this.showSeconds ? parseInt(tokens[2]) : null\n\n      if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || (this.hourFormat == '12' && h > 12) || (this.showSeconds && (isNaN(s) || s > 59))) {\n        throw 'Invalid time'\n      }\n      else {\n        if (this.hourFormat == '12' && h !== 12 && this.pm) {\n          h += 12\n        }\n\n        return { hour: h, minute: m, second: s }\n      }\n    },\n    parseDate(value, format) {\n      if (format == null || value == null) {\n        throw 'Invalid arguments'\n      }\n\n      value = (typeof value === 'object' ? value.toString() : value + '')\n      if (value === '') {\n        return null\n      }\n\n      let iFormat, dim, extra,\n        iValue = 0,\n        shortYearCutoff = (typeof this.shortYearCutoff !== 'string' ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10)),\n        year = -1,\n        month = -1,\n        day = -1,\n        doy = -1,\n        literal = false,\n        date,\n        lookAhead = (match) => {\n          let matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match)\n          if (matches) {\n            iFormat++\n          }\n          return matches\n        },\n        getNumber = (match) => {\n          let isDoubled = lookAhead(match),\n            size = (match === '@' ? 14 : (match === '!' ? 20 :\n              (match === 'y' && isDoubled ? 4 : (match === 'o' ? 3 : 2)))),\n            minSize = (match === 'y' ? size : 1),\n            digits = new RegExp('^\\\\d{' + minSize + ',' + size + '}'),\n            num = value.substring(iValue).match(digits)\n          if (!num) {\n            throw 'Missing number at position ' + iValue\n          }\n          iValue += num[0].length\n          return parseInt(num[0], 10)\n        },\n        getName = (match, shortNames, longNames) => {\n          let index = -1\n          let arr = lookAhead(match) ? longNames : shortNames\n          let names = []\n\n          for (let i = 0; i < arr.length; i++) {\n            names.push([i, arr[i]])\n          }\n          names.sort((a, b) => {\n            return -(a[1].length - b[1].length)\n          })\n\n          for (let i = 0; i < names.length; i++) {\n            let name = names[i][1]\n            if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n              index = names[i][0]\n              iValue += name.length\n              break\n            }\n          }\n\n          if (index !== -1) {\n            return index + 1\n          } else {\n            throw 'Unknown name at position ' + iValue\n          }\n        },\n        checkLiteral = () => {\n          if (value.charAt(iValue) !== format.charAt(iFormat)) {\n            throw 'Unexpected literal at position ' + iValue\n          }\n          iValue++\n        }\n\n      if (this.currentView === 'month') {\n        day = 1\n      }\n\n      for (iFormat = 0; iFormat < format.length; iFormat++) {\n        if (literal) {\n          if (format.charAt(iFormat) === '\\'' && !lookAhead('\\'')) {\n            literal = false\n          } else {\n            checkLiteral()\n          }\n        } else {\n          switch (format.charAt(iFormat)) {\n          case 'd':\n            day = getNumber('d')\n            break\n          case 'D':\n            getName('D', this.$primevue.config.locale.dayNamesShort, this.$primevue.config.locale.dayNames)\n            break\n          case 'o':\n            doy = getNumber('o')\n            break\n          case 'm':\n            month = getNumber('m')\n            break\n          case 'M':\n            month = getName('M', this.$primevue.config.locale.monthNamesShort, this.$primevue.config.locale.monthNames)\n            break\n          case 'y':\n            year = getNumber('y')\n            break\n          case '@':\n            date = new Date(getNumber('@'))\n            year = date.getFullYear()\n            month = date.getMonth() + 1\n            day = date.getDate()\n            break\n          case '!':\n            date = new Date((getNumber('!') - this.ticksTo1970) / 10000)\n            year = date.getFullYear()\n            month = date.getMonth() + 1\n            day = date.getDate()\n            break\n          case '\\'':\n            if (lookAhead('\\'')) {\n              checkLiteral()\n            } else {\n              literal = true\n            }\n            break\n          default:\n            checkLiteral()\n          }\n        }\n      }\n\n      if (iValue < value.length) {\n        extra = value.substr(iValue)\n        if (!/^\\s+/.test(extra)) {\n          throw 'Extra/unparsed characters found in date: ' + extra\n        }\n      }\n\n      if (year === -1) {\n        year = new Date().getFullYear()\n      } else if (year < 100) {\n        year += new Date().getFullYear() - new Date().getFullYear() % 100 +\n          (year <= shortYearCutoff ? 0 : -100)\n      }\n\n      if (doy > -1) {\n        month = 1\n        day = doy\n        do {\n          dim = this.getDaysCountInMonth(year, month - 1)\n          if (day <= dim) {\n            break\n          }\n          month++\n          day -= dim\n          // eslint-disable-next-line\n        } while (true);\n      }\n\n      date = this.daylightSavingAdjust(new Date(year, month - 1, day))\n      if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n        throw 'Invalid date' // E.g. 31/02/00\n      }\n\n      return date\n    },\n    getWeekNumber(date) {\n      let checkDate = new Date(date.getTime())\n      checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7))\n      let time = checkDate.getTime()\n      checkDate.setMonth(0)\n      checkDate.setDate(1)\n      return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1\n    },\n    onDateCellKeydown(event, date, groupIndex) {\n      const cellContent = event.currentTarget\n      const cell = cellContent.parentElement\n\n      switch (event.which) {\n      //down arrow\n      case 40: {\n        cellContent.tabIndex = '-1'\n        let cellIndex = DomHandler.index(cell)\n        let nextRow = cell.parentElement.nextElementSibling\n        if (nextRow) {\n          let focusCell = nextRow.children[cellIndex].children[0]\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigationState = { backward: false }\n            this.navForward(event)\n          }\n          else {\n            nextRow.children[cellIndex].children[0].tabIndex = '0'\n            nextRow.children[cellIndex].children[0].focus()\n          }\n        }\n        else {\n          this.navigationState = { backward: false }\n          this.navForward(event)\n        }\n        event.preventDefault()\n        break\n      }\n\n      //up arrow\n      case 38: {\n        cellContent.tabIndex = '-1'\n        let cellIndex = DomHandler.index(cell)\n        let prevRow = cell.parentElement.previousElementSibling\n        if (prevRow) {\n          let focusCell = prevRow.children[cellIndex].children[0]\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigationState = { backward: true }\n            this.navBackward(event)\n          }\n          else {\n            focusCell.tabIndex = '0'\n            focusCell.focus()\n          }\n        }\n        else {\n          this.navigationState = { backward: true }\n          this.navBackward(event)\n        }\n        event.preventDefault()\n        break\n      }\n\n      //left arrow\n      case 37: {\n        cellContent.tabIndex = '-1'\n        let prevCell = cell.previousElementSibling\n        if (prevCell) {\n          let focusCell = prevCell.children[0]\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigateToMonth(true, groupIndex)\n          }\n          else {\n            focusCell.tabIndex = '0'\n            focusCell.focus()\n          }\n        }\n        else {\n          this.navigateToMonth(true, groupIndex)\n        }\n        event.preventDefault()\n        break\n      }\n\n      //right arrow\n      case 39: {\n        cellContent.tabIndex = '-1'\n        let nextCell = cell.nextElementSibling\n        if (nextCell) {\n          let focusCell = nextCell.children[0]\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\n            this.navigateToMonth(false, groupIndex)\n          }\n          else {\n            focusCell.tabIndex = '0'\n            focusCell.focus()\n          }\n        }\n        else {\n          this.navigateToMonth(false, groupIndex)\n        }\n        event.preventDefault()\n        break\n      }\n\n      //enter\n      case 13:\n      case 32: {\n        this.onDateSelect(event, date)\n        event.preventDefault()\n        break\n      }\n\n      //escape\n      case 27: {\n        this.overlayVisible = false\n        event.preventDefault()\n        break\n      }\n\n      //tab\n      case 9: {\n        if (!this.inline) {\n          this.trapFocus(event)\n        }\n        break\n      }\n\n      default:\n        //no op\n        break\n      }\n    },\n    navigateToMonth(prev, groupIndex) {\n      if (prev) {\n        if (this.numberOfMonths === 1 || (groupIndex === 0)) {\n          this.navigationState = { backward: true }\n          this.navBackward(event)\n        }\n        else {\n          let prevMonthContainer = this.$refs.overlay.children[groupIndex - 1]\n          let cells = DomHandler.find(prevMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)')\n          let focusCell = cells[cells.length - 1]\n          focusCell.tabIndex = '0'\n          focusCell.focus()\n        }\n      }\n      else {\n        if (this.numberOfMonths === 1 || (groupIndex === this.numberOfMonths - 1)) {\n          this.navigationState = { backward: false }\n          this.navForward(event)\n        }\n        else {\n          let nextMonthContainer = this.$refs.overlay.children[groupIndex + 1]\n          let focusCell = DomHandler.findSingle(nextMonthContainer, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)')\n          focusCell.tabIndex = '0'\n          focusCell.focus()\n        }\n      }\n    },\n    onMonthCellKeydown(event, index) {\n      const cell = event.currentTarget\n\n      switch (event.which) {\n      //arrows\n      case 38:\n      case 40: {\n        cell.tabIndex = '-1'\n        var cells = cell.parentElement.children\n        var cellIndex = DomHandler.index(cell)\n        let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3]\n        if (nextCell) {\n          nextCell.tabIndex = '0'\n          nextCell.focus()\n        }\n        event.preventDefault()\n        break\n      }\n\n      //left arrow\n      case 37: {\n        cell.tabIndex = '-1'\n        let prevCell = cell.previousElementSibling\n        if (prevCell) {\n          prevCell.tabIndex = '0'\n          prevCell.focus()\n        }\n        else {\n          this.navigationState = { backward: true }\n          this.navBackward(event)\n        }\n        event.preventDefault()\n        break\n      }\n\n      //right arrow\n      case 39: {\n        cell.tabIndex = '-1'\n        let nextCell = cell.nextElementSibling\n        if (nextCell) {\n          nextCell.tabIndex = '0'\n          nextCell.focus()\n        }\n        else {\n          this.navigationState = { backward: false }\n          this.navForward(event)\n        }\n        event.preventDefault()\n        break\n      }\n\n      //enter\n      case 13:\n      case 32: {\n        this.onMonthSelect(event, index)\n        event.preventDefault()\n        break\n      }\n\n      //escape\n      case 27: {\n        this.overlayVisible = false\n        event.preventDefault()\n        break\n      }\n\n      //tab\n      case 9: {\n        if (!this.inline) {\n          this.trapFocus(event)\n        }\n        break\n      }\n\n      default:\n        //no op\n        break\n      }\n    },\n    onYearCellKeydown(event, index) {\n      const cell = event.currentTarget\n      switch (event.which) {\n      //arrows\n      case 38:\n      case 40: {\n        cell.tabIndex = '-1'\n        var cells = cell.parentElement.children\n        var cellIndex = DomHandler.index(cell)\n        let nextCell = cells[event.which === 40 ? cellIndex + 2 : cellIndex - 2]\n        if (nextCell) {\n          nextCell.tabIndex = '0'\n          nextCell.focus()\n        }\n        event.preventDefault()\n        break\n      }\n      //left arrow\n      case 37: {\n        cell.tabIndex = '-1'\n        let prevCell = cell.previousElementSibling\n        if (prevCell) {\n          prevCell.tabIndex = '0'\n          prevCell.focus()\n        }\n        else {\n          this.navigationState = { backward: true }\n          this.navBackward(event)\n        }\n        event.preventDefault()\n        break\n      }\n      //right arrow\n      case 39: {\n        cell.tabIndex = '-1'\n        let nextCell = cell.nextElementSibling\n        if (nextCell) {\n          nextCell.tabIndex = '0'\n          nextCell.focus()\n        }\n        else {\n          this.navigationState = { backward: false }\n          this.navForward(event)\n        }\n        event.preventDefault()\n        break\n      }\n      //enter\n      case 13:\n      case 32: {\n        this.onMonthSelect(event, index)\n        event.preventDefault()\n        break\n      }\n      //escape\n      case 27: {\n        this.overlayVisible = false\n        event.preventDefault()\n        break\n      }\n      //tab\n      case 9: {\n        this.trapFocus(event)\n        break\n      }\n      default:\n        //no op\n        break\n      }\n    },\n    updateFocus() {\n      let cell\n      if (this.navigationState) {\n        if (this.navigationState.button) {\n          this.initFocusableCell()\n          if (this.navigationState.backward)\n            DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-prev').focus()\n          else\n            DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-next').focus()\n        }\n        else {\n          if (this.navigationState.backward) {\n            let cells\n            if (this.currentView === 'month') {\n              cells = DomHandler.find(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)')\n            }\n            else if (this.currentView === 'year') {\n              cells = DomHandler.find(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year:not(.p-disabled)')\n            }\n            else {\n              cells = DomHandler.find(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)')\n            }\n            if (cells && cells.length > 0) {\n              cell = cells[cells.length - 1]\n            }\n          }\n          else {\n            if (this.currentView === 'month') {\n              cell = DomHandler.findSingle(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month:not(.p-disabled)')\n            }\n            else if (this.currentView === 'year') {\n              cell = DomHandler.findSingle(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year:not(.p-disabled)')\n            }\n            else {\n              cell = DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)')\n            }\n          }\n          if (cell) {\n            cell.tabIndex = '0'\n            cell.focus()\n          }\n        }\n\n        this.navigationState = null\n      }\n      else {\n        this.initFocusableCell()\n      }\n    },\n    initFocusableCell() {\n      let cell\n      if (this.currentView === 'month') {\n        let cells = DomHandler.find(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month')\n        let selectedCell = DomHandler.findSingle(this.$refs.overlay, '.p-monthpicker .p-monthpicker-month.p-highlight')\n        cells.forEach(cell => cell.tabIndex = -1)\n        cell = selectedCell || cells[0]\n      }\n      else if (this.currentView === 'year') {\n        let cells = DomHandler.find(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year')\n        let selectedCell = DomHandler.findSingle(this.$refs.overlay, '.p-yearpicker .p-yearpicker-year.p-highlight')\n        cells.forEach(cell => cell.tabIndex = -1)\n        cell = selectedCell || cells[0]\n      }\n      else {\n        if (this.$refs.overlay) {\n          cell = DomHandler.findSingle(this.$refs.overlay, 'span.p-highlight')\n          if (!cell) {\n            let todayCell = DomHandler.findSingle(this.$refs.overlay, 'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)')\n            if (todayCell)\n              cell = todayCell\n            else\n              cell = DomHandler.findSingle(this.$refs.overlay, '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink')\n          }\n        }\n      }\n\n      if (cell) {\n        cell.tabIndex = '0'\n\n        if (!this.preventFocus && (!this.navigationState || !this.navigationState.button) && !this.timePickerChange) {\n          cell.focus()\n        }\n\n        this.preventFocus = false\n      }\n    },\n    trapFocus(event) {\n      event.preventDefault()\n      let focusableElements = DomHandler.getFocusableElements(this.$refs.overlay)\n\n      if (focusableElements && focusableElements.length > 0) {\n        if (!document.activeElement) {\n          focusableElements[0].focus()\n        }\n        else {\n          let focusedIndex = focusableElements.indexOf(document.activeElement)\n\n          if (event.shiftKey) {\n            if (focusedIndex == -1 || focusedIndex === 0)\n              focusableElements[focusableElements.length - 1].focus()\n            else\n              focusableElements[focusedIndex - 1].focus()\n          }\n          else {\n            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n              focusableElements[0].focus()\n            else\n              focusableElements[focusedIndex + 1].focus()\n          }\n        }\n      }\n    },\n    onContainerButtonKeydown(event) {\n      switch (event.which) {\n      //tab\n      case 9:\n        if (!this.inline) {\n          this.trapFocus(event)\n        }\n        break\n\n        //escape\n      case 27:\n        this.overlayVisible = false\n        event.preventDefault()\n        break\n\n      default:\n        //Noop\n        break\n      }\n    },\n    onInput(val) {\n      // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\n      if (!this.isKeydown) {\n        return\n      }\n      this.isKeydown = false\n\n      try {\n        this.selectionStart = this.$refs.input.$el.selectionStart\n        this.selectionEnd = this.$refs.input.$el.selectionEnd\n\n        let value = this.parseValue(val)\n        if (this.isValidSelection(value)) {\n          this.updateModel(value)\n        }\n      }\n      catch (err) {\n        this.updateModel(val)\n      }\n    },\n    appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body')\n          document.body.appendChild(this.$refs.overlay)\n        else\n          document.getElementById(this.appendTo).appendChild(this.$refs.overlay)\n      }\n    },\n    restoreAppend() {\n      if (this.$refs.overlay && this.appendTo) {\n        if (this.appendTo === 'body')\n          document.body.removeChild(this.$refs.overlay)\n        else\n          document.getElementById(this.appendTo).removeChild(this.$refs.overlay)\n      }\n    },\n    getMonthName(index) {\n      return this.$primevue.config.locale.monthNames[index]\n    },\n    getYear(month) {\n      return (this.currentView === 'month' ? this.currentYear : month.year) + this.yearName\n    },\n    createResponsiveStyle() {\n      if (this.numberOfMonths > 1 && this.responsiveOptions) {\n        if (!this.responsiveStyleElement) {\n          this.responsiveStyleElement = document.createElement('style')\n          this.responsiveStyleElement.type = 'text/css'\n          document.body.appendChild(this.responsiveStyleElement)\n        }\n        let innerHTML = ''\n        if (this.responsiveOptions) {\n          let responsiveOptions = [...this.responsiveOptions]\n            .filter(o => !!(o.breakpoint && o.numMonths))\n            .sort((o1, o2) => -1 * o1.breakpoint.localeCompare(o2.breakpoint, undefined, { numeric: true }))\n          for (let i = 0; i < responsiveOptions.length; i++) {\n            let { breakpoint, numMonths } = responsiveOptions[i]\n            let styles = `\n                            .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${numMonths}) .p-datepicker-next {\n                                display: inline-flex !important;\n                            }\n                        `\n            for (let j = numMonths; j < this.numberOfMonths; j++) {\n              styles += `\n                                .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${j + 1}) {\n                                    display: none !important;\n                                }\n                            `\n            }\n            innerHTML += `\n                            @media screen and (max-width: ${breakpoint}) {\n                                ${styles}\n                            }\n                        `\n          }\n        }\n        this.responsiveStyleElement.innerHTML = innerHTML\n      }\n    },\n    destroyResponsiveStyleElement() {\n      if (this.responsiveStyleElement) {\n        this.responsiveStyleElement.remove()\n        this.responsiveStyleElement = null\n      }\n    }\n  },\n  computed: {\n    listeners() {\n      let $vm = this\n\n      return {\n        ...$vm.$listeners,\n        input: val => {\n          this.onInput(val)\n        },\n        focus: event => {\n          $vm.focus = true\n          if ($vm.showOnFocus && $vm.isEnabled()) {\n            $vm.overlayVisible = true\n          }\n          $vm.focused = true\n          $vm.$emit('focus', event)\n        },\n        blur: event => {\n          $vm.focused = false\n          $vm.$emit('blur', event)\n        },\n        keydown: event => {\n          $vm.isKeydown = true\n\n          if (event.keyCode === 40 && $vm.$refs.overlay) {\n            $vm.trapFocus(event)\n          }\n          else if (event.keyCode === 27) {\n            if ($vm.overlayVisible) {\n              $vm.overlayVisible = false\n              event.preventDefault()\n            }\n          }\n          else if (event.keyCode === 9) {\n            if ($vm.showOnFocus) {\n              DomHandler.getFocusableElements($vm.$refs.overlay).forEach(el => el.tabIndex = '-1')\n            }\n            if ($vm.overlayVisible) {\n              $vm.overlayVisible = false\n            }\n          }\n\n          $vm.$emit('keydown', event)\n        }\n      }\n    },\n    viewDate() {\n      let propValue = this.value\n      if (typeof propValue === 'string') {\n        return new Date()\n      }\n\n      if (propValue && Array.isArray(propValue)) {\n        if (this.isRangeSelection()) {\n          propValue = propValue[1] || propValue[0]\n        } else if (this.isMultipleSelection()) {\n          propValue = propValue[propValue.length - 1]\n        }\n      }\n\n      return propValue || new Date()\n    },\n    inputFieldValue() {\n      return this.formatValue(this.value)\n    },\n    containerClass() {\n      return [\n        'p-calendar p-component p-inputwrapper', this.className,\n        {\n          'p-calendar-w-btn': this.showIcon,\n          'p-calendar-timeonly': this.timeOnly,\n          'p-inputwrapper-filled': this.value,\n          'p-inputwrapper-focus': this.focused\n        }\n      ]\n    },\n    panelStyleClass() {\n      return [\n        'p-datepicker p-component', this.panelClass,\n        {\n          'p-datepicker-inline': this.inline,\n          'p-disabled': this.$attrs.disabled,\n          'p-datepicker-timeonly': this.timeOnly,\n          'p-datepicker-multiple-month': this.numberOfMonths > 1,\n          'p-datepicker-monthpicker': (this.currentView === 'month'),\n          'p-datepicker-yearpicker': (this.currentView === 'year'),\n          'p-datepicker-touch-ui': this.touchUI\n        }\n      ]\n    },\n    months() {\n      let months = []\n      for (let i = 0; i < this.numberOfMonths; i++) {\n        let month = this.currentMonth + i\n        let year = this.currentYear\n        if (month > 11) {\n          month = month % 11 - 1\n          year = year + 1\n        }\n\n        let dates = []\n        let firstDay = this.getFirstDayOfMonthIndex(month, year)\n        let daysLength = this.getDaysCountInMonth(month, year)\n        let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year)\n        let dayNo = 1\n        let today = new Date()\n        let weekNumbers = []\n        let monthRows = Math.ceil((daysLength + firstDay) / 7)\n\n        for (let i = 0; i < monthRows; i++) {\n          let week = []\n\n          if (i == 0) {\n            for (let j = (prevMonthDaysLength - firstDay + 1); j <= prevMonthDaysLength; j++) {\n              let prev = this.getPreviousMonthAndYear(month, year)\n              week.push({\n                day: j, month: prev.month, year: prev.year, otherMonth: true,\n                today: this.isToday(today, j, prev.month, prev.year), selectable: this.isSelectable(j, prev.month, prev.year, true)\n              })\n            }\n\n            let remainingDaysLength = 7 - week.length\n            for (let j = 0; j < remainingDaysLength; j++) {\n              week.push({\n                day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                selectable: this.isSelectable(dayNo, month, year, false)\n              })\n              dayNo++\n            }\n          }\n          else {\n            for (let j = 0; j < 7; j++) {\n              if (dayNo > daysLength) {\n                let next = this.getNextMonthAndYear(month, year)\n                week.push({\n                  day: dayNo - daysLength, month: next.month, year: next.year, otherMonth: true,\n                  today: this.isToday(today, dayNo - daysLength, next.month, next.year),\n                  selectable: this.isSelectable((dayNo - daysLength), next.month, next.year, true)\n                })\n              }\n              else {\n                week.push({\n                  day: dayNo, month: month, year: year, today: this.isToday(today, dayNo, month, year),\n                  selectable: this.isSelectable(dayNo, month, year, false)\n                })\n              }\n\n              dayNo++\n            }\n          }\n\n          if (this.showWeek) {\n            weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)))\n          }\n\n          dates.push(week)\n        }\n\n        months.push({\n          month: month,\n          year: year,\n          dates: dates,\n          weekNumbers: weekNumbers\n        })\n      }\n\n      return months\n    },\n    weekDays() {\n      let weekDays = []\n      let dayIndex = this.$primevue.config.locale.firstDayOfWeek\n      for (let i = 0; i < 7; i++) {\n        weekDays.push(this.$primevue.config.locale.dayNamesMin[dayIndex])\n        dayIndex = (dayIndex == 6) ? 0 : ++dayIndex\n      }\n\n      return weekDays\n    },\n    ticksTo1970() {\n      return (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000)\n    },\n    sundayIndex() {\n      return this.$primevue.config.locale.firstDayOfWeek > 0 ? 7 - this.$primevue.config.locale.firstDayOfWeek : 0\n    },\n    datePattern() {\n      return this.dateFormat || this.$primevue.config.locale.dateFormat\n    },\n    yearOptions() {\n      if (this.yearRange) {\n        let $vm = this\n        const years = this.yearRange.split(':')\n        let yearStart = parseInt(years[0])\n        let yearEnd = parseInt(years[1])\n        let yearOptions = []\n\n        if (this.currentYear < yearStart) {\n          $vm.currentYear = yearEnd\n        }\n        else if (this.currentYear > yearEnd) {\n          $vm.currentYear = yearStart\n        }\n\n        for (let i = yearStart; i <= yearEnd; i++) {\n          yearOptions.push(i)\n        }\n\n        return yearOptions\n      }\n      else {\n        return null\n      }\n    },\n    monthPickerValues() {\n      let monthPickerValues = []\n      for (let i = 0; i <= 11; i++) {\n        monthPickerValues.push(this.$primevue.config.locale.monthNamesShort[i])\n      }\n\n      return monthPickerValues\n    },\n    yearPickerValues() {\n      let yearPickerValues = []\n      let base = this.currentYear - (this.currentYear % 10)\n      for (let i = 0; i < 10; i++) {\n        yearPickerValues.push(base + i)\n      }\n      return yearPickerValues\n    },\n    formattedCurrentHour() {\n      return this.currentHour < 10 ? '0' + this.currentHour : this.currentHour\n    },\n    formattedCurrentMinute() {\n      return this.currentMinute < 10 ? '0' + this.currentMinute : this.currentMinute\n    },\n    formattedCurrentSecond() {\n      return this.currentSecond < 10 ? '0' + this.currentSecond : this.currentSecond\n    },\n    datePickerTitle() {\n      return this.$primevue.config.locale.datePickerTitle || ['date', 'year']\n    },\n    amLabel() {\n      return this.$primevue.config.locale.am || 'AM'\n    },\n    pmLabel() {\n      return this.$primevue.config.locale.pm || 'PM'\n    },\n    todayLabel() {\n      return this.$primevue.config.locale.today\n    },\n    clearLabel() {\n      return this.$primevue.config.locale.clear\n    },\n    weekHeaderLabel() {\n      return this.$primevue.config.locale.weekHeader\n    },\n    monthNames() {\n      return this.$primevue.config.locale.monthNames\n    },\n    yearName() {\n      return this.$primevue.config.locale.yearName\n    },\n    attributeSelector() {\n      return UniqueComponentId()\n    },\n    switchViewButtonDisabled() {\n      return this.numberOfMonths > 1 || this.$attrs.disabled\n    }\n  },\n  components: {\n    'CalendarInputText': InputText,\n    'CalendarButton': Button\n  },\n  directives: {\n    'ripple': Ripple\n  }\n}\n<\/script>\n\n<style>\n.p-calendar {\n  position: relative;\n  display: inline-flex;\n  max-width: 100%;\n}\n\n.p-calendar .p-inputtext {\n  flex: 1 1 auto;\n  width: 1%;\n}\n\n.p-calendar-w-btn .p-inputtext {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.p-calendar-w-btn .p-datepicker-trigger {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n/* Fluid */\n.p-fluid .p-calendar {\n  display: flex;\n}\n\n.p-fluid .p-calendar .p-inputtext {\n  width: 1%;\n}\n\n/* Datepicker */\n.p-calendar .p-datepicker {\n  min-width: 100%;\n}\n\n.p-datepicker {\nwidth: auto;\n  position: absolute;\n}\n\n.p-datepicker-inline {\n  display: inline-block;\n  position: static;\n  overflow-x: auto;\n}\n\n/* Header */\n.p-datepicker-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.p-datepicker-header .p-datepicker-title {\n  margin: 0 auto;\n}\n\n.p-datepicker-prev,\n.p-datepicker-next {\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  position: relative;\n}\n\n/* Multiple Month DatePicker */\n.p-datepicker-multiple-month .p-datepicker-group-container {\n  display: flex;\n}\n\n.p-datepicker-multiple-month .p-datepicker-group-container .p-datepicker-group {\n  flex: 1 1 auto;\n}\n\n/* DatePicker Table */\n.p-datepicker table {\nwidth: 100%;\nborder-collapse: collapse;\n}\n\n.p-datepicker td > span {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  margin: 0 auto;\n  overflow: hidden;\n  position: relative;\n}\n\n/* Month Picker */\n.p-monthpicker-month {\n  width: 33.3%;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n\n/* Year Picker */\n.p-yearpicker-year {\n  width: 50%;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n\n/*  Button Bar */\n.p-datepicker-buttonbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n/* Time Picker */\n.p-timepicker {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.p-timepicker button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n\n.p-timepicker > div {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n/* Touch UI */\n.p-datepicker-touch-ui,\n.p-calendar .p-datepicker-touch-ui {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  min-width: 80vw;\n  transform: translate(-50%, -50%);\n}\n</style>\n"]},media:void 0})}),C,undefined,false,undefined,!1,g,void 0,void 0);export{x as default};
