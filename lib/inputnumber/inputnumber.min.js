this.primevue2=this.primevue2||{},this.primevue2.inputnumber=function(e,n){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){u(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n,t){var r;return(n="symbol"==i(r=a(n,"string"))?r:r+"")in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,n||"default");if("object"!=i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}function l(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(e,n){if(e){if("string"==typeof e)return h(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?h(e,n):void 0}}function c(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function p(e){if(Array.isArray(e))return h(e)}function h(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}var d={name:"InputNumber",inheritAttrs:!1,props:{value:{type:Number,default:null},format:{type:Boolean,default:!0},showButtons:{type:Boolean,default:!1},buttonLayout:{type:String,default:"stacked"},incrementButtonClass:{type:String,default:null},decrementButtonClass:{type:String,default:null},incrementButtonIcon:{type:String,default:"pi pi-angle-up"},decrementButtonIcon:{type:String,default:"pi pi-angle-down"},locale:{type:String,default:void 0},localeMatcher:{type:String,default:void 0},mode:{type:String,default:"decimal"},prefix:{type:String,default:null},suffix:{type:String,default:null},currency:{type:String,default:void 0},currencyDisplay:{type:String,default:void 0},useGrouping:{type:Boolean,default:!0},minFractionDigits:{type:Number,default:void 0},maxFractionDigits:{type:Number,default:void 0},min:{type:Number,default:null},max:{type:Number,default:null},step:{type:Number,default:1},allowEmpty:{type:Boolean,default:!0},styles:null,className:null,inputStyle:null,inputClass:null},numberFormat:null,_numeral:null,_decimal:null,_group:null,_minusSign:null,_currency:null,_suffix:null,_prefix:null,_index:null,groupChar:"",isSpecialChar:null,prefixChar:null,suffixChar:null,timer:null,data:function(){return{d_value:null,focused:!1}},watch:{value:function(e){this.d_value=e},locale:function(e,n){this.updateConstructParser(e,n)},localeMatcher:function(e,n){this.updateConstructParser(e,n)},mode:function(e,n){this.updateConstructParser(e,n)},currency:function(e,n){this.updateConstructParser(e,n)},currencyDisplay:function(e,n){this.updateConstructParser(e,n)},useGrouping:function(e,n){this.updateConstructParser(e,n)},minFractionDigits:function(e,n){this.updateConstructParser(e,n)},maxFractionDigits:function(e,n){this.updateConstructParser(e,n)},suffix:function(e,n){this.updateConstructParser(e,n)},prefix:function(e,n){this.updateConstructParser(e,n)}},created:function(){this.constructParser()},methods:{getOptions:function(){return{localeMatcher:this.localeMatcher,style:this.mode,currency:this.currency,currencyDisplay:this.currencyDisplay,useGrouping:this.useGrouping,minimumFractionDigits:this.minFractionDigits,maximumFractionDigits:this.maxFractionDigits}},constructParser:function(){this.numberFormat=new Intl.NumberFormat(this.locale,this.getOptions());var e,n=(e=new Intl.NumberFormat(this.locale,{useGrouping:!1}).format(9876543210),p(e)||c(e)||o(e)||l()).reverse(),t=new Map(n.map((function(e,n){return[e,n]})));this._numeral=new RegExp("[".concat(n.join(""),"]"),"g"),this._group=this.getGroupingExpression(),this._minusSign=this.getMinusSignExpression(),this._currency=this.getCurrencyExpression(),this._decimal=this.getDecimalExpression(),this._suffix=this.getSuffixExpression(),this._prefix=this.getPrefixExpression(),this._index=function(e){return t.get(e)}},updateConstructParser:function(e,n){e!==n&&this.constructParser()},escapeRegExp:function(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},getDecimalExpression:function(){var e=new Intl.NumberFormat(this.locale,s(s({},this.getOptions()),{},{useGrouping:!1}));return new RegExp("[".concat(e.format(1.1).replace(this._currency,"").trim().replace(this._numeral,""),"]"),"g")},getGroupingExpression:function(){var e=new Intl.NumberFormat(this.locale,{useGrouping:!0});return this.groupChar=e.format(1e6).trim().replace(this._numeral,"").charAt(0),new RegExp("[".concat(this.groupChar,"]"),"g")},getMinusSignExpression:function(){var e=new Intl.NumberFormat(this.locale,{useGrouping:!1});return new RegExp("[".concat(e.format(-1).trim().replace(this._numeral,""),"]"),"g")},getCurrencyExpression:function(){if(this.currency){var e=new Intl.NumberFormat(this.locale,{style:"currency",currency:this.currency,currencyDisplay:this.currencyDisplay,minimumFractionDigits:0,maximumFractionDigits:0});return new RegExp("[".concat(e.format(1).replace(/\s/g,"").replace(this._numeral,"").replace(this._group,""),"]"),"g")}return new RegExp("[]","g")},getPrefixExpression:function(){if(this.prefix)this.prefixChar=this.prefix;else{var e=new Intl.NumberFormat(this.locale,{style:this.mode,currency:this.currency,currencyDisplay:this.currencyDisplay});this.prefixChar=e.format(1).split("1")[0]}return new RegExp("".concat(this.escapeRegExp(this.prefixChar||"")),"g")},getSuffixExpression:function(){if(this.suffix)this.suffixChar=this.suffix;else{var e=new Intl.NumberFormat(this.locale,{style:this.mode,currency:this.currency,currencyDisplay:this.currencyDisplay,minimumFractionDigits:0,maximumFractionDigits:0});this.suffixChar=e.format(1).split("1")[1]}return new RegExp("".concat(this.escapeRegExp(this.suffixChar||"")),"g")},formatValue:function(e){if(null!=e){if("-"===e)return e;if(this.format){var n=new Intl.NumberFormat(this.locale,this.getOptions()).format(e);return this.prefix&&(n=this.prefix+n),this.suffix&&(n+=this.suffix),n}return e.toString()}return""},parseValue:function(e){var n=e.replace(this._suffix,"").replace(this._prefix,"").trim().replace(/\s/g,"").replace(this._currency,"").replace(this._group,"").replace(this._minusSign,"-").replace(this._decimal,".").replace(this._numeral,this._index);if(n){if("-"===n)return n;var t=+n;return isNaN(t)?null:t}return null},repeat:function(e,n,t){var i=this,r=n||500;this.clearTimer(),this.timer=setTimeout((function(){i.repeat(e,40,t)}),r),this.spin(e,t)},spin:function(e,n){if(this.$refs.input){var t=this.step*n,i=this.parseValue(this.$refs.input.$el.value)||0,r=this.validateValue(i+t);this.updateInput(r,null,"spin"),this.updateModel(e,r),this.handleOnInput(e,i,r)}},onUpButtonMouseDown:function(e){this.$attrs.disabled||(this.$refs.input.$el.focus(),this.repeat(e,null,1),e.preventDefault())},onUpButtonMouseUp:function(){this.$attrs.disabled||this.clearTimer()},onUpButtonMouseLeave:function(){this.$attrs.disabled||this.clearTimer()},onUpButtonKeyUp:function(){this.$attrs.disabled||this.clearTimer()},onUpButtonKeyDown:function(e){32!==e.keyCode&&13!==e.keyCode||this.repeat(e,null,1)},onDownButtonMouseDown:function(e){this.$attrs.disabled||(this.$refs.input.$el.focus(),this.repeat(e,null,-1),e.preventDefault())},onDownButtonMouseUp:function(){this.$attrs.disabled||this.clearTimer()},onDownButtonMouseLeave:function(){this.$attrs.disabled||this.clearTimer()},onDownButtonKeyUp:function(){this.$attrs.disabled||this.clearTimer()},onDownButtonKeyDown:function(e){32!==e.keyCode&&13!==e.keyCode||this.repeat(e,null,-1)},onUserInput:function(){this.isSpecialChar&&(this.$refs.input.$el.value=this.lastValue),this.isSpecialChar=!1},onInputKeyDown:function(e){if(this.lastValue=e.target.value,e.shiftKey||e.altKey)this.isSpecialChar=!0;else{var n=e.target.selectionStart,t=e.target.selectionEnd,i=e.target.value,r=null;switch(e.altKey&&e.preventDefault(),e.which){case 38:this.spin(e,1),e.preventDefault();break;case 40:this.spin(e,-1),e.preventDefault();break;case 37:this.isNumeralChar(i.charAt(n-1))||e.preventDefault();break;case 39:this.isNumeralChar(i.charAt(n))||e.preventDefault();break;case 13:r=this.validateValue(this.parseValue(i)),this.$refs.input.$el.value=this.formatValue(r),this.$refs.input.$el.setAttribute("aria-valuenow",r),this.updateModel(e,r);break;case 8:if(e.preventDefault(),n===t){var s=i.charAt(n-1),u=this.getDecimalCharIndexes(i),a=u.decimalCharIndex,l=u.decimalCharIndexWithoutPrefix;if(this.isNumeralChar(s)){var o=this.getDecimalLength(i);if(this._group.test(s))this._group.lastIndex=0,r=i.slice(0,n-2)+i.slice(n-1);else if(this._decimal.test(s))this._decimal.lastIndex=0,o?this.$refs.input.$el.setSelectionRange(n-1,n-1):r=i.slice(0,n-1)+i.slice(n);else if(a>0&&n>a){var c=this.isDecimalMode()&&(this.minFractionDigits||0)<o?"":"0";r=i.slice(0,n-1)+c+i.slice(n)}else 1===l?(r=i.slice(0,n-1)+"0"+i.slice(n),r=this.parseValue(r)>0?r:""):r=i.slice(0,n-1)+i.slice(n)}this.updateValue(e,r,null,"delete-single")}else r=this.deleteRange(i,n,t),this.updateValue(e,r,null,"delete-range");break;case 46:if(e.preventDefault(),n===t){var p=i.charAt(n),h=this.getDecimalCharIndexes(i),d=h.decimalCharIndex,f=h.decimalCharIndexWithoutPrefix;if(this.isNumeralChar(p)){var m=this.getDecimalLength(i);if(this._group.test(p))this._group.lastIndex=0,r=i.slice(0,n)+i.slice(n+2);else if(this._decimal.test(p))this._decimal.lastIndex=0,m?this.$refs.input.$el.setSelectionRange(n+1,n+1):r=i.slice(0,n)+i.slice(n+1);else if(d>0&&n>d){var A=this.isDecimalMode()&&(this.minFractionDigits||0)<m?"":"0";r=i.slice(0,n)+A+i.slice(n+1)}else 1===f?(r=i.slice(0,n)+"0"+i.slice(n+1),r=this.parseValue(r)>0?r:""):r=i.slice(0,n)+i.slice(n+1)}this.updateValue(e,r,null,"delete-back-single")}else r=this.deleteRange(i,n,t),this.updateValue(e,r,null,"delete-range")}}},onInputKeyUp:function(e){this.$emit("keyup",e)},onInputKeyPress:function(e){e.preventDefault();var n=e.which||e.keyCode,t=String.fromCharCode(n),i=this.isDecimalSign(t),r=this.isMinusSign(t);(48<=n&&n<=57||r||i)&&this.insert(e,t,{isDecimalSign:i,isMinusSign:r})},onPaste:function(e){e.preventDefault();var n=(e.clipboardData||window.clipboardData).getData("Text");if(n){var t=this.parseValue(n);null!=t&&this.insert(e,t.toString())}},allowMinusSign:function(){return null===this.min||this.min<0},isMinusSign:function(e){return!(!this._minusSign.test(e)&&"-"!==e)&&(this._minusSign.lastIndex=0,!0)},isDecimalSign:function(e){return!!this._decimal.test(e)&&(this._decimal.lastIndex=0,!0)},isDecimalMode:function(){return"decimal"===this.mode},getDecimalCharIndexes:function(e){var n=e.search(this._decimal);this._decimal.lastIndex=0;var t=e.replace(this._prefix,"").trim().replace(/\s/g,"").replace(this._currency,"").search(this._decimal);return this._decimal.lastIndex=0,{decimalCharIndex:n,decimalCharIndexWithoutPrefix:t}},getCharIndexes:function(e){var n=e.search(this._decimal);this._decimal.lastIndex=0;var t=e.search(this._minusSign);this._minusSign.lastIndex=0;var i=e.search(this._suffix);this._suffix.lastIndex=0;var r=e.search(this._currency);return this._currency.lastIndex=0,{decimalCharIndex:n,minusCharIndex:t,suffixCharIndex:i,currencyCharIndex:r}},insert:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{isDecimalSign:!1,isMinusSign:!1},i=n.search(this._minusSign);if(this._minusSign.lastIndex=0,this.allowMinusSign()||-1===i){var r,s=this.$refs.input.$el.selectionStart,u=this.$refs.input.$el.selectionEnd,a=this.$refs.input.$el.value.trim(),l=this.getCharIndexes(a),o=l.decimalCharIndex,c=l.suffixCharIndex,p=l.currencyCharIndex;if(t.isMinusSign)0===s&&(r=a,-1!==l.minusCharIndex&&0===u||(r=this.insertText(a,n,0,u)),this.updateValue(e,r,n,"insert"));else if(t.isDecimalSign)o>0&&s===o?this.updateValue(e,a,n,"insert"):(o>s&&o<u||-1===o&&this.maxFractionDigits)&&(r=this.insertText(a,n,s,u),this.updateValue(e,r,n,"insert"));else{var h=this.numberFormat.resolvedOptions().maximumFractionDigits,d=s!==u?"range-insert":"insert";if(o>0&&s>o){if(s+n.length-(o+1)<=h){var f=p>=s?p-1:c>=s?c:a.length;r=a.slice(0,s)+n+a.slice(s+n.length,f)+a.slice(f),this.updateValue(e,r,n,d)}}else r=this.insertText(a,n,s,u),this.updateValue(e,r,n,d)}}},insertText:function(e,n,t,i){if(2===("."===n?n:n.split(".")).length){var r=e.slice(t,i).search(this._decimal);return this._decimal.lastIndex=0,r>0?e.slice(0,t)+this.formatValue(n)+e.slice(i):e||this.formatValue(n)}return i-t===e.length?this.formatValue(n):0===t?n+e.slice(i):i===e.length?e.slice(0,t)+n:e.slice(0,t)+n+e.slice(i)},deleteRange:function(e,n,t){return t-n===e.length?"":0===n?e.slice(t):t===e.length?e.slice(0,n):e.slice(0,n)+e.slice(t)},initCursor:function(){var e=this.$refs.input.$el.selectionStart,n=this.$refs.input.$el.value,t=n.length,i=null,r=(this.prefixChar||"").length,s=(n=n.replace(this._prefix,"")).charAt(e-=r);if(this.isNumeralChar(s))return e+r;for(var u=e-1;u>=0;){if(s=n.charAt(u),this.isNumeralChar(s)){i=u+r;break}u--}if(null!==i)this.$refs.input.$el.setSelectionRange(i+1,i+1);else{for(u=e;u<t;){if(s=n.charAt(u),this.isNumeralChar(s)){i=u+r;break}u++}null!==i&&this.$refs.input.$el.setSelectionRange(i,i)}return i||0},onInputClick:function(){this.initCursor()},isNumeralChar:function(e){return!(1!==e.length||!(this._numeral.test(e)||this._decimal.test(e)||this._group.test(e)||this._minusSign.test(e)))&&(this.resetRegex(),!0)},resetRegex:function(){this._numeral.lastIndex=0,this._decimal.lastIndex=0,this._group.lastIndex=0,this._minusSign.lastIndex=0},updateValue:function(e,n,t,i){var r=this.$refs.input.$el.value,s=null;null!=n&&(s=this.parseValue(n),this.updateInput(s=s||this.allowEmpty?s:0,t,i,n),this.handleOnInput(e,r,s))},handleOnInput:function(e,n,t){this.isValueChanged(n,t)&&this.$emit("input",t)},isValueChanged:function(e,n){return null===n&&null!==e||null!=n&&n!==("string"==typeof e?this.parseValue(e):e)},validateValue:function(e){return"-"===e||null==e?null:null!=this.min&&e<this.min?this.min:null!=this.max&&e>this.max?this.max:e},updateInput:function(e,n,t,i){n=n||"";var r=this.$refs.input.$el.value,s=this.formatValue(e),u=r.length;if(s!==i&&(s=this.concatValues(s,i)),0===u){this.$refs.input.$el.value=s,this.$refs.input.$el.setSelectionRange(0,0);var a=this.initCursor()+n.length;this.$refs.input.$el.setSelectionRange(a,a)}else{var l=this.$refs.input.$el.selectionStart,o=this.$refs.input.$el.selectionEnd;this.$refs.input.$el.value=s;var c=s.length;if("range-insert"===t){var p=this.parseValue((r||"").slice(0,l)),h=(null!==p?p.toString():"").split("").join("(".concat(this.groupChar,")?")),d=new RegExp(h,"g");d.test(s);var f=n.split("").join("(".concat(this.groupChar,")?")),m=new RegExp(f,"g");m.test(s.slice(d.lastIndex)),this.$refs.input.$el.setSelectionRange(o=d.lastIndex+m.lastIndex,o)}else if(c===u)"insert"===t||"delete-back-single"===t?this.$refs.input.$el.setSelectionRange(o+1,o+1):"delete-single"===t?this.$refs.input.$el.setSelectionRange(o-1,o-1):"delete-range"!==t&&"spin"!==t||this.$refs.input.$el.setSelectionRange(o,o);else if("delete-back-single"===t){var A=r.charAt(o-1),g=r.charAt(o),b=u-c,x=this._group.test(g);x&&1===b?o+=1:!x&&this.isNumeralChar(A)&&(o+=-1*b+1),this._group.lastIndex=0,this.$refs.input.$el.setSelectionRange(o,o)}else if("-"===r&&"insert"===t){this.$refs.input.$el.setSelectionRange(0,0);var v=this.initCursor()+n.length+1;this.$refs.input.$el.setSelectionRange(v,v)}else this.$refs.input.$el.setSelectionRange(o+=c-u,o)}this.$refs.input.$el.setAttribute("aria-valuenow",e)},concatValues:function(e,n){if(e&&n){var t=n.search(this._decimal);return this._decimal.lastIndex=0,-1!==t?e.split(this._decimal)[0]+n.slice(t):e}return e},getDecimalLength:function(e){if(e){var n=e.split(this._decimal);if(2===n.length)return n[1].replace(this._suffix,"").trim().replace(/\s/g,"").replace(this._currency,"").length}return 0},updateModel:function(e,n){this.d_value=n,this.$emit("input",n)},onInputFocus:function(e){this.focused=!0,this.$emit("focus",e)},onInputBlur:function(e){this.focused=!1;var n=e.target,t=this.validateValue(this.parseValue(n.value));n.value=this.formatValue(t),n.setAttribute("aria-valuenow",t),this.updateModel(e,t),this.$emit("blur",e)},clearTimer:function(){this.timer&&clearInterval(this.timer)},maxBoundry:function(){return null!==this.d_value&&this.d_value>=this.max},minBoundry:function(){return null!==this.d_value&&this.d_value<=this.min}},computed:{containerClass:function(){return["p-inputnumber p-component p-inputwrapper",this.className,{"p-inputwrapper-filled":this.filled,"p-inputwrapper-focus":this.focused,"p-inputnumber-buttons-stacked":this.showButtons&&"stacked"===this.buttonLayout,"p-inputnumber-buttons-horizontal":this.showButtons&&"horizontal"===this.buttonLayout,"p-inputnumber-buttons-vertical":this.showButtons&&"vertical"===this.buttonLayout}]},upButtonClass:function(){return["p-inputnumber-button p-inputnumber-button-up",this.incrementButtonClass,{"p-disabled":this.showButtons&&null!==this.max&&this.maxBoundry()}]},downButtonClass:function(){return["p-inputnumber-button p-inputnumber-button-down",this.decrementButtonClass,{"p-disabled":this.showButtons&&null!==this.min&&this.minBoundry()}]},filled:function(){return null!=this.value&&this.value.toString().length>0},upButtonListeners:function(){var e=this;return{mousedown:function(n){return e.onUpButtonMouseDown(n)},mouseup:function(n){return e.onUpButtonMouseUp(n)},mouseleave:function(n){return e.onUpButtonMouseLeave(n)},keydown:function(n){return e.onUpButtonKeyDown(n)},keyup:function(n){return e.onUpButtonKeyUp(n)}}},downButtonListeners:function(){var e=this;return{mousedown:function(n){return e.onDownButtonMouseDown(n)},mouseup:function(n){return e.onDownButtonMouseUp(n)},mouseleave:function(n){return e.onDownButtonMouseLeave(n)},keydown:function(n){return e.onDownButtonKeyDown(n)},keyup:function(n){return e.onDownButtonKeyUp(n)}}},formattedValue:function(){return this.formatValue(this.value||this.allowEmpty?this.value:0)},getFormatter:function(){return this.numberFormat}},components:{INInputText:t(e).default,INButton:t(n).default}};function f(e,n,t,i,r,s,u,a,l,o){"boolean"!=typeof u&&(l=a,a=u,u=!1);const c="function"==typeof t?t.options:t;let p;if(e&&e.render&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns,c._compiled=!0,r&&(c.functional=!0)),i&&(c._scopeId=i),s?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,l(e)),e&&e._registeredComponents&&e._registeredComponents.add(s)},c._ssrRegister=p):n&&(p=u?function(e){n.call(this,o(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,a(e))}),p)if(c.functional){const e=c.render;c.render=function(n,t){return p.call(t),e(n,t)}}else{const e=c.beforeCreate;c.beforeCreate=e?[].concat(e,p):[p]}return t}const m="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function A(e){return(e,n)=>x(e,n)}let g;const b={};function x(e,n){const t=m?n.media||"default":e,i=b[t]||(b[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===g&&(g=document.head||document.getElementsByTagName("head")[0]),g.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),r=i.element.childNodes;r[e]&&i.element.removeChild(r[e]),r.length?i.element.insertBefore(n,r[e]):i.element.appendChild(n)}}}var v=d,w=function(){var e=this,n=e._self._c||e.$createElement;return n("span",{class:e.containerClass,style:e.styles},[n("INInputText",e._b({ref:"input",class:["p-inputnumber-input",e.inputClass],style:e.inputStyle,attrs:{value:e.formattedValue,"aria-valumin":e.min,"aria-valuemax":e.max},on:{input:e.onUserInput,keydown:e.onInputKeyDown,keyup:e.onInputKeyUp,keypress:e.onInputKeyPress,paste:e.onPaste,click:e.onInputClick,focus:e.onInputFocus,blur:e.onInputBlur}},"INInputText",e.$attrs,!1)),e._v(" "),e.showButtons&&"stacked"===e.buttonLayout?n("span",{staticClass:"p-inputnumber-button-group"},[n("INButton",e._g({class:e.upButtonClass,attrs:{icon:e.incrementButtonIcon,disabled:e.$attrs.disabled}},e.upButtonListeners)),e._v(" "),n("INButton",e._g({class:e.downButtonClass,attrs:{icon:e.decrementButtonIcon,disabled:e.$attrs.disabled}},e.downButtonListeners))],1):e._e(),e._v(" "),e.showButtons&&"stacked"!==e.buttonLayout?n("INButton",e._g({class:e.upButtonClass,attrs:{icon:e.incrementButtonIcon,disabled:e.$attrs.disabled}},e.upButtonListeners)):e._e(),e._v(" "),e.showButtons&&"stacked"!==e.buttonLayout?n("INButton",e._g({class:e.downButtonClass,attrs:{icon:e.decrementButtonIcon,disabled:e.$attrs.disabled}},e.downButtonListeners)):e._e()],1)};w._withStripped=!0;return f({render:w,staticRenderFns:[]},(function(e){e&&e("data-v-1c8eb647_0",{source:"\n.p-inputnumber {\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n}\n.p-inputnumber-button {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n      -ms-flex: 0 0 auto;\n          flex: 0 0 auto;\n}\n.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,\n.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label {\n  display: none;\n}\n.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  padding: 0;\n}\n.p-inputnumber-buttons-stacked .p-inputnumber-input {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  border-bottom-left-radius: 0;\n  padding: 0;\n}\n.p-inputnumber-buttons-stacked .p-inputnumber-button-group {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\n.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up {\n  -webkit-box-ordinal-group: 4;\n  -webkit-order: 3;\n      -ms-flex-order: 3;\n          order: 3;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.p-inputnumber-buttons-horizontal .p-inputnumber-input {\n  -webkit-box-ordinal-group: 3;\n  -webkit-order: 2;\n      -ms-flex-order: 2;\n          order: 2;\n  border-radius: 0;\n}\n.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down {\n  -webkit-box-ordinal-group: 2;\n  -webkit-order: 1;\n      -ms-flex-order: 1;\n          order: 1;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n.p-inputnumber-buttons-vertical {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up {\n  -webkit-box-ordinal-group: 2;\n  -webkit-order: 1;\n      -ms-flex-order: 1;\n          order: 1;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  width: 100%;\n}\n.p-inputnumber-buttons-vertical .p-inputnumber-input {\n  -webkit-box-ordinal-group: 3;\n  -webkit-order: 2;\n      -ms-flex-order: 2;\n          order: 2;\n  border-radius: 0;\n  text-align: center;\n}\n.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down {\n  -webkit-box-ordinal-group: 4;\n  -webkit-order: 3;\n      -ms-flex-order: 3;\n          order: 3;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  width: 100%;\n}\n.p-inputnumber-input {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\n.p-fluid .p-inputnumber {\n  width: 100%;\n}\n.p-fluid .p-inputnumber .p-inputnumber-input {\n  width: 1%;\n}\n.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input {\n  width: 100%;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/inputnumber/InputNumber.vue"],names:[],mappings:";AA6/BA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;AAEA;;EAEA,aAAA;AACA;AAEA;EACA,yBAAA;EACA,4BAAA;EACA,6BAAA;EACA,UAAA;AACA;AAEA;EACA,0BAAA;EACA,6BAAA;AACA;AAEA;EACA,yBAAA;EACA,0BAAA;EACA,4BAAA;EACA,UAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,4BAAA;EAAA,6BAAA;EAAA,8BAAA;MAAA,0BAAA;UAAA,sBAAA;AACA;AAEA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;AAEA;EACA,4BAAA;EAAA,gBAAA;MAAA,iBAAA;UAAA,QAAA;EACA,yBAAA;EACA,4BAAA;AACA;AAEA;EACA,4BAAA;EAAA,gBAAA;MAAA,iBAAA;UAAA,QAAA;EACA,gBAAA;AACA;AAEA;EACA,4BAAA;EAAA,gBAAA;MAAA,iBAAA;UAAA,QAAA;EACA,0BAAA;EACA,6BAAA;AACA;AAEA;EACA,4BAAA;EAAA,6BAAA;EAAA,8BAAA;MAAA,0BAAA;UAAA,sBAAA;AACA;AAEA;EACA,4BAAA;EAAA,gBAAA;MAAA,iBAAA;UAAA,QAAA;EACA,4BAAA;EACA,6BAAA;EACA,WAAA;AACA;AAEA;EACA,4BAAA;EAAA,gBAAA;MAAA,iBAAA;UAAA,QAAA;EACA,gBAAA;EACA,kBAAA;AACA;AAEA;EACA,4BAAA;EAAA,gBAAA;MAAA,iBAAA;UAAA,QAAA;EACA,yBAAA;EACA,0BAAA;EACA,WAAA;AACA;AAEA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;AAEA;EACA,WAAA;AACA;AAEA;EACA,SAAA;AACA;AAEA;EACA,WAAA;AACA",file:"InputNumber.vue",sourcesContent:["<template>\n  <span :class=\"containerClass\" :style=\"styles\">\n    <INInputText\n      ref=\"input\"\n      :class=\"['p-inputnumber-input', inputClass]\"\n      :style=\"inputStyle\"\n      :value=\"formattedValue\"\n      v-bind=\"$attrs\"\n      :aria-valumin=\"min\"\n      :aria-valuemax=\"max\"\n      @input=\"onUserInput\"\n      @keydown=\"onInputKeyDown\"\n      @keyup=\"onInputKeyUp\"\n      @keypress=\"onInputKeyPress\"\n      @paste=\"onPaste\"\n      @click=\"onInputClick\"\n      @focus=\"onInputFocus\"\n      @blur=\"onInputBlur\" />\n    <span class=\"p-inputnumber-button-group\" v-if=\"showButtons && buttonLayout === 'stacked'\">\n      <INButton\n        :class=\"upButtonClass\"\n        :icon=\"incrementButtonIcon\"\n        v-on=\"upButtonListeners\"\n        :disabled=\"$attrs.disabled\" />\n      <INButton\n        :class=\"downButtonClass\"\n        :icon=\"decrementButtonIcon\"\n        v-on=\"downButtonListeners\"\n        :disabled=\"$attrs.disabled\" />\n    </span>\n    <INButton\n      :class=\"upButtonClass\"\n      :icon=\"incrementButtonIcon\"\n      v-on=\"upButtonListeners\"\n      v-if=\"showButtons && buttonLayout !== 'stacked'\"\n      :disabled=\"$attrs.disabled\" />\n    <INButton\n      :class=\"downButtonClass\"\n      :icon=\"decrementButtonIcon\"\n      v-on=\"downButtonListeners\"\n      v-if=\"showButtons && buttonLayout !== 'stacked'\"\n      :disabled=\"$attrs.disabled\" />\n  </span>\n</template>\n\n<script>\nimport InputText from 'primevue2/inputtext'\nimport Button from 'primevue2/button'\n\nexport default {\n  name: 'InputNumber',\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Number,\n      default: null\n    },\n    format: {\n      type: Boolean,\n      default: true\n    },\n    showButtons: {\n      type: Boolean,\n      default: false\n    },\n    buttonLayout: {\n      type: String,\n      default: 'stacked'\n    },\n    incrementButtonClass: {\n      type: String,\n      default: null,\n    },\n    decrementButtonClass: {\n      type: String,\n      default: null,\n    },\n    incrementButtonIcon: {\n      type: String,\n      default: 'pi pi-angle-up',\n    },\n    decrementButtonIcon: {\n      type: String,\n      default: 'pi pi-angle-down',\n    },\n    locale: {\n      type: String,\n      default: undefined\n    },\n    localeMatcher: {\n      type: String,\n      default: undefined\n    },\n    mode: {\n      type: String,\n      default: 'decimal'\n    },\n    prefix: {\n      type: String,\n      default: null\n    },\n    suffix: {\n      type: String,\n      default: null\n    },\n    currency: {\n      type: String,\n      default: undefined\n    },\n    currencyDisplay: {\n      type: String,\n      default: undefined\n    },\n    useGrouping: {\n      type: Boolean,\n      default: true\n    },\n    minFractionDigits: {\n      type: Number,\n      default: undefined\n    },\n    maxFractionDigits: {\n      type: Number,\n      default: undefined\n    },\n    min: {\n      type: Number,\n      default: null\n    },\n    max: {\n      type: Number,\n      default: null\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    allowEmpty: {\n      type: Boolean,\n      default: true\n    },\n    styles: null,\n    className: null,\n    inputStyle: null,\n    inputClass: null\n  },\n  numberFormat: null,\n  _numeral: null,\n  _decimal: null,\n  _group: null,\n  _minusSign: null,\n  _currency: null,\n  _suffix: null,\n  _prefix: null,\n  _index: null,\n  groupChar: '',\n  isSpecialChar: null,\n  prefixChar: null,\n  suffixChar: null,\n  timer: null,\n  data() {\n    return {\n      d_value: null,\n      focused: false\n    }\n  },\n  watch: {\n    value(newValue) {\n      this.d_value = newValue\n    },\n    locale(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    localeMatcher(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    mode(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    currency(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    currencyDisplay(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    useGrouping(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    minFractionDigits(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    maxFractionDigits(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    suffix(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    },\n    prefix(newValue, oldValue) {\n      this.updateConstructParser(newValue, oldValue)\n    }\n  },\n  created() {\n    this.constructParser()\n  },\n  methods: {\n    getOptions() {\n      return {\n        localeMatcher: this.localeMatcher,\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        useGrouping: this.useGrouping,\n        minimumFractionDigits: this.minFractionDigits,\n        maximumFractionDigits: this.maxFractionDigits\n      }\n    },\n    constructParser() {\n      this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions())\n      const numerals = [...new Intl.NumberFormat(this.locale, { useGrouping: false }).format(9876543210)].reverse()\n      const index = new Map(numerals.map((d, i) => [d, i]))\n      this._numeral = new RegExp(`[${numerals.join('')}]`, 'g')\n      this._group = this.getGroupingExpression()\n      this._minusSign = this.getMinusSignExpression()\n      this._currency = this.getCurrencyExpression()\n      this._decimal = this.getDecimalExpression()\n      this._suffix = this.getSuffixExpression()\n      this._prefix = this.getPrefixExpression()\n      this._index = d => index.get(d)\n    },\n    updateConstructParser(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.constructParser()\n      }\n    },\n    escapeRegExp(text) {\n      return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n    },\n    getDecimalExpression() {\n      const formatter = new Intl.NumberFormat(this.locale, { ...this.getOptions(), useGrouping: false })\n      return new RegExp(`[${formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '')}]`, 'g')\n    },\n    getGroupingExpression() {\n      const formatter = new Intl.NumberFormat(this.locale, { useGrouping: true })\n      this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0)\n      return new RegExp(`[${this.groupChar}]`, 'g')\n    },\n    getMinusSignExpression() {\n      const formatter = new Intl.NumberFormat(this.locale, { useGrouping: false })\n      return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g')\n    },\n    getCurrencyExpression() {\n      if (this.currency) {\n        const formatter = new Intl.NumberFormat(this.locale, {\n          style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay,\n          minimumFractionDigits: 0, maximumFractionDigits: 0\n        })\n        return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g')\n      }\n\n      return new RegExp('[]', 'g')\n    },\n    getPrefixExpression() {\n      if (this.prefix) {\n        this.prefixChar = this.prefix\n      }\n      else {\n        const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay })\n        this.prefixChar = formatter.format(1).split('1')[0]\n      }\n\n      return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g')\n    },\n    getSuffixExpression() {\n      if (this.suffix) {\n        this.suffixChar = this.suffix\n      }\n      else {\n        const formatter = new Intl.NumberFormat(this.locale, {\n          style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay,\n          minimumFractionDigits: 0, maximumFractionDigits: 0\n        })\n        this.suffixChar = formatter.format(1).split('1')[1]\n      }\n\n      return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g')\n    },\n    formatValue(value) {\n      if (value != null) {\n        if (value === '-') { // Minus sign\n          return value\n        }\n\n        if (this.format) {\n          let formatter = new Intl.NumberFormat(this.locale, this.getOptions())\n          let formattedValue = formatter.format(value)\n          if (this.prefix) {\n            formattedValue = this.prefix + formattedValue\n          }\n\n          if (this.suffix) {\n            formattedValue = formattedValue + this.suffix\n          }\n\n          return formattedValue\n        }\n\n        return value.toString()\n      }\n\n      return ''\n    },\n    parseValue(text) {\n      let filteredText = text\n        .replace(this._suffix, '')\n        .replace(this._prefix, '')\n        .trim()\n        .replace(/\\s/g, '')\n        .replace(this._currency, '')\n        .replace(this._group, '')\n        .replace(this._minusSign, '-')\n        .replace(this._decimal, '.')\n        .replace(this._numeral, this._index)\n\n      if (filteredText) {\n        if (filteredText === '-') // Minus sign\n          return filteredText\n\n        let parsedValue = +filteredText\n        return isNaN(parsedValue) ? null : parsedValue\n      }\n\n      return null\n    },\n    repeat(event, interval, dir) {\n      let i = interval || 500\n\n      this.clearTimer()\n      this.timer = setTimeout(() => {\n        this.repeat(event, 40, dir)\n      }, i)\n\n      this.spin(event, dir)\n    },\n    spin(event, dir) {\n      if (this.$refs.input) {\n        let step = this.step * dir\n        let currentValue = this.parseValue(this.$refs.input.$el.value) || 0\n        let newValue = this.validateValue(currentValue + step)\n\n        this.updateInput(newValue, null, 'spin')\n        this.updateModel(event, newValue)\n\n        this.handleOnInput(event, currentValue, newValue)\n      }\n    },\n    onUpButtonMouseDown(event) {\n      if (!this.$attrs.disabled) {\n        this.$refs.input.$el.focus()\n        this.repeat(event, null, 1)\n        event.preventDefault()\n      }\n    },\n    onUpButtonMouseUp() {\n      if (!this.$attrs.disabled) {\n        this.clearTimer()\n      }\n    },\n    onUpButtonMouseLeave() {\n      if (!this.$attrs.disabled) {\n        this.clearTimer()\n      }\n    },\n    onUpButtonKeyUp() {\n      if (!this.$attrs.disabled) {\n        this.clearTimer()\n      }\n    },\n    onUpButtonKeyDown(event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        this.repeat(event, null, 1)\n      }\n    },\n    onDownButtonMouseDown(event) {\n      if (!this.$attrs.disabled) {\n        this.$refs.input.$el.focus()\n        this.repeat(event, null, -1)\n        event.preventDefault()\n      }\n    },\n    onDownButtonMouseUp() {\n      if (!this.$attrs.disabled) {\n        this.clearTimer()\n      }\n    },\n    onDownButtonMouseLeave() {\n      if (!this.$attrs.disabled) {\n        this.clearTimer()\n      }\n    },\n    onDownButtonKeyUp() {\n      if (!this.$attrs.disabled) {\n        this.clearTimer()\n      }\n    },\n    onDownButtonKeyDown(event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        this.repeat(event, null, -1)\n      }\n    },\n    onUserInput() {\n      if (this.isSpecialChar) {\n        this.$refs.input.$el.value = this.lastValue\n      }\n      this.isSpecialChar = false\n    },\n    onInputKeyDown(event) {\n      this.lastValue = event.target.value\n      if (event.shiftKey || event.altKey) {\n        this.isSpecialChar = true\n        return\n      }\n\n      let selectionStart = event.target.selectionStart\n      let selectionEnd = event.target.selectionEnd\n      let inputValue = event.target.value\n      let newValueStr = null\n\n      if (event.altKey) {\n        event.preventDefault()\n      }\n\n      switch (event.which) {\n      //up\n      case 38:\n        this.spin(event, 1)\n        event.preventDefault()\n        break\n\n        //down\n      case 40:\n        this.spin(event, -1)\n        event.preventDefault()\n        break\n\n        //left\n      case 37:\n        if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n          event.preventDefault()\n        }\n        break\n\n        //right\n      case 39:\n        if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n          event.preventDefault()\n        }\n        break\n\n        //enter\n      case 13:\n        newValueStr = this.validateValue(this.parseValue(inputValue))\n        this.$refs.input.$el.value = this.formatValue(newValueStr)\n        this.$refs.input.$el.setAttribute('aria-valuenow', newValueStr)\n        this.updateModel(event, newValueStr)\n        break\n\n        //backspace\n      case 8: {\n        event.preventDefault()\n\n        if (selectionStart === selectionEnd) {\n          const deleteChar = inputValue.charAt(selectionStart - 1)\n          const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue)\n\n          if (this.isNumeralChar(deleteChar)) {\n            const decimalLength = this.getDecimalLength(inputValue)\n\n            if (this._group.test(deleteChar)) {\n              this._group.lastIndex = 0\n              newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1)\n            }\n            else if (this._decimal.test(deleteChar)) {\n              this._decimal.lastIndex = 0\n\n              if (decimalLength) {\n                this.$refs.input.$el.setSelectionRange(selectionStart - 1, selectionStart - 1)\n              }\n              else {\n                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart)\n              }\n            }\n            else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n              const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0'\n              newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart)\n            }\n            else if (decimalCharIndexWithoutPrefix === 1) {\n              newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart)\n              newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : ''\n            }\n            else {\n              newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart)\n            }\n          }\n\n          this.updateValue(event, newValueStr, null, 'delete-single')\n        }\n        else {\n          newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd)\n          this.updateValue(event, newValueStr, null, 'delete-range')\n        }\n\n        break\n      }\n\n      // del\n      case 46:\n        event.preventDefault()\n\n        if (selectionStart === selectionEnd) {\n          const deleteChar = inputValue.charAt(selectionStart)\n          const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue)\n\n          if (this.isNumeralChar(deleteChar)) {\n            const decimalLength = this.getDecimalLength(inputValue)\n\n            if (this._group.test(deleteChar)) {\n              this._group.lastIndex = 0\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2)\n            }\n            else if (this._decimal.test(deleteChar)) {\n              this._decimal.lastIndex = 0\n\n              if (decimalLength) {\n                this.$refs.input.$el.setSelectionRange(selectionStart + 1, selectionStart + 1)\n              }\n              else {\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1)\n              }\n            }\n            else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n              const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0'\n              newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1)\n            }\n            else if (decimalCharIndexWithoutPrefix === 1) {\n              newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1)\n              newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : ''\n            }\n            else {\n              newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1)\n            }\n          }\n\n          this.updateValue(event, newValueStr, null, 'delete-back-single')\n        }\n        else {\n          newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd)\n          this.updateValue(event, newValueStr, null, 'delete-range')\n        }\n        break\n\n      default:\n        break\n      }\n    },\n    onInputKeyUp(event) {\n      this.$emit('keyup', event)\n    },\n    onInputKeyPress(event) {\n      event.preventDefault()\n      let code = event.which || event.keyCode\n      let char = String.fromCharCode(code)\n      const isDecimalSign = this.isDecimalSign(char)\n      const isMinusSign = this.isMinusSign(char)\n\n      if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\n        this.insert(event, char, { isDecimalSign, isMinusSign })\n      }\n    },\n    onPaste(event) {\n      event.preventDefault()\n      let data = (event.clipboardData || window['clipboardData']).getData('Text')\n      if (data) {\n        let filteredData = this.parseValue(data)\n        if (filteredData != null) {\n          this.insert(event, filteredData.toString())\n        }\n      }\n    },\n    allowMinusSign() {\n      return this.min === null || this.min < 0\n    },\n    isMinusSign(char) {\n      if (this._minusSign.test(char) || char === '-') {\n        this._minusSign.lastIndex = 0\n        return true\n      }\n\n      return false\n    },\n    isDecimalSign(char) {\n      if (this._decimal.test(char)) {\n        this._decimal.lastIndex = 0\n        return true\n      }\n\n      return false\n    },\n    isDecimalMode() {\n      return this.mode === 'decimal'\n    },\n    getDecimalCharIndexes(val) {\n      let decimalCharIndex = val.search(this._decimal)\n      this._decimal.lastIndex = 0\n\n      const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '')\n      const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal)\n      this._decimal.lastIndex = 0\n\n      return { decimalCharIndex, decimalCharIndexWithoutPrefix }\n    },\n    getCharIndexes(val) {\n      const decimalCharIndex = val.search(this._decimal)\n      this._decimal.lastIndex = 0\n      const minusCharIndex = val.search(this._minusSign)\n      this._minusSign.lastIndex = 0\n      const suffixCharIndex = val.search(this._suffix)\n      this._suffix.lastIndex = 0\n      const currencyCharIndex = val.search(this._currency)\n      this._currency.lastIndex = 0\n\n      return { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex }\n    },\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\n      const minusCharIndexOnText = text.search(this._minusSign)\n      this._minusSign.lastIndex = 0\n      if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\n        return\n      }\n\n      const selectionStart = this.$refs.input.$el.selectionStart\n      const selectionEnd = this.$refs.input.$el.selectionEnd\n      let inputValue = this.$refs.input.$el.value.trim()\n      const { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex } = this.getCharIndexes(inputValue)\n      let newValueStr\n\n      if (sign.isMinusSign) {\n        if (selectionStart === 0) {\n          newValueStr = inputValue\n          if (minusCharIndex === -1 || selectionEnd !== 0) {\n            newValueStr = this.insertText(inputValue, text, 0, selectionEnd)\n          }\n\n          this.updateValue(event, newValueStr, text, 'insert')\n        }\n      }\n      else if (sign.isDecimalSign) {\n        if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n          this.updateValue(event, inputValue, text, 'insert')\n        }\n        else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd)\n          this.updateValue(event, newValueStr, text, 'insert')\n        }\n        else if (decimalCharIndex === -1 && this.maxFractionDigits) {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd)\n          this.updateValue(event, newValueStr, text, 'insert')\n        }\n      }\n      else {\n        const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits\n        const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert'\n\n        if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n          if ((selectionStart + text.length - (decimalCharIndex + 1)) <= maxFractionDigits) {\n            const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : (suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length)\n\n            newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex)\n            this.updateValue(event, newValueStr, text, operation)\n          }\n        }\n        else {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd)\n          this.updateValue(event, newValueStr, text, operation)\n        }\n      }\n    },\n    insertText(value, text, start, end) {\n      let textSplit = text === '.' ? text : text.split('.')\n\n      if (textSplit.length === 2) {\n        const decimalCharIndex = value.slice(start, end).search(this._decimal)\n        this._decimal.lastIndex = 0\n        return (decimalCharIndex > 0) ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : (value || this.formatValue(text))\n      }\n      else if ((end - start) === value.length) {\n        return this.formatValue(text)\n      }\n      else if (start === 0) {\n        return text + value.slice(end)\n      }\n      else if (end === value.length) {\n        return value.slice(0, start) + text\n      }\n      else {\n        return value.slice(0, start) + text + value.slice(end)\n      }\n    },\n    deleteRange(value, start, end) {\n      let newValueStr\n\n      if ((end - start) === value.length)\n        newValueStr = ''\n      else if (start === 0)\n        newValueStr = value.slice(end)\n      else if (end === value.length)\n        newValueStr = value.slice(0, start)\n      else\n        newValueStr = value.slice(0, start) + value.slice(end)\n\n      return newValueStr\n    },\n    initCursor() {\n      let selectionStart = this.$refs.input.$el.selectionStart\n      let inputValue = this.$refs.input.$el.value\n      let valueLength = inputValue.length\n      let index = null\n\n      // remove prefix\n      let prefixLength = (this.prefixChar || '').length\n      inputValue = inputValue.replace(this._prefix, '')\n      selectionStart = selectionStart - prefixLength\n\n      let char = inputValue.charAt(selectionStart)\n      if (this.isNumeralChar(char)) {\n        return selectionStart + prefixLength\n      }\n\n      //left\n      let i = selectionStart - 1\n      while (i >= 0) {\n        char = inputValue.charAt(i)\n        if (this.isNumeralChar(char)) {\n          index = i + prefixLength\n          break\n        }\n        else {\n          i--\n        }\n      }\n\n      if (index !== null) {\n        this.$refs.input.$el.setSelectionRange(index + 1, index + 1)\n      }\n      else {\n        i = selectionStart\n        while (i < valueLength) {\n          char = inputValue.charAt(i)\n          if (this.isNumeralChar(char)) {\n            index = i + prefixLength\n            break\n          }\n          else {\n            i++\n          }\n        }\n\n        if (index !== null) {\n          this.$refs.input.$el.setSelectionRange(index, index)\n        }\n      }\n\n      return index || 0\n    },\n    onInputClick() {\n      this.initCursor()\n    },\n    isNumeralChar(char) {\n      if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n        this.resetRegex()\n        return true\n      }\n\n      return false\n    },\n    resetRegex() {\n      this._numeral.lastIndex = 0\n      this._decimal.lastIndex = 0\n      this._group.lastIndex = 0\n      this._minusSign.lastIndex = 0\n    },\n    updateValue(event, valueStr, insertedValueStr, operation) {\n      let currentValue = this.$refs.input.$el.value\n      let newValue = null\n\n      if (valueStr != null) {\n        newValue = this.parseValue(valueStr)\n        newValue = !newValue && !this.allowEmpty ? 0 : newValue\n        this.updateInput(newValue, insertedValueStr, operation, valueStr)\n\n        this.handleOnInput(event, currentValue, newValue)\n      }\n    },\n    handleOnInput(event, currentValue, newValue) {\n      if (this.isValueChanged(currentValue, newValue)) {\n        this.$emit('input', newValue)\n      }\n    },\n    isValueChanged(currentValue, newValue) {\n      if (newValue === null && currentValue !== null) {\n        return true\n      }\n\n      if (newValue != null) {\n        let parsedCurrentValue = (typeof currentValue === 'string') ? this.parseValue(currentValue) : currentValue\n        return newValue !== parsedCurrentValue\n      }\n\n      return false\n    },\n    validateValue(value) {\n      if (value === '-' || value == null) {\n        return null\n      }\n\n      if (this.min != null && value < this.min) {\n        return this.min\n      }\n\n      if (this.max != null && value > this.max) {\n        return this.max\n      }\n\n      return value\n    },\n    updateInput(value, insertedValueStr, operation, valueStr) {\n      insertedValueStr = insertedValueStr || ''\n\n      let inputValue = this.$refs.input.$el.value\n      let newValue = this.formatValue(value)\n      let currentLength = inputValue.length\n\n      if (newValue !== valueStr) {\n        newValue = this.concatValues(newValue, valueStr)\n      }\n\n      if (currentLength === 0) {\n        this.$refs.input.$el.value = newValue\n        this.$refs.input.$el.setSelectionRange(0, 0)\n        const index = this.initCursor()\n        const selectionEnd = index + insertedValueStr.length\n        this.$refs.input.$el.setSelectionRange(selectionEnd, selectionEnd)\n      }\n      else {\n        let selectionStart = this.$refs.input.$el.selectionStart\n        let selectionEnd = this.$refs.input.$el.selectionEnd\n        this.$refs.input.$el.value = newValue\n        let newLength = newValue.length\n\n        if (operation === 'range-insert') {\n          const startValue = this.parseValue((inputValue || '').slice(0, selectionStart))\n          const startValueStr = startValue !== null ? startValue.toString() : ''\n          const startExpr = startValueStr.split('').join(`(${this.groupChar})?`)\n          const sRegex = new RegExp(startExpr, 'g')\n          sRegex.test(newValue)\n\n          const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`)\n          const tRegex = new RegExp(tExpr, 'g')\n          tRegex.test(newValue.slice(sRegex.lastIndex))\n\n          selectionEnd = sRegex.lastIndex + tRegex.lastIndex\n          this.$refs.input.$el.setSelectionRange(selectionEnd, selectionEnd)\n        }\n        else if (newLength === currentLength) {\n          if (operation === 'insert' || operation === 'delete-back-single')\n            this.$refs.input.$el.setSelectionRange(selectionEnd + 1, selectionEnd + 1)\n          else if (operation === 'delete-single')\n            this.$refs.input.$el.setSelectionRange(selectionEnd - 1, selectionEnd - 1)\n          else if (operation === 'delete-range' || operation === 'spin')\n            this.$refs.input.$el.setSelectionRange(selectionEnd, selectionEnd)\n        }\n        else if (operation === 'delete-back-single') {\n          let prevChar = inputValue.charAt(selectionEnd - 1)\n          let nextChar = inputValue.charAt(selectionEnd)\n          let diff = currentLength - newLength\n          let isGroupChar = this._group.test(nextChar)\n\n          if (isGroupChar && diff === 1) {\n            selectionEnd += 1\n          }\n          else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n            selectionEnd += (-1 * diff) + 1\n          }\n\n          this._group.lastIndex = 0\n          this.$refs.input.$el.setSelectionRange(selectionEnd, selectionEnd)\n        }\n        else if (inputValue === '-' && operation === 'insert') {\n          this.$refs.input.$el.setSelectionRange(0, 0)\n          const index = this.initCursor()\n          const selectionEnd = index + insertedValueStr.length + 1\n          this.$refs.input.$el.setSelectionRange(selectionEnd, selectionEnd)\n        }\n        else {\n          selectionEnd = selectionEnd + (newLength - currentLength)\n          this.$refs.input.$el.setSelectionRange(selectionEnd, selectionEnd)\n        }\n      }\n\n      this.$refs.input.$el.setAttribute('aria-valuenow', value)\n    },\n    concatValues(val1, val2) {\n      if (val1 && val2) {\n        let decimalCharIndex = val2.search(this._decimal)\n        this._decimal.lastIndex = 0\n\n        return decimalCharIndex !== -1 ? (val1.split(this._decimal)[0] + val2.slice(decimalCharIndex)) : val1\n      }\n\n      return val1\n    },\n    getDecimalLength(value) {\n      if (value) {\n        const valueSplit = value.split(this._decimal)\n\n        if (valueSplit.length === 2) {\n          return valueSplit[1].replace(this._suffix, '')\n            .trim()\n            .replace(/\\s/g, '')\n            .replace(this._currency, '').length\n        }\n      }\n\n      return 0\n    },\n    updateModel(event, value) {\n      this.d_value = value\n      this.$emit('input', value)\n    },\n    onInputFocus(event) {\n      this.focused = true\n      this.$emit('focus', event)\n    },\n    onInputBlur(event) {\n      this.focused = false\n\n      let input = event.target\n      let newValue = this.validateValue(this.parseValue(input.value))\n      input.value = this.formatValue(newValue)\n      input.setAttribute('aria-valuenow', newValue)\n      this.updateModel(event, newValue)\n      this.$emit('blur', event)\n    },\n    clearTimer() {\n      if (this.timer) {\n        clearInterval(this.timer)\n      }\n    },\n    maxBoundry() {\n      return this.d_value !== null && this.d_value >= this.max\n    },\n    minBoundry() {\n      return this.d_value !== null && this.d_value <= this.min\n    },\n  },\n  computed: {\n    containerClass() {\n      return ['p-inputnumber p-component p-inputwrapper', this.className, {\n        'p-inputwrapper-filled': this.filled,\n        'p-inputwrapper-focus': this.focused,\n        'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n        'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\n        'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\n      }]\n    },\n    upButtonClass() {\n      return ['p-inputnumber-button p-inputnumber-button-up', this.incrementButtonClass, {\n        'p-disabled': this.showButtons && this.max !== null && this.maxBoundry()\n      }]\n    },\n    downButtonClass() {\n      return ['p-inputnumber-button p-inputnumber-button-down', this.decrementButtonClass, {\n        'p-disabled': this.showButtons && this.min !== null && this.minBoundry()\n      }]\n    },\n    filled() {\n      return (this.value != null && this.value.toString().length > 0)\n    },\n    upButtonListeners() {\n      return {\n        mousedown: event => this.onUpButtonMouseDown(event),\n        mouseup: event => this.onUpButtonMouseUp(event),\n        mouseleave: event => this.onUpButtonMouseLeave(event),\n        keydown: event => this.onUpButtonKeyDown(event),\n        keyup: event => this.onUpButtonKeyUp(event)\n      }\n    },\n    downButtonListeners() {\n      return {\n        mousedown: event => this.onDownButtonMouseDown(event),\n        mouseup: event => this.onDownButtonMouseUp(event),\n        mouseleave: event => this.onDownButtonMouseLeave(event),\n        keydown: event => this.onDownButtonKeyDown(event),\n        keyup: event => this.onDownButtonKeyUp(event)\n      }\n    },\n    formattedValue() {\n      const val = !this.value && !this.allowEmpty ? 0 : this.value\n      return this.formatValue(val)\n    },\n    getFormatter() {\n      return this.numberFormat\n    }\n  },\n  components: {\n    'INInputText': InputText,\n    'INButton': Button\n  }\n}\n<\/script>\n\n<style>\n.p-inputnumber {\n  display: inline-flex;\n}\n\n.p-inputnumber-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 0 0 auto;\n}\n\n.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label,\n.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label {\n  display: none;\n}\n\n.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  padding: 0;\n}\n\n.p-inputnumber-buttons-stacked .p-inputnumber-input {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  border-bottom-left-radius: 0;\n  padding: 0;\n}\n\n.p-inputnumber-buttons-stacked .p-inputnumber-button-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button {\n  flex: 1 1 auto;\n}\n\n.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up {\n  order: 3;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.p-inputnumber-buttons-horizontal .p-inputnumber-input {\n  order: 2;\n  border-radius: 0;\n}\n\n.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down {\n  order: 1;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.p-inputnumber-buttons-vertical {\n  flex-direction: column;\n}\n\n.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up {\n  order: 1;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n  width: 100%;\n}\n\n.p-inputnumber-buttons-vertical .p-inputnumber-input {\n  order: 2;\n  border-radius: 0;\n  text-align: center;\n}\n\n.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down {\n  order: 3;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  width: 100%;\n}\n\n.p-inputnumber-input {\n  flex: 1 1 auto;\n}\n\n.p-fluid .p-inputnumber {\n  width: 100%;\n}\n\n.p-fluid .p-inputnumber .p-inputnumber-input {\n  width: 1%;\n}\n\n.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input {\n  width: 100%;\n}\n</style>\n"]},media:void 0})}),v,undefined,false,undefined,!1,A,void 0,void 0)}(primevue2.inputtext,primevue2.button);
