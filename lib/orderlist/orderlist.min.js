this.primevue2=this.primevue2||{},this.primevue2.orderlist=function(e,t,n){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function l(e){return d(e)||o(e)||r(e)||s()}function s(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function r(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}function o(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function d(e){if(Array.isArray(e))return a(e)}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}var c={name:"OrderList",props:{value:{type:Array,default:null},selection:{type:Array,default:null},dataKey:{type:String,default:null},listStyle:{type:null,default:null},metaKeySelection:{type:Boolean,default:!0},stripedRows:{type:Boolean,default:!1}},itemTouched:!1,reorderDirection:null,data:function(){return{d_selection:this.selection}},updated:function(){this.reorderDirection&&(this.updateListScroll(),this.reorderDirection=null)},methods:{getItemKey:function(e,n){return this.dataKey?t.ObjectUtils.resolveFieldData(e,this.dataKey):n},isSelected:function(e){return-1!=t.ObjectUtils.findIndexInList(e,this.d_selection)},moveUp:function(){if(this.d_selection){for(var e=l(this.value),n=0;n<this.d_selection.length;n++){var i=t.ObjectUtils.findIndexInList(this.d_selection[n],e);if(0===i)break;var s=e[i-1];e[i-1]=e[i],e[i]=s}this.reorderDirection="up",this.$emit("input",e),this.$emit("reorder",{originalEvent:event,value:e,direction:this.reorderDirection})}},moveTop:function(){if(this.d_selection){for(var e=l(this.value),n=this.d_selection.length-1;n>=0;n--){var i=t.ObjectUtils.findIndexInList(this.d_selection[n],e);if(0===i)break;var s=e.splice(i,1)[0];e.unshift(s)}this.reorderDirection="top",this.$emit("input",e),this.$emit("reorder",{originalEvent:event,value:e,direction:this.reorderDirection})}},moveDown:function(){if(this.d_selection){for(var e=l(this.value),n=this.d_selection.length-1;n>=0;n--){var i=t.ObjectUtils.findIndexInList(this.d_selection[n],e);if(i===e.length-1)break;var s=e[i+1];e[i+1]=e[i],e[i]=s}this.reorderDirection="down",this.$emit("input",e),this.$emit("reorder",{originalEvent:event,value:e,direction:this.reorderDirection})}},moveBottom:function(){if(this.d_selection){for(var e=l(this.value),n=0;n<this.d_selection.length;n++){var i=t.ObjectUtils.findIndexInList(this.d_selection[n],e);if(i===e.length-1)break;var s=e.splice(i,1)[0];e.push(s)}this.reorderDirection="bottom",this.$emit("input",e),this.$emit("reorder",{originalEvent:event,value:e,direction:this.reorderDirection})}},onItemClick:function(e,n,i){this.itemTouched=!1;var s=t.ObjectUtils.findIndexInList(n,this.d_selection),r=-1!=s;if(!this.itemTouched&&this.metaKeySelection){var o=e.metaKey||e.ctrlKey;r&&o?this.d_selection=this.d_selection.filter((function(e,t){return t!==s})):(this.d_selection=o&&this.d_selection?l(this.d_selection):[],t.ObjectUtils.insertIntoOrderedArray(n,i,this.d_selection,this.value))}else r?this.d_selection=this.d_selection.filter((function(e,t){return t!==s})):(this.d_selection=this.d_selection?l(this.d_selection):[],t.ObjectUtils.insertIntoOrderedArray(n,i,this.d_selection,this.value));this.$emit("update:selection",this.d_selection),this.$emit("selection-change",{originalEvent:e,value:this.d_selection})},onItemTouchEnd:function(){this.itemTouched=!0},onItemKeyDown:function(e,t,n){var i=e.currentTarget;switch(e.which){case 40:var l=this.findNextItem(i);l&&l.focus(),e.preventDefault();break;case 38:var s=this.findPrevItem(i);s&&s.focus(),e.preventDefault();break;case 13:this.onItemClick(e,t,n),e.preventDefault()}},findNextItem:function(e){var n=e.nextElementSibling;return n?t.DomHandler.hasClass(n,"p-orderlist-item")?n:this.findNextItem(n):null},findPrevItem:function(e){var n=e.previousElementSibling;return n?t.DomHandler.hasClass(n,"p-orderlist-item")?n:this.findPrevItem(n):null},updateListScroll:function(){var e=t.DomHandler.find(this.$refs.list.$el,".p-orderlist-item.p-highlight");if(e&&e.length)switch(this.reorderDirection){case"up":t.DomHandler.scrollInView(this.$refs.list.$el,e[0]);break;case"top":this.$refs.list.$el.scrollTop=0;break;case"down":t.DomHandler.scrollInView(this.$refs.list.$el,e[e.length-1]);break;case"bottom":this.$refs.list.$el.scrollTop=this.$refs.list.$el.scrollHeight}}},computed:{containerClass:function(){return["p-orderlist p-component",{"p-orderlist-striped":this.stripedRows}]}},components:{OLButton:i(e).default},directives:{ripple:i(n).default}};function u(e,t,n,i,l,s,r,o,d,a){"boolean"!=typeof r&&(d=o,o=r,r=!1);const c="function"==typeof n?n.options:n;let u;if(e&&e.render&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns,c._compiled=!0,l&&(c.functional=!0)),i&&(c._scopeId=i),s?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,d(e)),e&&e._registeredComponents&&e._registeredComponents.add(s)},c._ssrRegister=u):t&&(u=r?function(e){t.call(this,a(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,o(e))}),u)if(c.functional){const e=c.render;c.render=function(t,n){return u.call(n),e(t,n)}}else{const e=c.beforeCreate;c.beforeCreate=e?[].concat(e,u):[u]}return n}const m="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function p(e){return(e,t)=>v(e,t)}let h;const A={};function v(e,t){const n=m?t.media||"default":e,i=A[n]||(A[n]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let n=t.source;if(t.map&&(n+="\n/*# sourceURL="+t.map.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",t.media&&i.element.setAttribute("media",t.media),void 0===h&&(h=document.head||document.getElementsByTagName("head")[0]),h.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(n),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,t=document.createTextNode(n),l=i.element.childNodes;l[e]&&i.element.removeChild(l[e]),l.length?i.element.insertBefore(t,l[e]):i.element.appendChild(t)}}}var f=c,I=function(){var e=this,t=e._self._c||e.$createElement;return t("div",{class:e.containerClass},[t("div",{staticClass:"p-orderlist-controls"},[e._t("controlsstart"),e._v(" "),t("OLButton",{attrs:{type:"button",icon:"pi pi-angle-up"},on:{click:e.moveUp}}),e._v(" "),t("OLButton",{attrs:{type:"button",icon:"pi pi-angle-double-up"},on:{click:e.moveTop}}),e._v(" "),t("OLButton",{attrs:{type:"button",icon:"pi pi-angle-down"},on:{click:e.moveDown}}),e._v(" "),t("OLButton",{attrs:{type:"button",icon:"pi pi-angle-double-down"},on:{click:e.moveBottom}}),e._v(" "),e._t("controlsend")],2),e._v(" "),t("div",{staticClass:"p-orderlist-list-container"},[e.$slots.header?t("div",{staticClass:"p-orderlist-header"},[e._t("header")],2):e._e(),e._v(" "),t("transition-group",{ref:"list",staticClass:"p-orderlist-list",style:e.listStyle,attrs:{name:"p-orderlist-flip",tag:"ul",role:"listbox","aria-multiselectable":"multiple"}},[e._l(e.value,(function(n,i){return[t("li",{directives:[{name:"ripple",rawName:"v-ripple"}],key:e.getItemKey(n,i),class:["p-orderlist-item",{"p-highlight":e.isSelected(n)}],attrs:{tabindex:"0",role:"option","aria-selected":e.isSelected(n)},on:{click:function(t){return e.onItemClick(t,n,i)},keydown:function(t){return e.onItemKeyDown(t,n,i)},touchend:e.onItemTouchEnd}},[e._t("item",null,{item:n,index:i})],2)]}))],2)],1)])};I._withStripped=!0;return u({render:I,staticRenderFns:[]},(function(e){e&&e("data-v-db1a723e_0",{source:"\n.p-orderlist {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.p-orderlist-controls {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.p-orderlist-list-container {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\n.p-orderlist-list {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  min-height: 12rem;\n  max-height: 24rem;\n}\n.p-orderlist-item {\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n.p-orderlist.p-state-disabled .p-orderlist-item,\n.p-orderlist.p-state-disabled .p-button {\n  cursor: default;\n}\n.p-orderlist.p-state-disabled .p-orderlist-list {\n  overflow: hidden;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/orderlist/OrderList.vue"],names:[],mappings:";AA4UA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,4BAAA;EAAA,6BAAA;EAAA,8BAAA;MAAA,0BAAA;UAAA,sBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;AACA;AAEA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;AAEA;EACA,qBAAA;EACA,SAAA;EACA,UAAA;EACA,cAAA;EACA,iBAAA;EACA,iBAAA;AACA;AAEA;EACA,eAAA;EACA,gBAAA;EACA,kBAAA;AACA;AAEA;;EAEA,eAAA;AACA;AAEA;EACA,gBAAA;AACA",file:"OrderList.vue",sourcesContent:['<template>\n  <div :class="containerClass">\n    <div class="p-orderlist-controls">\n      <slot name="controlsstart"></slot>\n      <OLButton type="button" icon="pi pi-angle-up" @click="moveUp"></OLButton>\n      <OLButton type="button" icon="pi pi-angle-double-up" @click="moveTop"></OLButton>\n      <OLButton type="button" icon="pi pi-angle-down" @click="moveDown"></OLButton>\n      <OLButton type="button" icon="pi pi-angle-double-down" @click="moveBottom"></OLButton>\n      <slot name="controlsend"></slot>\n    </div>\n    <div class="p-orderlist-list-container">\n      <div class="p-orderlist-header" v-if="$slots.header">\n        <slot name="header"></slot>\n      </div>\n      <transition-group\n        ref="list"\n        name="p-orderlist-flip"\n        tag="ul"\n        class="p-orderlist-list"\n        :style="listStyle"\n        role="listbox"\n        aria-multiselectable="multiple">\n        <template v-for="(item, i) of value">\n          <li\n            tabindex="0"\n            :key="getItemKey(item, i)"\n            :class="[\'p-orderlist-item\', { \'p-highlight\': isSelected(item) }]"\n            v-ripple\n            @click="onItemClick($event, item, i)"\n            @keydown="onItemKeyDown($event, item, i)"\n            @touchend="onItemTouchEnd"\n            role="option"\n            :aria-selected="isSelected(item)">\n            <slot name="item" :item="item" :index="i"> </slot>\n          </li>\n        </template>\n      </transition-group>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Button from \'primevue2/button\'\nimport { ObjectUtils, DomHandler } from \'primevue2/utils\'\nimport Ripple from \'primevue2/ripple\'\n\nexport default {\n  name: \'OrderList\',\n  props: {\n    value: {\n      type: Array,\n      default: null\n    },\n    selection: {\n      type: Array,\n      default: null\n    },\n    dataKey: {\n      type: String,\n      default: null\n    },\n    listStyle: {\n      type: null,\n      default: null\n    },\n    metaKeySelection: {\n      type: Boolean,\n      default: true\n    },\n    stripedRows: {\n      type: Boolean,\n      default: false\n    }\n  },\n  itemTouched: false,\n  reorderDirection: null,\n  data() {\n    return {\n      d_selection: this.selection\n    }\n  },\n  updated() {\n    if (this.reorderDirection) {\n      this.updateListScroll()\n      this.reorderDirection = null\n    }\n  },\n  methods: {\n    getItemKey(item, index) {\n      return this.dataKey ? ObjectUtils.resolveFieldData(item, this.dataKey) : index\n    },\n    isSelected(item) {\n      return ObjectUtils.findIndexInList(item, this.d_selection) != -1\n    },\n    moveUp() {\n      if (this.d_selection) {\n        let value = [...this.value]\n\n        for (let i = 0; i < this.d_selection.length; i++) {\n          let selectedItem = this.d_selection[i]\n          let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, value)\n\n          if (selectedItemIndex !== 0) {\n            let movedItem = value[selectedItemIndex]\n            let temp = value[selectedItemIndex - 1]\n            value[selectedItemIndex - 1] = movedItem\n            value[selectedItemIndex] = temp\n          }\n          else {\n            break\n          }\n        }\n\n        this.reorderDirection = \'up\'\n        this.$emit(\'input\', value)\n        this.$emit(\'reorder\', {\n          originalEvent: event,\n          value: value,\n          direction: this.reorderDirection\n        })\n      }\n    },\n    moveTop() {\n      if (this.d_selection) {\n        let value = [...this.value]\n\n        for (let i = this.d_selection.length - 1; i >= 0; i--) {\n          let selectedItem = this.d_selection[i]\n          let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, value)\n\n          if (selectedItemIndex !== 0) {\n            let movedItem = value.splice(selectedItemIndex, 1)[0]\n            value.unshift(movedItem)\n          }\n          else {\n            break\n          }\n        }\n\n        this.reorderDirection = \'top\'\n        this.$emit(\'input\', value)\n        this.$emit(\'reorder\', {\n          originalEvent: event,\n          value: value,\n          direction: this.reorderDirection\n        })\n      }\n    },\n    moveDown() {\n      if (this.d_selection) {\n        let value = [...this.value]\n\n        for (let i = this.d_selection.length - 1; i >= 0; i--) {\n          let selectedItem = this.d_selection[i]\n          let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, value)\n\n          if (selectedItemIndex !== (value.length - 1)) {\n            let movedItem = value[selectedItemIndex]\n            let temp = value[selectedItemIndex + 1]\n            value[selectedItemIndex + 1] = movedItem\n            value[selectedItemIndex] = temp\n          }\n          else {\n            break\n          }\n        }\n\n        this.reorderDirection = \'down\'\n        this.$emit(\'input\', value)\n        this.$emit(\'reorder\', {\n          originalEvent: event,\n          value: value,\n          direction: this.reorderDirection\n        })\n      }\n    },\n    moveBottom() {\n      if (this.d_selection) {\n        let value = [...this.value]\n\n        for (let i = 0; i < this.d_selection.length; i++) {\n          let selectedItem = this.d_selection[i]\n          let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, value)\n\n          if (selectedItemIndex !== (value.length - 1)) {\n            let movedItem = value.splice(selectedItemIndex, 1)[0]\n            value.push(movedItem)\n          }\n          else {\n            break\n          }\n        }\n\n        this.reorderDirection = \'bottom\'\n        this.$emit(\'input\', value)\n        this.$emit(\'reorder\', {\n          originalEvent: event,\n          value: value,\n          direction: this.reorderDirection\n        })\n      }\n    },\n    onItemClick(event, item, index) {\n      this.itemTouched = false\n      let selectedIndex = ObjectUtils.findIndexInList(item, this.d_selection)\n      let selected = (selectedIndex != -1)\n      let metaSelection = this.itemTouched ? false : this.metaKeySelection\n\n      if (metaSelection) {\n        let metaKey = (event.metaKey || event.ctrlKey)\n\n        if (selected && metaKey) {\n          this.d_selection = this.d_selection.filter((val, index) => index !== selectedIndex)\n        }\n        else {\n          this.d_selection = (metaKey) ? this.d_selection ? [...this.d_selection] : [] : []\n          ObjectUtils.insertIntoOrderedArray(item, index, this.d_selection, this.value)\n        }\n      }\n      else {\n        if (selected) {\n          this.d_selection = this.d_selection.filter((val, index) => index !== selectedIndex)\n        }\n        else {\n          this.d_selection = this.d_selection ? [...this.d_selection] : []\n          ObjectUtils.insertIntoOrderedArray(item, index, this.d_selection, this.value)\n        }\n      }\n\n      this.$emit(\'update:selection\', this.d_selection)\n      this.$emit(\'selection-change\', {\n        originalEvent: event,\n        value: this.d_selection\n      })\n    },\n    onItemTouchEnd() {\n      this.itemTouched = true\n    },\n    onItemKeyDown(event, item, index) {\n      let listItem = event.currentTarget\n\n      switch (event.which) {\n      //down\n      case 40:\n        var nextItem = this.findNextItem(listItem)\n        if (nextItem) {\n          nextItem.focus()\n        }\n\n        event.preventDefault()\n        break\n\n        //up\n      case 38:\n        var prevItem = this.findPrevItem(listItem)\n        if (prevItem) {\n          prevItem.focus()\n        }\n\n        event.preventDefault()\n        break\n\n        //enter\n      case 13:\n        this.onItemClick(event, item, index)\n        event.preventDefault()\n        break\n\n      default:\n        break\n      }\n    },\n    findNextItem(item) {\n      let nextItem = item.nextElementSibling\n\n      if (nextItem)\n        return !DomHandler.hasClass(nextItem, \'p-orderlist-item\') ? this.findNextItem(nextItem) : nextItem\n      else\n        return null\n    },\n    findPrevItem(item) {\n      let prevItem = item.previousElementSibling\n\n      if (prevItem)\n        return !DomHandler.hasClass(prevItem, \'p-orderlist-item\') ? this.findPrevItem(prevItem) : prevItem\n      else\n        return null\n    },\n    updateListScroll() {\n      const listItems = DomHandler.find(this.$refs.list.$el, \'.p-orderlist-item.p-highlight\')\n\n      if (listItems && listItems.length) {\n        switch (this.reorderDirection) {\n        case \'up\':\n          DomHandler.scrollInView(this.$refs.list.$el, listItems[0])\n          break\n\n        case \'top\':\n          this.$refs.list.$el.scrollTop = 0\n          break\n\n        case \'down\':\n          DomHandler.scrollInView(this.$refs.list.$el, listItems[listItems.length - 1])\n          break\n\n        case \'bottom\':\n          this.$refs.list.$el.scrollTop = this.$refs.list.$el.scrollHeight\n          break\n\n        default:\n          break\n        }\n      }\n    }\n  },\n  computed: {\n    containerClass() {\n      return [\'p-orderlist p-component\', {\n        \'p-orderlist-striped\': this.stripedRows\n      }]\n    }\n  },\n  components: {\n    \'OLButton\': Button\n  },\n  directives: {\n    \'ripple\': Ripple\n  }\n}\n<\/script>\n\n<style>\n.p-orderlist {\n  display: flex;\n}\n\n.p-orderlist-controls {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.p-orderlist-list-container {\n  flex: 1 1 auto;\n}\n\n.p-orderlist-list {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  min-height: 12rem;\n  max-height: 24rem;\n}\n\n.p-orderlist-item {\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n}\n\n.p-orderlist.p-state-disabled .p-orderlist-item,\n.p-orderlist.p-state-disabled .p-button {\n  cursor: default;\n}\n\n.p-orderlist.p-state-disabled .p-orderlist-list {\n  overflow: hidden;\n}\n</style>\n']},media:void 0})}),f,undefined,false,undefined,!1,p,void 0,void 0)}(primevue2.button,primevue2.utils,primevue2.ripple);
