"use strict";var e=require("primevue2/inputtext"),n=require("primevue2/utils");function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n,t){var s;return(n="symbol"==i(s=o(n,"string"))?s:s+"")in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var s=t.call(e,n||"default");if("object"!=i(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}var a={name:"Password",props:{value:String,promptLabel:{type:String,default:"Enter a password"},mediumRegex:{type:String,default:"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})"},strongRegex:{type:String,default:"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})"},weakLabel:{type:String,default:null},mediumLabel:{type:String,default:null},strongLabel:{type:String,default:null},feedback:{type:Boolean,default:!0},appendTo:{type:String,default:null},toggleMask:{type:Boolean,default:!1},hideIcon:{type:String,default:"pi pi-eye-slash"},showIcon:{type:String,default:"pi pi-eye"},inputClass:null,inputStyle:null,inputId:null,styles:null,className:null},data:function(){return{overlayVisible:!1,meter:null,infoText:null,focused:!1,unmasked:!1,d_value:null}},meter:null,info:null,mediumCheckRegExp:null,strongCheckRegExp:null,resizeListener:null,scrollHandler:null,overlay:null,watch:{value:function(e){this.d_value=e}},mounted:function(){this.infoText=this.promptText,this.mediumCheckRegExp=new RegExp(this.mediumRegex),this.strongCheckRegExp=new RegExp(this.strongRegex),this.value&&(this.d_value=this.value)},beforeDestroy:function(){this.restoreAppend(),this.unbindResizeListener(),this.scrollHandler&&(this.scrollHandler.destroy(),this.scrollHandler=null)},methods:{onOverlayEnter:function(){this.overlay=this.$refs.overlayRef,this.overlay.style.zIndex=String(n.DomHandler.generateZIndex()),this.appendContainer(),this.alignOverlay(),this.bindScrollListener(),this.bindResizeListener()},onOverlayLeave:function(){this.unbindScrollListener(),this.unbindResizeListener(),this.overlay=null},alignOverlay:function(){this.appendTo?(this.overlay.style.minWidth=n.DomHandler.getOuterWidth(this.$refs.input.$el)+"px",n.DomHandler.absolutePosition(this.overlay,this.$refs.input.$el)):n.DomHandler.relativePosition(this.overlay,this.$refs.input.$el)},appendContainer:function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.overlay):document.getElementById(this.appendTo).appendChild(this.overlay))},restoreAppend:function(){this.overlay&&this.appendTo&&("body"===this.appendTo?document.body.removeChild(this.overlay):document.getElementById(this.appendTo).removeChild(this.overlay))},testStrength:function(e){var n=0;return this.strongCheckRegExp.test(e)?n=3:this.mediumCheckRegExp.test(e)?n=2:e.length&&(n=1),n},onInput:function(e){this.$emit("input",e)},onFocus:function(e){this.focused=!0,this.feedback&&(this.setPasswordMeter(),this.overlayVisible=!0),this.$emit("focus",e)},onBlur:function(e){this.focused=!1,this.feedback&&(this.overlayVisible=!1),this.$emit("blur",e)},onKeyUp:function(e){if(this.feedback){var n=this.checkPasswordStrength(e.target.value),t=n.label;this.meter=n.meter,this.infoText=t,this.overlayVisible||(this.overlayVisible=!0)}this.$emit("keyup",e)},setPasswordMeter:function(){if(this.feedback&&this.d_value){var e=this.checkPasswordStrength(this.d_value),n=e.label;this.meter=e.meter,this.infoText=n,this.overlayVisible||(this.overlayVisible=!0)}},checkPasswordStrength:function(e){var n=null,t=null;switch(this.testStrength(e)){case 1:n=this.weakText,t={strength:"weak",width:"33.33%"};break;case 2:n=this.mediumText,t={strength:"medium",width:"66.66%"};break;case 3:n=this.strongText,t={strength:"strong",width:"100%"};break;default:n=this.promptText,t=null}return{label:n,meter:t}},bindScrollListener:function(){var e=this;this.scrollHandler||(this.scrollHandler=new n.ConnectedOverlayScrollHandler(this.$refs.input.$el,(function(){e.overlayVisible&&(e.overlayVisible=!1)}))),this.scrollHandler.bindScrollListener()},unbindScrollListener:function(){this.scrollHandler&&this.scrollHandler.unbindScrollListener()},bindResizeListener:function(){var e=this;this.resizeListener||(this.resizeListener=function(){e.overlayVisible&&(e.overlayVisible=!1)},window.addEventListener("resize",this.resizeListener))},unbindResizeListener:function(){this.resizeListener&&(window.removeEventListener("resize",this.resizeListener),this.resizeListener=null)},onMaskToggle:function(){this.unmasked=!this.unmasked}},computed:{listeners:function(){var e=this;return r(r({},this.$listeners),{},{input:function(n){e.onInput(n)},focus:function(n){e.onFocus(n)},blur:function(n){e.onBlur(n)},keyup:function(n){e.onKeyUp(n)}})},containerClass:function(){return["p-password p-component p-inputwrapper",this.className,{"p-inputwrapper-filled":this.filled,"p-inputwrapper-focus":this.focused,"p-input-icon-right":this.toggleMask}]},inputFieldClass:function(){return["p-password-input",this.inputClass,{"p-disabled":this.$attrs.disabled}]},toggleIconClass:function(){return this.unmasked?this.hideIcon:this.showIcon},strengthClass:function(){return"p-password-strength ".concat(this.meter?this.meter.strength:"")},inputType:function(){return this.unmasked?"text":"password"},filled:function(){return null!=this.d_value&&this.d_value.toString().length>0},weakText:function(){return this.weakLabel||this.$primevue.config.locale.weak},mediumText:function(){return this.mediumLabel||this.$primevue.config.locale.medium},strongText:function(){return this.strongLabel||this.$primevue.config.locale.strong},promptText:function(){return this.promptLabel||this.$primevue.config.locale.passwordPrompt}},components:{PInputText:t(e).default}};function u(e,n,t,i,s,r,l,o,a,u){"boolean"!=typeof l&&(a=o,o=l,l=!1);const d="function"==typeof t?t.options:t;let p;if(e&&e.render&&(d.render=e.render,d.staticRenderFns=e.staticRenderFns,d._compiled=!0,s&&(d.functional=!0)),i&&(d._scopeId=i),r?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,a(e)),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=p):n&&(p=l?function(e){n.call(this,u(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,o(e))}),p)if(d.functional){const e=d.render;d.render=function(n,t){return p.call(t),e(n,t)}}else{const e=d.beforeCreate;d.beforeCreate=e?[].concat(e,p):[p]}return t}const d="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function p(e){return(e,n)=>f(e,n)}let h;const c={};function f(e,n){const t=d?n.media||"default":e,i=c[t]||(c[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===h&&(h=document.head||document.getElementsByTagName("head")[0]),h.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),s=i.element.childNodes;s[e]&&i.element.removeChild(s[e]),s.length?i.element.insertBefore(n,s[e]):i.element.appendChild(n)}}}var m=a,v=function(){var e=this,n=e._self._c||e.$createElement;return n("div",{class:e.containerClass,style:e.styles},[n("PInputText",e._g(e._b({ref:"input",class:e.inputFieldClass,style:e.inputStyle,attrs:{id:e.inputId,type:e.inputType,value:e.d_value}},"PInputText",e.$attrs,!1),e.listeners)),e._v(" "),e.toggleMask?n("i",{class:e.toggleIconClass,on:{click:e.onMaskToggle}}):e._e(),e._v(" "),n("transition",{attrs:{name:"p-connected-overlay"},on:{enter:e.onOverlayEnter,leave:e.onOverlayLeave}},[e.overlayVisible?n("div",{ref:"overlayRef",staticClass:"p-password-panel p-component"},[e._t("header"),e._v(" "),e._t("content",(function(){return[n("div",{staticClass:"p-password-meter"},[n("div",{class:e.strengthClass,style:{width:e.meter?e.meter.width:""}})]),e._v(" "),n("div",{attrs:{className:"p-password-info"}},[e._v(e._s(e.infoText))])]})),e._v(" "),e._t("footer")],2):e._e()])],1)};v._withStripped=!0;module.exports=u({render:v,staticRenderFns:[]},(function(e){e&&e("data-v-51d67879_0",{source:"\n.p-password {\n  position: relative;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n}\n.p-password-panel {\n  position: absolute;\n}\n.p-password .p-password-panel {\n  min-width: 100%;\n}\n.p-password-meter {\n  height: 10px;\n}\n.p-password-strength {\n  height: 100%;\n  width: 0%;\n  -webkit-transition: width 1s ease-in-out;\n  transition: width 1s ease-in-out;\n}\n.p-fluid .p-password {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/我的开源/primevue2/src/components/password/Password.vue"],names:[],mappings:";AAoWA;EACA,kBAAA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;AACA;AAEA;EACA,kBAAA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,YAAA;AACA;AAEA;EACA,YAAA;EACA,SAAA;EACA,wCAAA;EAAA,gCAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA",file:"Password.vue",sourcesContent:["<template>\n  <div :class=\"containerClass\" :style=\"styles\">\n    <PInputText\n      ref=\"input\"\n      :id=\"inputId\"\n      :class=\"inputFieldClass\"\n      :style=\"inputStyle\"\n      :type=\"inputType\"\n      :value=\"d_value\"\n      v-bind=\"$attrs\"\n      v-on=\"listeners\" />\n    <i v-if=\"toggleMask\" :class=\"toggleIconClass\" @click=\"onMaskToggle\" />\n    <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @leave=\"onOverlayLeave\">\n      <div ref=\"overlayRef\" class=\"p-password-panel p-component\" v-if=\"overlayVisible\">\n        <slot name=\"header\"></slot>\n        <slot name=\"content\">\n          <div class=\"p-password-meter\">\n            <div :class=\"strengthClass\" :style=\"{ width: meter ? meter.width : '' }\"></div>\n          </div>\n          <div className=\"p-password-info\">{{ infoText }}</div>\n        </slot>\n        <slot name=\"footer\"></slot>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport InputText from 'primevue2/inputtext'\nimport { ConnectedOverlayScrollHandler, DomHandler } from 'primevue2/utils'\n\nexport default {\n  name: 'Password',\n  props: {\n    value: String,\n    promptLabel: {\n      type: String,\n      default: 'Enter a password'\n    },\n    mediumRegex: {\n      type: String,\n      default: '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})' // eslint-disable-line\n    },\n    strongRegex: {\n      type: String,\n      default: '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})' // eslint-disable-line\n    },\n    weakLabel: {\n      type: String,\n      default: null\n    },\n    mediumLabel: {\n      type: String,\n      default: null\n    },\n    strongLabel: {\n      type: String,\n      default: null\n    },\n    feedback: {\n      type: Boolean,\n      default: true\n    },\n    appendTo: {\n      type: String,\n      default: null\n    },\n    toggleMask: {\n      type: Boolean,\n      default: false\n    },\n    hideIcon: {\n      type: String,\n      default: 'pi pi-eye-slash'\n    },\n    showIcon: {\n      type: String,\n      default: 'pi pi-eye'\n    },\n    inputClass: null,\n    inputStyle: null,\n    inputId: null,\n    styles: null,\n    className: null\n  },\n  data() {\n    return {\n      overlayVisible: false,\n      meter: null,\n      infoText: null,\n      focused: false,\n      unmasked: false,\n      d_value: null\n    }\n  },\n  meter: null,\n  info: null,\n  mediumCheckRegExp: null,\n  strongCheckRegExp: null,\n  resizeListener: null,\n  scrollHandler: null,\n  overlay: null,\n  watch: {\n    value(newValue) {\n      this.d_value = newValue\n    }\n  },\n  mounted() {\n    this.infoText = this.promptText\n    this.mediumCheckRegExp = new RegExp(this.mediumRegex)\n    this.strongCheckRegExp = new RegExp(this.strongRegex)\n    if (this.value) {\n      this.d_value = this.value\n    }\n  },\n  beforeDestroy() {\n    this.restoreAppend()\n    this.unbindResizeListener()\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy()\n      this.scrollHandler = null\n    }\n  },\n  methods: {\n    onOverlayEnter() {\n      this.overlay = this.$refs.overlayRef\n      this.overlay.style.zIndex = String(DomHandler.generateZIndex())\n      this.appendContainer()\n      this.alignOverlay()\n      this.bindScrollListener()\n      this.bindResizeListener()\n    },\n    onOverlayLeave() {\n      this.unbindScrollListener()\n      this.unbindResizeListener()\n      this.overlay = null\n    },\n    alignOverlay() {\n      if (this.appendTo) {\n        this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$refs.input.$el) + 'px'\n        DomHandler.absolutePosition(this.overlay, this.$refs.input.$el)\n      }\n      else {\n        DomHandler.relativePosition(this.overlay, this.$refs.input.$el)\n      }\n    },\n    appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body')\n          document.body.appendChild(this.overlay)\n        else\n          document.getElementById(this.appendTo).appendChild(this.overlay)\n      }\n    },\n    restoreAppend() {\n      if (this.overlay && this.appendTo) {\n        if (this.appendTo === 'body')\n          document.body.removeChild(this.overlay)\n        else\n          document.getElementById(this.appendTo).removeChild(this.overlay)\n      }\n    },\n    testStrength(str) {\n      let level = 0\n\n      if (this.strongCheckRegExp.test(str))\n        level = 3\n      else if (this.mediumCheckRegExp.test(str))\n        level = 2\n      else if (str.length)\n        level = 1\n\n      return level\n    },\n    onInput(event) {\n      this.$emit('input', event)\n    },\n    onFocus(event) {\n      this.focused = true\n      if (this.feedback) {\n        this.setPasswordMeter()\n        this.overlayVisible = true\n      }\n      this.$emit('focus', event)\n    },\n    onBlur(event) {\n      this.focused = false\n      if (this.feedback) {\n        this.overlayVisible = false\n      }\n      this.$emit('blur', event)\n    },\n    onKeyUp(event) {\n      if (this.feedback) {\n        let value = event.target.value\n\n        const { meter, label } = this.checkPasswordStrength(value)\n\n        this.meter = meter\n        this.infoText = label\n        if (!this.overlayVisible) {\n          this.overlayVisible = true\n        }\n      }\n\n      this.$emit('keyup', event)\n    },\n    setPasswordMeter() {\n      if (!this.feedback || !this.d_value) return\n\n      const { meter, label } = this.checkPasswordStrength(this.d_value)\n\n      this.meter = meter\n      this.infoText = label\n\n      if (!this.overlayVisible) {\n        this.overlayVisible = true\n      }\n    },\n    checkPasswordStrength(value) {\n      let label = null\n      let meter = null\n\n      switch (this.testStrength(value)) {\n      case 1:\n        label = this.weakText\n        meter = {\n          strength: 'weak',\n          width: '33.33%'\n        }\n        break\n\n      case 2:\n        label = this.mediumText\n        meter = {\n          strength: 'medium',\n          width: '66.66%'\n        }\n        break\n\n      case 3:\n        label = this.strongText\n        meter = {\n          strength: 'strong',\n          width: '100%'\n        }\n        break\n\n      default:\n        label = this.promptText\n        meter = null\n        break\n      }\n\n      return { label, meter }\n    },\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.input.$el, () => {\n          if (this.overlayVisible) {\n            this.overlayVisible = false\n          }\n        })\n      }\n\n      this.scrollHandler.bindScrollListener()\n    },\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener()\n      }\n    },\n    bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = () => {\n          if (this.overlayVisible) {\n            this.overlayVisible = false\n          }\n        }\n        window.addEventListener('resize', this.resizeListener)\n      }\n    },\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener)\n        this.resizeListener = null\n      }\n    },\n    onMaskToggle() {\n      this.unmasked = !this.unmasked\n    }\n  },\n  computed: {\n    listeners() {\n      let $vm = this\n\n      return {\n        ...$vm.$listeners,\n        input: event => {\n          this.onInput(event)\n        },\n        focus: event => {\n          this.onFocus(event)\n        },\n        blur: event => {\n          this.onBlur(event)\n        },\n        keyup: event => {\n          this.onKeyUp(event)\n        }\n      }\n    },\n    containerClass() {\n      return ['p-password p-component p-inputwrapper', this.className, {\n        'p-inputwrapper-filled': this.filled,\n        'p-inputwrapper-focus': this.focused,\n        'p-input-icon-right': this.toggleMask\n      }]\n    },\n    inputFieldClass() {\n      return ['p-password-input', this.inputClass, {\n        'p-disabled': this.$attrs.disabled\n      }]\n    },\n    toggleIconClass() {\n      return this.unmasked ? this.hideIcon : this.showIcon\n    },\n    strengthClass() {\n      return `p-password-strength ${this.meter ? this.meter.strength : ''}`\n    },\n    inputType() {\n      return this.unmasked ? 'text' : 'password'\n    },\n    filled() {\n      return (this.d_value != null && this.d_value.toString().length > 0)\n    },\n    weakText() {\n      return this.weakLabel || this.$primevue.config.locale.weak\n    },\n    mediumText() {\n      return this.mediumLabel || this.$primevue.config.locale.medium\n    },\n    strongText() {\n      return this.strongLabel || this.$primevue.config.locale.strong\n    },\n    promptText() {\n      return this.promptLabel || this.$primevue.config.locale.passwordPrompt\n    }\n  },\n  components: {\n    'PInputText': InputText\n  }\n}\n<\/script>\n\n<style>\n.p-password {\n  position: relative;\n  display: inline-flex;\n}\n\n.p-password-panel {\n  position: absolute;\n}\n\n.p-password .p-password-panel {\n  min-width: 100%;\n}\n\n.p-password-meter {\n  height: 10px;\n}\n\n.p-password-strength {\n  height: 100%;\n  width: 0%;\n  transition: width 1s ease-in-out;\n}\n\n.p-fluid .p-password {\n  display: flex;\n}\n</style>\n"]},media:void 0})}),m,undefined,false,undefined,!1,p,void 0,void 0);
