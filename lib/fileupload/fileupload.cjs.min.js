"use strict";var e=require("primevue2/button"),n=require("primevue2/progressbar"),t=require("primevue2/message"),i=require("primevue2/utils"),s=require("primevue2/ripple");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function a(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function r(e){if(Array.isArray(e))return d(e)}function p(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=u(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var i=0,s=function(){};return{s:s,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,a=!0,o=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return a=e.done,e},e:function(e){o=!0,l=e},f:function(){try{a||null==t.return||t.return()}finally{if(o)throw l}}}}function u(e,n){if(e){if("string"==typeof e)return d(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?d(e,n):void 0}}function d(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}var f={name:"FileUpload",props:{name:{type:String,default:null},url:{type:String,default:null},mode:{type:String,default:"advanced"},multiple:{type:Boolean,default:!1},accept:{type:String,default:null},disabled:{type:Boolean,default:!1},auto:{type:Boolean,default:!1},maxFileSize:{type:Number,default:null},invalidFileSizeMessage:{type:String,default:"{0}: Invalid file size, file size should be smaller than {1}."},invalidFileTypeMessage:{type:String,default:"{0}: Invalid file type, allowed file types: {1}."},fileLimit:{type:Number,default:null},invalidFileLimitMessage:{type:String,default:"Maximum number of files exceeded, limit is {0} at most."},withCredentials:{type:Boolean,default:!1},previewWidth:{type:Number,default:50},chooseLabel:{type:String,default:null},uploadLabel:{type:String,default:null},cancelLabel:{type:String,default:null},customUpload:{type:Boolean,default:!1},showUploadButton:{type:Boolean,default:!0},showCancelButton:{type:Boolean,default:!0},buttonStyle:null,buttonClass:null},duplicateIEEvent:!1,data:function(){return{uploadedFileCount:0,files:[],messages:null,focused:!1,progress:null}},methods:{onFileSelect:function(e){if("drop"!==e.type&&this.isIE11()&&this.duplicateIEEvent)this.duplicateIEEvent=!1;else{this.messages=[],this.files=this.files||[];var n,t=p(e.dataTransfer?e.dataTransfer.files:e.target.files);try{for(t.s();!(n=t.n()).done;){var i=n.value;this.isFileSelected(i)||this.validate(i)&&(this.isImage(i)&&(i.objectURL=window.URL.createObjectURL(i)),this.files.push(i))}}catch(e){t.e(e)}finally{t.f()}this.$emit("select",{originalEvent:e,files:this.files}),this.fileLimit&&this.checkFileLimit(),this.auto&&this.hasFiles&&!this.isFileLimitExceeded()&&this.upload(),"drop"!==e.type&&this.isIE11()?this.clearIEInput():this.clearInputElement()}},choose:function(){this.$refs.fileInput.click()},upload:function(){var e=this;if(this.customUpload)this.fileLimit&&(this.uploadedFileCount+=this.files.length),this.$emit("uploader",{files:this.files}),this.clear();else{var n=new XMLHttpRequest,t=new FormData;this.$emit("before-upload",{xhr:n,formData:t});var i,s=p(this.files);try{for(s.s();!(i=s.n()).done;){var l=i.value;t.append(this.name,l,l.name)}}catch(e){s.e(e)}finally{s.f()}n.upload.addEventListener("progress",(function(n){n.lengthComputable&&(e.progress=Math.round(100*n.loaded/n.total)),e.$emit("progress",{originalEvent:n,progress:e.progress})})),n.onreadystatechange=function(){4===n.readyState&&(e.progress=0,n.status>=200&&n.status<300?(e.fileLimit&&(e.uploadedFileCount+=e.files.length),e.$emit("upload",{xhr:n,files:e.files})):e.$emit("error",{xhr:n,files:e.files}),e.clear())},n.open("POST",this.url,!0),this.$emit("before-send",{xhr:n,formData:t}),n.withCredentials=this.withCredentials,n.send(t)}},clear:function(){this.files=[],this.messages=[],this.$emit("clear"),this.isAdvanced&&this.clearInputElement()},onFocus:function(){this.focused=!0},onBlur:function(){this.focused=!1},isFileSelected:function(e){if(this.files&&this.files.length){var n,t=p(this.files);try{for(t.s();!(n=t.n()).done;){var i=n.value;if(i.name+i.type+i.size===e.name+e.type+e.size)return!0}}catch(e){t.e(e)}finally{t.f()}}return!1},isIE11:function(){return!!window.MSInputMethodContext&&!!document.documentMode},validate:function(e){return this.accept&&!this.isFileTypeValid(e)?(this.messages.push(this.invalidFileTypeMessage.replace("{0}",e.name).replace("{1}",this.accept)),!1):!(this.maxFileSize&&e.size>this.maxFileSize)||(this.messages.push(this.invalidFileSizeMessage.replace("{0}",e.name).replace("{1}",this.formatSize(this.maxFileSize))),!1)},isFileTypeValid:function(e){var n,t=this.accept.split(",").map((function(e){return e.trim()})),i=p(t);try{for(i.s();!(n=i.n()).done;){var s=n.value;if(this.isWildcard(s)?this.getTypeClass(e.type)===this.getTypeClass(s):e.type==s||this.getFileExtension(e).toLowerCase()===s.toLowerCase())return!0}}catch(e){i.e(e)}finally{i.f()}return!1},getTypeClass:function(e){return e.substring(0,e.indexOf("/"))},isWildcard:function(e){return-1!==e.indexOf("*")},getFileExtension:function(e){return"."+e.name.split(".").pop()},isImage:function(e){return/^image\//.test(e.type)},onDragEnter:function(e){this.disabled||(e.stopPropagation(),e.preventDefault())},onDragOver:function(e){this.disabled||(i.DomHandler.addClass(this.$refs.content,"p-fileupload-highlight"),e.stopPropagation(),e.preventDefault())},onDragLeave:function(){this.disabled||i.DomHandler.removeClass(this.$refs.content,"p-fileupload-highlight")},onDrop:function(e){if(!this.disabled){i.DomHandler.removeClass(this.$refs.content,"p-fileupload-highlight"),e.stopPropagation(),e.preventDefault();var n=e.dataTransfer?e.dataTransfer.files:e.target.files;(this.multiple||n&&1===n.length)&&this.onFileSelect(e)}},onBasicUploaderClick:function(){this.hasFiles?this.upload():this.$refs.fileInput.click()},remove:function(e){var n;this.clearInputElement(),this.files.splice(e,1),this.files=r(n=this.files)||o(n)||u(n)||a(),this.files.length<=this.fileLimit&&(this.messages=[])},clearInputElement:function(){this.$refs.fileInput.value=""},clearIEInput:function(){this.$refs.fileInput&&(this.duplicateIEEvent=!0,this.$refs.fileInput.value="")},formatSize:function(e){if(0===e)return"0 B";var n=Math.floor(Math.log(e)/Math.log(1e3));return parseFloat((e/Math.pow(1e3,n)).toFixed(3))+" "+["B","KB","MB","GB","TB","PB","EB","ZB","YB"][n]},isFileLimitExceeded:function(){return this.fileLimit&&this.fileLimit<=this.files.length+this.uploadedFileCount&&this.focused&&(this.focused=!1),this.fileLimit&&this.fileLimit<this.files.length+this.uploadedFileCount},checkFileLimit:function(){this.isFileLimitExceeded()&&this.messages.push(this.invalidFileLimitMessage.replace("{0}",this.fileLimit.toString()))},onMessageClose:function(){this.messages=null}},computed:{isAdvanced:function(){return"advanced"===this.mode},isBasic:function(){return"basic"===this.mode},advancedChooseButtonClass:function(){return["p-button p-component p-fileupload-choose",this.buttonClass,{"p-disabled":this.disabled,"p-focus":this.focused}]},basicChooseButtonClass:function(){return["p-button p-component p-fileupload-choose",this.buttonClass,{"p-fileupload-choose-selected":this.hasFiles,"p-disabled":this.disabled,"p-focus":this.focused}]},basicChooseButtonIconClass:function(){return["p-button-icon p-button-icon-left pi",{"pi-plus":!this.hasFiles||this.auto,"pi-upload":this.hasFiles&&!this.auto}]},basicChooseButtonLabel:function(){return this.auto?this.chooseButtonLabel:this.hasFiles?this.files[0].name:this.chooseButtonLabel},hasFiles:function(){return this.files&&this.files.length>0},chooseDisabled:function(){return this.disabled||this.fileLimit&&this.fileLimit<=this.files.length+this.uploadedFileCount},uploadDisabled:function(){return this.disabled||!this.hasFiles||this.fileLimit&&this.fileLimit<this.files.length},cancelDisabled:function(){return this.disabled||!this.hasFiles},chooseButtonLabel:function(){return this.chooseLabel||this.$primevue.config.locale.choose},uploadButtonLabel:function(){return this.uploadLabel||this.$primevue.config.locale.upload},cancelButtonLabel:function(){return this.cancelLabel||this.$primevue.config.locale.cancel}},components:{FileUploadButton:l(e).default,FileUploadProgressBar:l(n).default,FileUploadMessage:l(t).default},directives:{ripple:l(s).default}};function c(e,n,t,i,s,l,a,o,r,p){"boolean"!=typeof a&&(r=o,o=a,a=!1);const u="function"==typeof t?t.options:t;let d;if(e&&e.render&&(u.render=e.render,u.staticRenderFns=e.staticRenderFns,u._compiled=!0,s&&(u.functional=!0)),i&&(u._scopeId=i),l?(d=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,r(e)),e&&e._registeredComponents&&e._registeredComponents.add(l)},u._ssrRegister=d):n&&(d=a?function(e){n.call(this,p(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,o(e))}),d)if(u.functional){const e=u.render;u.render=function(n,t){return d.call(t),e(n,t)}}else{const e=u.beforeCreate;u.beforeCreate=e?[].concat(e,d):[d]}return t}const h="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function m(e){return(e,n)=>b(e,n)}let v;const g={};function b(e,n){const t=h?n.media||"default":e,i=g[t]||(g[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===v&&(v=document.head||document.getElementsByTagName("head")[0]),v.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),s=i.element.childNodes;s[e]&&i.element.removeChild(s[e]),s.length?i.element.insertBefore(n,s[e]):i.element.appendChild(n)}}}var A=f,y=function(){var e=this,n=e._self._c||e.$createElement;return e.isAdvanced?n("div",{staticClass:"p-fileupload p-fileupload-advanced p-component"},[n("div",{staticClass:"p-fileupload-buttonbar"},[n("span",{directives:[{name:"ripple",rawName:"v-ripple"}],class:e.advancedChooseButtonClass,style:e.buttonStyle,attrs:{tabindex:"0"},on:{click:e.choose,keydown:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.choose.apply(null,arguments)},focus:e.onFocus,blur:e.onBlur}},[n("input",{ref:"fileInput",attrs:{type:"file",multiple:e.multiple,accept:e.accept,disabled:e.chooseDisabled},on:{change:e.onFileSelect}}),e._v(" "),n("span",{staticClass:"p-button-icon p-button-icon-left pi pi-fw pi-plus"}),e._v(" "),n("span",{staticClass:"p-button-label"},[e._v(e._s(e.chooseButtonLabel))])]),e._v(" "),e.showUploadButton?n("FileUploadButton",{attrs:{label:e.uploadButtonLabel,icon:"pi pi-upload",disabled:e.uploadDisabled},on:{click:e.upload}}):e._e(),e._v(" "),e.showCancelButton?n("FileUploadButton",{attrs:{label:e.cancelButtonLabel,icon:"pi pi-times",disabled:e.cancelDisabled},on:{click:e.clear}}):e._e()],1),e._v(" "),n("div",{ref:"content",staticClass:"p-fileupload-content",on:{dragenter:e.onDragEnter,dragover:e.onDragOver,dragleave:e.onDragLeave,drop:e.onDrop}},[e.hasFiles?n("FileUploadProgressBar",{attrs:{value:e.progress}}):e._e(),e._v(" "),e._l(e.messages,(function(t){return n("FileUploadMessage",{key:t,attrs:{severity:"error"},on:{close:e.onMessageClose}},[e._v("\n        "+e._s(t)+"\n      ")])})),e._v(" "),e.hasFiles?n("div",{staticClass:"p-fileupload-files"},e._l(e.files,(function(t,i){return n("div",{key:t.name+t.type+t.size,staticClass:"p-fileupload-row"},[n("div",[e.isImage(t)?n("img",{attrs:{role:"presentation",alt:t.name,src:t.objectURL,width:e.previewWidth}}):n("i",{staticClass:"pi pi-file",style:{fontSize:"1.5rem",width:e.previewWidth+"px"},attrs:{role:"file"}})]),e._v(" "),n("div",{staticClass:"p-fileupload-filename"},[e._v(e._s(t.name))]),e._v(" "),n("div",[e._v(e._s(e.formatSize(t.size)))]),e._v(" "),n("div",[n("FileUploadButton",{attrs:{type:"button",icon:"pi pi-times"},on:{click:function(n){return e.remove(i)}}})],1)])})),0):e._e(),e._v(" "),e.$scopedSlots.empty&&!e.hasFiles?n("div",{staticClass:"p-fileupload-empty"},[e._t("empty")],2):e._e()],2)]):e.isBasic?n("div",{staticClass:"p-fileupload p-fileupload-basic p-component"},[e._l(e.messages,(function(t){return n("FileUploadMessage",{key:t,attrs:{severity:"error"},on:{close:e.onMessageClose}},[e._v(e._s(t))])})),e._v(" "),n("span",{directives:[{name:"ripple",rawName:"v-ripple"}],class:e.basicChooseButtonClass,style:e.buttonStyle,attrs:{tabindex:"0"},on:{mouseup:e.onBasicUploaderClick,keydown:function(n){return!n.type.indexOf("key")&&e._k(n.keyCode,"enter",13,n.key,"Enter")?null:e.choose.apply(null,arguments)},focus:e.onFocus,blur:e.onBlur}},[n("span",{class:e.basicChooseButtonIconClass}),e._v(" "),n("span",{staticClass:"p-button-label"},[e._v(e._s(e.basicChooseButtonLabel))]),e._v(" "),e.hasFiles?e._e():n("input",{ref:"fileInput",attrs:{type:"file",accept:e.accept,disabled:e.disabled},on:{change:e.onFileSelect,focus:e.onFocus,blur:e.onBlur}})])],2):e._e()};y._withStripped=!0;module.exports=c({render:y,staticRenderFns:[]},(function(e){e&&e("data-v-6c76199c_0",{source:"\n.p-fileupload-content {\n  position: relative;\n}\n.p-fileupload-row {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.p-fileupload-row > div {\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n  width: 25%;\n}\n.p-fileupload-row > div:last-child {\n  text-align: right;\n}\n.p-fileupload-content .p-progressbar {\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n.p-button.p-fileupload-choose {\n  position: relative;\n  overflow: hidden;\n}\n.p-button.p-fileupload-choose input[type=file] {\n  display: none;\n}\n.p-fileupload-choose.p-fileupload-choose-selected input[type=file] {\n  display: none;\n}\n.p-fileupload-filename {\n  word-break: break-all;\n}\n.p-fluid .p-fileupload .p-button {\n  width: auto;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/fileupload/FileUpload.vue"],names:[],mappings:";AA6gBA;EACA,kBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;AACA;AAEA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;EACA,UAAA;AACA;AAEA;EACA,iBAAA;AACA;AAEA;EACA,WAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;AACA;AAEA;EACA,kBAAA;EACA,gBAAA;AACA;AAEA;EACA,aAAA;AACA;AAEA;EACA,aAAA;AACA;AAEA;EACA,qBAAA;AACA;AAEA;EACA,WAAA;AACA",file:"FileUpload.vue",sourcesContent:['<template>\n  <div class="p-fileupload p-fileupload-advanced p-component" v-if="isAdvanced">\n    <div class="p-fileupload-buttonbar">\n      <span\n        :class="advancedChooseButtonClass"\n        :style="buttonStyle"\n        @click="choose"\n        @keydown.enter="choose"\n        @focus="onFocus"\n        @blur="onBlur"\n        v-ripple\n        tabindex="0">\n        <input\n          ref="fileInput"\n          type="file"\n          @change="onFileSelect"\n          :multiple="multiple"\n          :accept="accept"\n          :disabled="chooseDisabled" />\n        <span class="p-button-icon p-button-icon-left pi pi-fw pi-plus"></span>\n        <span class="p-button-label">{{ chooseButtonLabel }}</span>\n      </span>\n      <FileUploadButton\n        :label="uploadButtonLabel"\n        icon="pi pi-upload"\n        @click="upload"\n        :disabled="uploadDisabled"\n        v-if="showUploadButton" />\n      <FileUploadButton\n        :label="cancelButtonLabel"\n        icon="pi pi-times"\n        @click="clear"\n        :disabled="cancelDisabled"\n        v-if="showCancelButton" />\n    </div>\n    <div\n      ref="content"\n      class="p-fileupload-content"\n      @dragenter="onDragEnter"\n      @dragover="onDragOver"\n      @dragleave="onDragLeave"\n      @drop="onDrop">\n      <FileUploadProgressBar :value="progress" v-if="hasFiles" />\n      <FileUploadMessage v-for="msg of messages" severity="error" :key="msg" @close="onMessageClose">\n        {{ msg }}\n      </FileUploadMessage>\n      <div class="p-fileupload-files" v-if="hasFiles">\n        <div class="p-fileupload-row" v-for="(file, index) of files" :key="file.name + file.type + file.size">\n          <div>\n            <img\n              v-if="isImage(file)"\n              role="presentation"\n              :alt="file.name"\n              :src="file.objectURL"\n              :width="previewWidth" />\n            <i \n              v-else \n              class="pi pi-file" \n              role="file" \n              :style="{ fontSize: \'1.5rem\', width: `${previewWidth}px` }" />\n          </div>\n          <div class="p-fileupload-filename">{{ file.name }}</div>\n          <div>{{ formatSize(file.size) }}</div>\n          <div>\n            <FileUploadButton type="button" icon="pi pi-times" @click="remove(index)" />\n          </div>\n        </div>\n      </div>\n      <div class="p-fileupload-empty" v-if="$scopedSlots.empty && !hasFiles">\n        <slot name="empty"></slot>\n      </div>\n    </div>\n  </div>\n  <div class="p-fileupload p-fileupload-basic p-component" v-else-if="isBasic">\n    <FileUploadMessage v-for="msg of messages" severity="error" :key="msg" @close="onMessageClose">{{\n      msg\n    }}</FileUploadMessage>\n    <span\n      :class="basicChooseButtonClass"\n      :style="buttonStyle"\n      @mouseup="onBasicUploaderClick"\n      @keydown.enter="choose"\n      @focus="onFocus"\n      @blur="onBlur"\n      v-ripple\n      tabindex="0">\n      <span :class="basicChooseButtonIconClass"></span>\n      <span class="p-button-label">{{ basicChooseButtonLabel }}</span>\n      <input\n        ref="fileInput"\n        type="file"\n        :accept="accept"\n        :disabled="disabled"\n        @change="onFileSelect"\n        @focus="onFocus"\n        @blur="onBlur"\n        v-if="!hasFiles" />\n    </span>\n  </div>\n</template>\n\n<script>\nimport Button from \'primevue2/button\'\nimport ProgressBar from \'primevue2/progressbar\'\nimport Message from \'primevue2/message\'\nimport { DomHandler } from \'primevue2/utils\'\nimport Ripple from \'primevue2/ripple\'\n\nexport default {\n  name: \'FileUpload\',\n  props: {\n    name: {\n      type: String,\n      default: null\n    },\n    url: {\n      type: String,\n      default: null\n    },\n    mode: {\n      type: String,\n      default: \'advanced\'\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    accept: {\n      type: String,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    auto: {\n      type: Boolean,\n      default: false\n    },\n    maxFileSize: {\n      type: Number,\n      default: null\n    },\n    invalidFileSizeMessage: {\n      type: String,\n      default: \'{0}: Invalid file size, file size should be smaller than {1}.\'\n    },\n    invalidFileTypeMessage: {\n      type: String,\n      default: \'{0}: Invalid file type, allowed file types: {1}.\'\n    },\n    fileLimit: {\n      type: Number,\n      default: null\n    },\n    invalidFileLimitMessage: {\n      type: String,\n      default: \'Maximum number of files exceeded, limit is {0} at most.\'\n    },\n    withCredentials: {\n      type: Boolean,\n      default: false\n    },\n    previewWidth: {\n      type: Number,\n      default: 50\n    },\n    chooseLabel: {\n      type: String,\n      default: null\n    },\n    uploadLabel: {\n      type: String,\n      default: null\n    },\n    cancelLabel: {\n      type: String,\n      default: null\n    },\n    customUpload: {\n      type: Boolean,\n      default: false\n    },\n    showUploadButton: {\n      type: Boolean,\n      default: true\n    },\n    showCancelButton: {\n      type: Boolean,\n      default: true\n    },\n    buttonStyle: null,\n    buttonClass: null\n  },\n  duplicateIEEvent: false,\n  data() {\n    return {\n      uploadedFileCount: 0,\n      files: [],\n      messages: null,\n      focused: false,\n      progress: null\n    }\n  },\n  methods: {\n    onFileSelect(event) {\n      if (event.type !== \'drop\' && this.isIE11() && this.duplicateIEEvent) {\n        this.duplicateIEEvent = false\n        return\n      }\n\n      this.messages = []\n      this.files = this.files || []\n      let files = event.dataTransfer ? event.dataTransfer.files : event.target.files\n      for (let file of files) {\n        if (!this.isFileSelected(file)) {\n          if (this.validate(file)) {\n            if (this.isImage(file)) {\n              file.objectURL = window.URL.createObjectURL(file)\n            }\n            this.files.push(file)\n          }\n        }\n      }\n\n      this.$emit(\'select\', { originalEvent: event, files: this.files })\n\n      if (this.fileLimit) {\n        this.checkFileLimit()\n      }\n\n      if (this.auto && this.hasFiles && !this.isFileLimitExceeded()) {\n        this.upload()\n      }\n\n      if (event.type !== \'drop\' && this.isIE11()) {\n        this.clearIEInput()\n      }\n      else {\n        this.clearInputElement()\n      }\n    },\n    choose() {\n      this.$refs.fileInput.click()\n    },\n    upload() {\n      if (this.customUpload) {\n        if (this.fileLimit) {\n          this.uploadedFileCount += this.files.length\n        }\n\n        this.$emit(\'uploader\', { files: this.files })\n        this.clear()\n      }\n      else {\n        let xhr = new XMLHttpRequest()\n        let formData = new FormData()\n\n        this.$emit(\'before-upload\', {\n          \'xhr\': xhr,\n          \'formData\': formData\n        })\n\n        for (let file of this.files) {\n          formData.append(this.name, file, file.name)\n        }\n\n        xhr.upload.addEventListener(\'progress\', (event) => {\n          if (event.lengthComputable) {\n            this.progress = Math.round((event.loaded * 100) / event.total)\n          }\n\n          this.$emit(\'progress\', {\n            originalEvent: event,\n            progress: this.progress\n          })\n        })\n\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4) {\n            this.progress = 0\n\n            if (xhr.status >= 200 && xhr.status < 300) {\n              if (this.fileLimit) {\n                this.uploadedFileCount += this.files.length\n              }\n\n              this.$emit(\'upload\', {\n                xhr: xhr,\n                files: this.files\n              })\n            }\n            else {\n              this.$emit(\'error\', {\n                xhr: xhr,\n                files: this.files\n              })\n            }\n\n            this.clear()\n          }\n        }\n\n        xhr.open(\'POST\', this.url, true)\n\n        this.$emit(\'before-send\', {\n          \'xhr\': xhr,\n          \'formData\': formData\n        })\n\n        xhr.withCredentials = this.withCredentials\n\n        xhr.send(formData)\n      }\n    },\n    clear() {\n      this.files = []\n      this.messages = []\n      this.$emit(\'clear\')\n\n      if (this.isAdvanced) {\n        this.clearInputElement()\n      }\n    },\n    onFocus() {\n      this.focused = true\n    },\n    onBlur() {\n      this.focused = false\n    },\n    isFileSelected(file) {\n      if (this.files && this.files.length) {\n        for (let sFile of this.files) {\n          if ((sFile.name + sFile.type + sFile.size) === (file.name + file.type + file.size))\n            return true\n        }\n      }\n\n      return false\n    },\n    isIE11() {\n      return !!window[\'MSInputMethodContext\'] && !!document[\'documentMode\']\n    },\n    validate(file) {\n      if (this.accept && !this.isFileTypeValid(file)) {\n        this.messages.push(this.invalidFileTypeMessage.replace(\'{0}\', file.name).replace(\'{1}\', this.accept))\n        return false\n      }\n\n      if (this.maxFileSize && file.size > this.maxFileSize) {\n        this.messages.push(this.invalidFileSizeMessage.replace(\'{0}\', file.name).replace(\'{1}\', this.formatSize(this.maxFileSize)))\n        return false\n      }\n\n      return true\n    },\n    isFileTypeValid(file) {\n      let acceptableTypes = this.accept.split(\',\').map(type => type.trim())\n      for (let type of acceptableTypes) {\n        let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type)\n          : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase()\n        if (acceptable) {\n          return true\n        }\n      }\n      return false\n    },\n    getTypeClass(fileType) {\n      return fileType.substring(0, fileType.indexOf(\'/\'))\n    },\n    isWildcard(fileType) {\n      return fileType.indexOf(\'*\') !== -1\n    },\n    getFileExtension(file) {\n      return \'.\' + file.name.split(\'.\').pop()\n    },\n    isImage(file) {\n      return /^image\\//.test(file.type)\n    },\n    onDragEnter(event) {\n      if (!this.disabled) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n    },\n    onDragOver(event) {\n      if (!this.disabled) {\n        DomHandler.addClass(this.$refs.content, \'p-fileupload-highlight\')\n        event.stopPropagation()\n        event.preventDefault()\n      }\n    },\n    onDragLeave() {\n      if (!this.disabled) {\n        DomHandler.removeClass(this.$refs.content, \'p-fileupload-highlight\')\n      }\n    },\n    onDrop(event) {\n      if (!this.disabled) {\n        DomHandler.removeClass(this.$refs.content, \'p-fileupload-highlight\')\n        event.stopPropagation()\n        event.preventDefault()\n\n        const files = event.dataTransfer ? event.dataTransfer.files : event.target.files\n        const allowDrop = this.multiple || (files && files.length === 1)\n\n        if (allowDrop) {\n          this.onFileSelect(event)\n        }\n      }\n    },\n    onBasicUploaderClick() {\n      if (this.hasFiles)\n        this.upload()\n      else\n        this.$refs.fileInput.click()\n    },\n    remove(index) {\n      this.clearInputElement()\n      this.files.splice(index, 1)\n      this.files = [...this.files]\n      if (this.files.length <= this.fileLimit) {\n        this.messages = []\n      }\n    },\n    clearInputElement() {\n      this.$refs.fileInput.value = \'\'\n    },\n    clearIEInput() {\n      if (this.$refs.fileInput) {\n        this.duplicateIEEvent = true //IE11 fix to prevent onFileChange trigger again\n        this.$refs.fileInput.value = \'\'\n      }\n    },\n    formatSize(bytes) {\n      if (bytes === 0) {\n        return \'0 B\'\n      }\n      let k = 1000,\n        dm = 3,\n        sizes = [\'B\', \'KB\', \'MB\', \'GB\', \'TB\', \'PB\', \'EB\', \'ZB\', \'YB\'],\n        i = Math.floor(Math.log(bytes) / Math.log(k))\n\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \' \' + sizes[i]\n    },\n    isFileLimitExceeded() {\n      if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focused) {\n        this.focused = false\n      }\n\n      return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount\n    },\n    checkFileLimit() {\n      if (this.isFileLimitExceeded()) {\n        this.messages.push(this.invalidFileLimitMessage.replace(\'{0}\', this.fileLimit.toString()))\n      }\n    },\n    onMessageClose() {\n      this.messages = null\n    }\n  },\n  computed: {\n    isAdvanced() {\n      return this.mode === \'advanced\'\n    },\n    isBasic() {\n      return this.mode === \'basic\'\n    },\n    advancedChooseButtonClass() {\n      return [\'p-button p-component p-fileupload-choose\', this.buttonClass, {\n        \'p-disabled\': this.disabled,\n        \'p-focus\': this.focused\n      }\n      ]\n    },\n    basicChooseButtonClass() {\n      return [\'p-button p-component p-fileupload-choose\', this.buttonClass, {\n        \'p-fileupload-choose-selected\': this.hasFiles,\n        \'p-disabled\': this.disabled,\n        \'p-focus\': this.focused\n      }]\n    },\n    basicChooseButtonIconClass() {\n      return [\'p-button-icon p-button-icon-left pi\', {\n        \'pi-plus\': !this.hasFiles || this.auto,\n        \'pi-upload\': this.hasFiles && !this.auto\n      }]\n    },\n    basicChooseButtonLabel() {\n      return this.auto ? this.chooseButtonLabel : (this.hasFiles ? this.files[0].name : this.chooseButtonLabel)\n    },\n    hasFiles() {\n      return this.files && this.files.length > 0\n    },\n    chooseDisabled() {\n      return this.disabled || (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount)\n    },\n    uploadDisabled() {\n      return this.disabled || !this.hasFiles || (this.fileLimit && this.fileLimit < this.files.length)\n    },\n    cancelDisabled() {\n      return this.disabled || !this.hasFiles\n    },\n    chooseButtonLabel() {\n      return this.chooseLabel || this.$primevue.config.locale.choose\n    },\n    uploadButtonLabel() {\n      return this.uploadLabel || this.$primevue.config.locale.upload\n    },\n    cancelButtonLabel() {\n      return this.cancelLabel || this.$primevue.config.locale.cancel\n    }\n  },\n  components: {\n    \'FileUploadButton\': Button,\n    \'FileUploadProgressBar\': ProgressBar,\n    \'FileUploadMessage\': Message\n  },\n  directives: {\n    \'ripple\': Ripple\n  }\n}\n<\/script>\n\n<style>\n.p-fileupload-content {\n  position: relative;\n}\n\n.p-fileupload-row {\n  display: flex;\n  align-items: center;\n}\n\n.p-fileupload-row > div {\n  flex: 1 1 auto;\n  width: 25%;\n}\n\n.p-fileupload-row > div:last-child {\n  text-align: right;\n}\n\n.p-fileupload-content .p-progressbar {\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.p-button.p-fileupload-choose {\n  position: relative;\n  overflow: hidden;\n}\n\n.p-button.p-fileupload-choose input[type=file] {\n  display: none;\n}\n\n.p-fileupload-choose.p-fileupload-choose-selected input[type=file] {\n  display: none;\n}\n\n.p-fileupload-filename {\n  word-break: break-all;\n}\n\n.p-fluid .p-fileupload .p-button {\n  width: auto;\n}\n</style>\n']},media:void 0})}),A,undefined,false,undefined,!1,m,void 0,void 0);
