"use strict";var e=require("primevue2/utils"),n={name:"Splitter",props:{layout:{type:String,default:"horizontal"},gutterSize:{type:Number,default:4},stateKey:{type:String,default:null},stateStorage:{type:String,default:"session"}},dragging:!1,mouseMoveListener:null,mouseUpListener:null,size:null,gutterElement:null,startPos:null,prevPanelElement:null,nextPanelElement:null,nextPanelSize:null,prevPanelSize:null,panelSizes:null,prevPanelIndex:null,data:function(){return{allChildren:null}},mounted:function(){var e=this;if(this.allChildren=this.$children,this.panels&&this.panels.length){var n=!1;if(this.isStateful()&&(n=this.restoreState()),!n){var t=[];this.panels.map((function(n,s){t[s]=n.size||100/e.panels.length})),this.panelSizes=t}}},beforeDestroy:function(){this.clear(),this.unbindMouseListeners()},methods:{onResizeStart:function(n,t){this.gutterElement=n.currentTarget,this.size=this.horizontal?e.DomHandler.getWidth(this.$el):e.DomHandler.getHeight(this.$el),this.dragging=!0,this.startPos="horizontal"===this.layout?n.pageX:n.pageY,this.prevPanelElement=this.gutterElement.previousElementSibling,this.nextPanelElement=this.gutterElement.nextElementSibling,this.prevPanelSize=100*(this.horizontal?e.DomHandler.getOuterWidth(this.prevPanelElement,!0):e.DomHandler.getOuterHeight(this.prevPanelElement,!0))/this.size,this.nextPanelSize=100*(this.horizontal?e.DomHandler.getOuterWidth(this.nextPanelElement,!0):e.DomHandler.getOuterHeight(this.nextPanelElement,!0))/this.size,this.prevPanelIndex=t,e.DomHandler.addClass(this.gutterElement,"p-splitter-gutter-resizing"),e.DomHandler.addClass(this.$el,"p-splitter-resizing")},onResize:function(e){var n,t=this.prevPanelSize+(n=this.horizontal?100*e.pageX/this.size-100*this.startPos/this.size:100*e.pageY/this.size-100*this.startPos/this.size),s=this.nextPanelSize-n;this.validateResize(t,s)&&(this.prevPanelElement.style.flexBasis="calc("+t+"% - "+(this.panels.length-1)*this.gutterSize+"px)",this.nextPanelElement.style.flexBasis="calc("+s+"% - "+(this.panels.length-1)*this.gutterSize+"px)",this.panelSizes[this.prevPanelIndex]=t,this.panelSizes[this.prevPanelIndex+1]=s)},onResizeEnd:function(n){this.isStateful()&&this.saveState(),this.$emit("resizeend",{originalEvent:n,sizes:this.panelSizes}),e.DomHandler.removeClass(this.gutterElement,"p-splitter-gutter-resizing"),e.DomHandler.removeClass(this.$el,"p-splitter-resizing"),this.clear()},onGutterMouseDown:function(e,n){this.onResizeStart(e,n),this.bindMouseListeners()},onGutterTouchStart:function(e,n){this.onResizeStart(e,n),e.preventDefault()},onGutterTouchMove:function(e){this.onResize(e),e.preventDefault()},onGutterTouchEnd:function(e){this.onResizeEnd(e),e.preventDefault()},bindMouseListeners:function(){var e=this;this.mouseMoveListener||(this.mouseMoveListener=function(n){return e.onResize(n)},document.addEventListener("mousemove",this.mouseMoveListener)),this.mouseUpListener||(this.mouseUpListener=function(n){e.onResizeEnd(n),e.unbindMouseListeners()},document.addEventListener("mouseup",this.mouseUpListener))},validateResize:function(e,n){return!(this.panels[0].props&&this.panels[0].props.minSize&&this.panels[0].props.minSize>e)&&!(this.panels[1].props&&this.panels[1].props.minSize&&this.panels[1].props.minSize>n)},unbindMouseListeners:function(){this.mouseMoveListener&&(document.removeEventListener("mousemove",this.mouseMoveListener),this.mouseMoveListener=null),this.mouseUpListener&&(document.removeEventListener("mouseup",this.mouseUpListener),this.mouseUpListener=null)},clear:function(){this.dragging=!1,this.size=null,this.startPos=null,this.prevPanelElement=null,this.nextPanelElement=null,this.prevPanelSize=null,this.nextPanelSize=null,this.gutterElement=null,this.prevPanelIndex=null},isStateful:function(){return null!=this.stateKey},getStorage:function(){switch(this.stateStorage){case"local":return window.localStorage;case"session":return window.sessionStorage;default:throw new Error(this.stateStorage+' is not a valid value for the state storage, supported values are "local" and "session".')}},saveState:function(){this.getStorage().setItem(this.stateKey,JSON.stringify(this.panelSizes))},restoreState:function(){var e=this.getStorage().getItem(this.stateKey);return!!e&&(this.panelSizes=JSON.parse(e),!0)},getPanelClass:function(e){return["p-splitter-panel",e.$vnode.data.staticClass,{"p-splitter-panel-nested":e.$parent.$vnode.tag.toLowerCase().indexOf("splitter")}]}},computed:{panels:function(){var e=[];return this.allChildren&&(e=this.allChildren.filter((function(e){return-1!==e.$vnode.tag.toLowerCase().indexOf("splitterpanel")}))),e},gutterStyle:function(){return this.horizontal?{width:this.gutterSize+"px"}:{height:this.gutterSize+"px"}},horizontal:function(){return"horizontal"===this.layout}},render:function(){var e=this,n=arguments[0],t=this.horizontal?{width:this.gutterSize+"px"}:{height:this.gutterSize+"px"};return n("div",{class:["p-splitter p-component","p-splitter-"+this.layout]},[this.$slots.default,this.panels.map((function(s,i){var l={flexBasis:"calc("+e.panelSizes[i]+"% - "+(e.panels.length-1)*e.gutterSize+"px)"};return[n("div",{key:i,class:e.getPanelClass(s),style:l},[s.$slots.default]),i!==e.panels.length-1&&n("div",{class:"p-splitter-gutter",style:t,on:{mousedown:function(n){return e.onGutterMouseDown(n,i)},touchstart:function(n){return e.onGutterTouchStart(n,i)},touchmove:function(n){return e.onGutterTouchMove(n,i)},touchend:function(n){return e.onGutterTouchEnd(n,i)}}},[n("div",{class:"p-splitter-gutter-handle"})])]}))])}};function t(e,n,t,s,i,l,r,o,a,p){"boolean"!=typeof r&&(a=o,o=r,r=!1);const A="function"==typeof t?t.options:t;let u;if(e&&e.render&&(A.render=e.render,A.staticRenderFns=e.staticRenderFns,A._compiled=!0,i&&(A.functional=!0)),s&&(A._scopeId=s),l?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,a(e)),e&&e._registeredComponents&&e._registeredComponents.add(l)},A._ssrRegister=u):n&&(u=r?function(e){n.call(this,p(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,o(e))}),u)if(A.functional){const e=A.render;A.render=function(n,t){return u.call(t),e(n,t)}}else{const e=A.beforeCreate;A.beforeCreate=e?[].concat(e,u):[u]}return t}const s="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function i(e){return(e,n)=>o(e,n)}let l;const r={};function o(e,n){const t=s?n.media||"default":e,i=r[t]||(r[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===l&&(l=document.head||document.getElementsByTagName("head")[0]),l.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),s=i.element.childNodes;s[e]&&i.element.removeChild(s[e]),s.length?i.element.insertBefore(n,s[e]):i.element.appendChild(n)}}}module.exports=t({},(function(e){e&&e("data-v-8a52377a_0",{source:"\n.p-splitter {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-wrap: nowrap;\n      -ms-flex-wrap: nowrap;\n          flex-wrap: nowrap;\n}\n.p-splitter-vertical {\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -webkit-flex-direction: column;\n      -ms-flex-direction: column;\n          flex-direction: column;\n}\n.p-splitter-panel {\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n}\n.p-splitter-panel-nested {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.p-splitter-panel .p-splitter {\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n      -ms-flex-positive: 1;\n          flex-grow: 1;\n  border: 0 none;\n}\n.p-splitter-gutter {\n  -webkit-box-flex: 0;\n  -webkit-flex-grow: 0;\n      -ms-flex-positive: 0;\n          flex-grow: 0;\n  -webkit-flex-shrink: 0;\n      -ms-flex-negative: 0;\n          flex-shrink: 0;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  cursor: col-resize;\n}\n.p-splitter-horizontal.p-splitter-resizing {\n  cursor: col-resize;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.p-splitter-horizontal > .p-splitter-gutter > .p-splitter-gutter-handle {\n  height: 24px;\n  width: 100%;\n}\n.p-splitter-horizontal > .p-splitter-gutter {\n  cursor: col-resize;\n}\n.p-splitter-vertical.p-splitter-resizing {\n  cursor: row-resize;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.p-splitter-vertical > .p-splitter-gutter {\n  cursor: row-resize;\n}\n.p-splitter-vertical > .p-splitter-gutter > .p-splitter-gutter-handle {\n  width: 24px;\n  height: 100%;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/splitter/Splitter.vue"],names:[],mappings:";AAgTA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;MAAA,qBAAA;UAAA,iBAAA;AACA;AAEA;EACA,4BAAA;EAAA,6BAAA;EAAA,8BAAA;MAAA,0BAAA;UAAA,sBAAA;AACA;AAEA;EACA,mBAAA;EAAA,oBAAA;MAAA,oBAAA;UAAA,YAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA;AAEA;EACA,mBAAA;EAAA,oBAAA;MAAA,oBAAA;UAAA,YAAA;EACA,cAAA;AACA;AAEA;EACA,mBAAA;EAAA,oBAAA;MAAA,oBAAA;UAAA,YAAA;EACA,sBAAA;MAAA,oBAAA;UAAA,cAAA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,kBAAA;AACA;AAEA;EACA,kBAAA;EACA,yBAAA;KAAA,sBAAA;MAAA,qBAAA;UAAA,iBAAA;AACA;AAEA;EACA,YAAA;EACA,WAAA;AACA;AAEA;EACA,kBAAA;AACA;AAEA;EACA,kBAAA;EACA,yBAAA;KAAA,sBAAA;MAAA,qBAAA;UAAA,iBAAA;AACA;AAEA;EACA,kBAAA;AACA;AAEA;EACA,WAAA;EACA,YAAA;AACA",file:"Splitter.vue",sourcesContent:["<script lang=\"jsx\">\nimport { DomHandler } from 'primevue2/utils'\n\nexport default {\n  name: 'Splitter',\n  props: {\n    layout: {\n      type: String,\n      default: 'horizontal'\n    },\n    gutterSize: {\n      type: Number,\n      default: 4\n    },\n    stateKey: {\n      type: String,\n      default: null\n    },\n    stateStorage: {\n      type: String,\n      default: 'session'\n    }\n  },\n  dragging: false,\n  mouseMoveListener: null,\n  mouseUpListener: null,\n  size: null,\n  gutterElement: null,\n  startPos: null,\n  prevPanelElement: null,\n  nextPanelElement: null,\n  nextPanelSize: null,\n  prevPanelSize: null,\n  panelSizes: null,\n  prevPanelIndex: null,\n  data() {\n    return {\n      allChildren: null\n    }\n  },\n  mounted() {\n    this.allChildren = this.$children\n    if (this.panels && this.panels.length) {\n      let initialized = false\n      if (this.isStateful()) {\n        initialized = this.restoreState()\n      }\n\n      if (!initialized) {\n        let _panelSizes = []\n\n        this.panels.map((panel, i) => {\n          let panelSize = panel.size || 100 / this.panels.length\n          _panelSizes[i] = panelSize\n        })\n\n        this.panelSizes = _panelSizes\n      }\n    }\n  },\n  beforeDestroy() {\n    this.clear()\n    this.unbindMouseListeners()\n  },\n  methods: {\n    onResizeStart(event, index) {\n      this.gutterElement = event.currentTarget\n      this.size = this.horizontal\n        ? DomHandler.getWidth(this.$el)\n        : DomHandler.getHeight(this.$el)\n      this.dragging = true\n      this.startPos = this.layout === 'horizontal' ? event.pageX : event.pageY\n      this.prevPanelElement = this.gutterElement.previousElementSibling\n      this.nextPanelElement = this.gutterElement.nextElementSibling\n      this.prevPanelSize =\n        (100 *\n          (this.horizontal\n            ? DomHandler.getOuterWidth(this.prevPanelElement, true)\n            : DomHandler.getOuterHeight(this.prevPanelElement, true))) /\n        this.size\n      this.nextPanelSize =\n        (100 *\n          (this.horizontal\n            ? DomHandler.getOuterWidth(this.nextPanelElement, true)\n            : DomHandler.getOuterHeight(this.nextPanelElement, true))) /\n        this.size\n      this.prevPanelIndex = index\n      DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing')\n      DomHandler.addClass(this.$el, 'p-splitter-resizing')\n    },\n    onResize(event) {\n      let newPos\n      if (this.horizontal)\n        newPos =\n          (event.pageX * 100) / this.size - (this.startPos * 100) / this.size\n      else\n        newPos =\n          (event.pageY * 100) / this.size - (this.startPos * 100) / this.size\n\n      let newPrevPanelSize = this.prevPanelSize + newPos\n      let newNextPanelSize = this.nextPanelSize - newPos\n\n      if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n        this.prevPanelElement.style.flexBasis =\n          'calc(' +\n          newPrevPanelSize +\n          '% - ' +\n          (this.panels.length - 1) * this.gutterSize +\n          'px)'\n        this.nextPanelElement.style.flexBasis =\n          'calc(' +\n          newNextPanelSize +\n          '% - ' +\n          (this.panels.length - 1) * this.gutterSize +\n          'px)'\n        this.panelSizes[this.prevPanelIndex] = newPrevPanelSize\n        this.panelSizes[this.prevPanelIndex + 1] = newNextPanelSize\n      }\n    },\n    onResizeEnd(event) {\n      if (this.isStateful()) {\n        this.saveState()\n      }\n\n      this.$emit('resizeend', { originalEvent: event, sizes: this.panelSizes })\n      DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing')\n      DomHandler.removeClass(this.$el, 'p-splitter-resizing')\n      this.clear()\n    },\n    onGutterMouseDown(event, index) {\n      this.onResizeStart(event, index)\n      this.bindMouseListeners()\n    },\n    onGutterTouchStart(event, index) {\n      this.onResizeStart(event, index)\n      event.preventDefault()\n    },\n    onGutterTouchMove(event) {\n      this.onResize(event)\n      event.preventDefault()\n    },\n    onGutterTouchEnd(event) {\n      this.onResizeEnd(event)\n      event.preventDefault()\n    },\n    bindMouseListeners() {\n      if (!this.mouseMoveListener) {\n        this.mouseMoveListener = (event) => this.onResize(event)\n        document.addEventListener('mousemove', this.mouseMoveListener)\n      }\n\n      if (!this.mouseUpListener) {\n        this.mouseUpListener = (event) => {\n          this.onResizeEnd(event)\n          this.unbindMouseListeners()\n        }\n        document.addEventListener('mouseup', this.mouseUpListener)\n      }\n    },\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n      if (\n        this.panels[0].props &&\n        this.panels[0].props.minSize &&\n        this.panels[0].props.minSize > newPrevPanelSize\n      ) {\n        return false\n      }\n\n      if (\n        this.panels[1].props &&\n        this.panels[1].props.minSize &&\n        this.panels[1].props.minSize > newNextPanelSize\n      ) {\n        return false\n      }\n\n      return true\n    },\n    unbindMouseListeners() {\n      if (this.mouseMoveListener) {\n        document.removeEventListener('mousemove', this.mouseMoveListener)\n        this.mouseMoveListener = null\n      }\n\n      if (this.mouseUpListener) {\n        document.removeEventListener('mouseup', this.mouseUpListener)\n        this.mouseUpListener = null\n      }\n    },\n    clear() {\n      this.dragging = false\n      this.size = null\n      this.startPos = null\n      this.prevPanelElement = null\n      this.nextPanelElement = null\n      this.prevPanelSize = null\n      this.nextPanelSize = null\n      this.gutterElement = null\n      this.prevPanelIndex = null\n    },\n    isStateful() {\n      return this.stateKey != null\n    },\n    getStorage() {\n      switch (this.stateStorage) {\n      case 'local':\n        return window.localStorage\n\n      case 'session':\n        return window.sessionStorage\n\n      default:\n        throw new Error(\n          this.stateStorage +\n              ' is not a valid value for the state storage, supported values are \"local\" and \"session\".'\n        )\n      }\n    },\n    saveState() {\n      this.getStorage().setItem(this.stateKey, JSON.stringify(this.panelSizes))\n    },\n    restoreState() {\n      const storage = this.getStorage()\n      const stateString = storage.getItem(this.stateKey)\n\n      if (stateString) {\n        this.panelSizes = JSON.parse(stateString)\n        return true\n      }\n\n      return false\n    },\n    getPanelClass(panel) {\n      return [\n        'p-splitter-panel',\n        panel.$vnode.data.staticClass,\n        {\n          'p-splitter-panel-nested':\n            panel.$parent.$vnode.tag.toLowerCase().indexOf('splitter')\n        }\n      ]\n    }\n  },\n  computed: {\n    panels() {\n      let panels = []\n\n      if (this.allChildren) {\n        panels = this.allChildren.filter(\n          (child) => child.$vnode.tag.toLowerCase().indexOf('splitterpanel') !== -1\n        )\n      }\n      return panels\n    },\n    gutterStyle() {\n      if (this.horizontal) return { width: this.gutterSize + 'px' }\n      else return { height: this.gutterSize + 'px' }\n    },\n    horizontal() {\n      return this.layout === 'horizontal'\n    }\n  },\n  render() {\n    const gutterStyle = this.horizontal\n      ? { width: this.gutterSize + 'px' }\n      : { height: this.gutterSize + 'px' }\n\n    return (\n      <div class={['p-splitter p-component', 'p-splitter-' + this.layout]}>\n        {this.$slots.default}\n        {this.panels.map((panel, i) => {\n          let panelStyle = {\n            flexBasis:\n              'calc(' +\n              this.panelSizes[i] +\n              '% - ' +\n              (this.panels.length - 1) * this.gutterSize +\n              'px)'\n          }\n\n          return [\n            <div key={i} class={this.getPanelClass(panel)} style={panelStyle}>\n              {panel.$slots.default}\n            </div>,\n            i !== this.panels.length - 1 && (\n              <div\n                class='p-splitter-gutter'\n                style={gutterStyle}\n                on-mousedown={(e) => this.onGutterMouseDown(e, i)}\n                on-touchstart={(e) => this.onGutterTouchStart(e, i)}\n                on-touchmove={(e) => this.onGutterTouchMove(e, i)}\n                on-touchend={(e) => this.onGutterTouchEnd(e, i)}>\n                <div class='p-splitter-gutter-handle'></div>\n              </div>\n            )\n          ]\n        })}\n      </div>\n    )\n  }\n}\n<\/script>\n\n<style>\n.p-splitter {\n  display: flex;\n  flex-wrap: nowrap;\n}\n\n.p-splitter-vertical {\n  flex-direction: column;\n}\n\n.p-splitter-panel {\n  flex-grow: 1;\n}\n\n.p-splitter-panel-nested {\n  display: flex;\n}\n\n.p-splitter-panel .p-splitter {\n  flex-grow: 1;\n  border: 0 none;\n}\n\n.p-splitter-gutter {\n  flex-grow: 0;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: col-resize;\n}\n\n.p-splitter-horizontal.p-splitter-resizing {\n  cursor: col-resize;\n  user-select: none;\n}\n\n.p-splitter-horizontal > .p-splitter-gutter > .p-splitter-gutter-handle {\n  height: 24px;\n  width: 100%;\n}\n\n.p-splitter-horizontal > .p-splitter-gutter {\n  cursor: col-resize;\n}\n\n.p-splitter-vertical.p-splitter-resizing {\n  cursor: row-resize;\n  user-select: none;\n}\n\n.p-splitter-vertical > .p-splitter-gutter {\n  cursor: row-resize;\n}\n\n.p-splitter-vertical > .p-splitter-gutter > .p-splitter-gutter-handle {\n  width: 24px;\n  height: 100%;\n}\n</style>\n"]},media:void 0})}),n,undefined,undefined,undefined,!1,i,void 0,void 0);
