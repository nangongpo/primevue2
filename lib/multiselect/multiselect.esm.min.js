import{ObjectUtils as e,DomHandler as n,ConnectedOverlayScrollHandler as t}from"primevue2/utils";import i from"primevue2/ripple";function l(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function o(e){if(Array.isArray(e))return c(e)}function a(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=r(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var i=0,l=function(){};return{s:l,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return o=e.done,e},e:function(e){a=!0,s=e},f:function(){try{o||null==t.return||t.return()}finally{if(a)throw s}}}}function r(e,n){if(e){if("string"==typeof e)return c(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?c(e,n):void 0}}function c(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}var p={name:"MultiSelect",props:{value:null,options:Array,optionLabel:null,optionValue:null,optionDisabled:null,scrollHeight:{type:String,default:"200px"},placeholder:String,disabled:Boolean,filter:Boolean,tabindex:String,inputId:String,dataKey:null,filterPlaceholder:String,filterLocale:String,ariaLabelledBy:null,appendTo:{type:String,default:null},emptyFilterMessage:{type:String,default:"No results found"},display:{type:String,default:"comma"},selectionLimit:{type:Number,default:null},showToggleAll:{type:Boolean,default:!0}},data:function(){return{focused:!1,headerCheckboxFocused:!1,filterValue:null,overlayVisible:!1}},outsideClickListener:null,resizeListener:null,scrollHandler:null,updated:function(){this.onFilterUpdated()},beforeDestroy:function(){this.restoreAppend(),this.unbindOutsideClickListener(),this.unbindResizeListener(),this.scrollHandler&&(this.scrollHandler.destroy(),this.scrollHandler=null)},methods:{getOptionLabel:function(n){return this.optionLabel?e.resolveFieldData(n,this.optionLabel):n},getOptionValue:function(n){return this.optionValue?e.resolveFieldData(n,this.optionValue):n},getOptionRenderKey:function(n){return this.dataKey?e.resolveFieldData(n,this.dataKey):this.getOptionLabel(n)},isOptionDisabled:function(n){return!(!this.maxSelectionLimitReached||this.isSelected(n))||!!this.optionDisabled&&e.resolveFieldData(n,this.optionDisabled)},isSelected:function(n){var t=!1,i=this.getOptionValue(n);if(this.value){var l,s=a(this.value);try{for(s.s();!(l=s.n()).done;){if(e.equals(l.value,i,this.equalityKey)){t=!0;break}}}catch(e){s.e(e)}finally{s.f()}}return t},show:function(){this.$emit("before-show"),this.overlayVisible=!0},hide:function(){this.$emit("before-hide"),this.overlayVisible=!1},onFocus:function(){this.focused=!0},onBlur:function(){this.focused=!1},onHeaderCheckboxFocus:function(){this.headerCheckboxFocused=!0},onHeaderCheckboxBlur:function(){this.headerCheckboxFocused=!1},onClick:function(e){this.disabled||this.$refs.overlay&&this.$refs.overlay.contains(e.target)||n.hasClass(e.target,"p-multiselect-close")||(this.overlayVisible?this.hide():this.show(),this.$refs.focusInput.focus())},onCloseClick:function(){this.hide()},onKeyDown:function(e){switch(e.which){case 40:this.visibleOptions&&!this.overlayVisible&&e.altKey&&this.show();break;case 32:this.overlayVisible||(this.show(),e.preventDefault());break;case 13:case 27:this.overlayVisible&&(this.hide(),e.preventDefault());break;case 9:this.hide()}},onOptionSelect:function(n,t){var i=this;if(!this.disabled&&!this.isOptionDisabled(t)){var a,c=null;c=this.isSelected(t)?this.value.filter((function(n){return!e.equals(n,i.getOptionValue(t),i.equalityKey)})):[].concat(o(a=this.value||[])||s(a)||r(a)||l(),[this.getOptionValue(t)]),this.$emit("input",c),this.$emit("change",{originalEvent:n,value:c})}},onOptionKeyDown:function(e,n){var t=e.target;switch(e.which){case 40:var i=this.findNextItem(t);i&&i.focus(),e.preventDefault();break;case 38:var l=this.findPrevItem(t);l&&l.focus(),e.preventDefault();break;case 13:this.onOptionSelect(e,n),e.preventDefault()}},findNextItem:function(e){var t=e.nextElementSibling;return t?n.hasClass(t,"p-disabled")?this.findNextItem(t):t:null},findPrevItem:function(e){var t=e.previousElementSibling;return t?n.hasClass(t,"p-disabled")?this.findPrevItem(t):t:null},onOverlayEnter:function(){this.$refs.overlay.style.zIndex=String(n.generateZIndex()),this.appendContainer(),this.alignOverlay(),this.bindOutsideClickListener(),this.bindScrollListener(),this.bindResizeListener(),this.$emit("show"),this.filter&&this.$refs.filterInput.focus()},onOverlayLeave:function(){this.unbindOutsideClickListener(),this.unbindScrollListener(),this.unbindResizeListener(),this.$emit("hide")},alignOverlay:function(){this.appendTo?(n.absolutePosition(this.$refs.overlay,this.$refs.container),this.$refs.overlay.style.minWidth=n.getOuterWidth(this.$refs.container)+"px"):n.relativePosition(this.$refs.overlay,this.$refs.container)},bindOutsideClickListener:function(){var e=this;this.outsideClickListener||(this.outsideClickListener=function(n){e.overlayVisible&&e.isOutsideClicked(n)&&e.hide()},document.addEventListener("click",this.outsideClickListener))},unbindOutsideClickListener:function(){this.outsideClickListener&&(document.removeEventListener("click",this.outsideClickListener),this.outsideClickListener=null)},bindScrollListener:function(){var e=this;this.scrollHandler||(this.scrollHandler=new t(this.$el,(function(){e.overlayVisible&&e.hide()}))),this.scrollHandler.bindScrollListener()},unbindScrollListener:function(){this.scrollHandler&&this.scrollHandler.unbindScrollListener()},bindResizeListener:function(){var e=this;this.resizeListener||(this.resizeListener=function(){e.overlayVisible&&!n.isAndroid()&&e.hide()},window.addEventListener("resize",this.resizeListener))},unbindResizeListener:function(){this.resizeListener&&(window.removeEventListener("resize",this.resizeListener),this.resizeListener=null)},isOutsideClicked:function(e){return!(this.$refs.container.isSameNode(e.target)||this.$refs.container.contains(e.target)||this.$refs.overlay&&this.$refs.overlay.contains(e.target))},getLabelByValue:function(n){var t=null;if(this.options){var i,l=a(this.options);try{for(l.s();!(i=l.n()).done;){var s=i.value,o=this.getOptionValue(s);if(e.equals(o,n,this.equalityKey)){t=this.getOptionLabel(s);break}}}catch(e){l.e(e)}finally{l.f()}}return t},onToggleAll:function(e){var n=this,t=this.allSelected?[]:this.visibleOptions&&this.visibleOptions.map((function(e){return n.getOptionValue(e)}));this.$emit("input",t),this.$emit("change",{originalEvent:e,value:t})},appendContainer:function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.$refs.overlay):document.getElementById(this.appendTo).appendChild(this.$refs.overlay))},restoreAppend:function(){this.$refs.overlay&&this.appendTo&&("body"===this.appendTo?document.body.removeChild(this.$refs.overlay):document.getElementById(this.appendTo).removeChild(this.$refs.overlay))},onFilterChange:function(e){this.$emit("filter",{originalEvent:e,value:e.target.value})},onFilterUpdated:function(){this.overlayVisible&&this.alignOverlay()},removeChip:function(n){var t=this,i=this.value.filter((function(i){return!e.equals(i,n,t.equalityKey)}));this.$emit("input",i),this.$emit("change",{originalEvent:event,value:i})}},computed:{visibleOptions:function(){var e=this;return this.filterValue&&this.filterValue.trim().length>0?this.options.filter((function(n){return e.getOptionLabel(n).toLocaleLowerCase(e.filterLocale).indexOf(e.filterValue.toLocaleLowerCase(e.filterLocale))>-1})):this.options},containerClass:function(){return["p-multiselect p-component p-inputwrapper",{"p-multiselect-chip":"chip"===this.display,"p-disabled":this.disabled,"p-focus":this.focused,"p-inputwrapper-filled":this.value&&this.value.length,"p-inputwrapper-focus":this.focused||this.overlayVisible}]},labelClass:function(){return["p-multiselect-label",{"p-placeholder":this.label===this.placeholder,"p-multiselect-label-empty":!(this.placeholder||this.value&&0!==this.value.length)}]},label:function(){var e;if(this.value&&this.value.length){e="";for(var n=0;n<this.value.length;n++)0!==n&&(e+=", "),e+=this.getLabelByValue(this.value[n])}else e=this.placeholder;return e},allSelected:function(){if(this.filterValue&&this.filterValue.trim().length>0){var e=!0;if(this.visibleOptions.length>0){var n,t=a(this.visibleOptions);try{for(t.s();!(n=t.n()).done;){if(!this.isSelected(n.value)){e=!1;break}}}catch(e){t.e(e)}finally{t.f()}}else e=!1;return e}return this.value&&this.options&&this.value.length>0&&this.value.length===this.options.length},equalityKey:function(){return this.optionValue?null:this.dataKey},maxSelectionLimitReached:function(){return this.selectionLimit&&this.value&&this.value.length===this.selectionLimit}},directives:{ripple:i}};function A(e,n,t,i,l,s,o,a,r,c){"boolean"!=typeof o&&(r=a,a=o,o=!1);const p="function"==typeof t?t.options:t;let A;if(e&&e.render&&(p.render=e.render,p.staticRenderFns=e.staticRenderFns,p._compiled=!0,l&&(p.functional=!0)),i&&(p._scopeId=i),s?(A=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,r(e)),e&&e._registeredComponents&&e._registeredComponents.add(s)},p._ssrRegister=A):n&&(A=o?function(e){n.call(this,c(e,this.$root.$options.shadowRoot))}:function(e){n.call(this,a(e))}),A)if(p.functional){const e=p.render;p.render=function(n,t){return A.call(t),e(n,t)}}else{const e=p.beforeCreate;p.beforeCreate=e?[].concat(e,A):[A]}return t}const u="undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function d(e){return(e,n)=>v(e,n)}let h;const f={};function v(e,n){const t=u?n.media||"default":e,i=f[t]||(f[t]={ids:new Set,styles:[]});if(!i.ids.has(e)){i.ids.add(e);let t=n.source;if(n.map&&(t+="\n/*# sourceURL="+n.map.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n.map))))+" */"),i.element||(i.element=document.createElement("style"),i.element.type="text/css",n.media&&i.element.setAttribute("media",n.media),void 0===h&&(h=document.head||document.getElementsByTagName("head")[0]),h.appendChild(i.element)),"styleSheet"in i.element)i.styles.push(t),i.element.styleSheet.cssText=i.styles.filter(Boolean).join("\n");else{const e=i.ids.size-1,n=document.createTextNode(t),l=i.element.childNodes;l[e]&&i.element.removeChild(l[e]),l.length?i.element.insertBefore(n,l[e]):i.element.appendChild(n)}}}var m=p,b=function(){var e=this,n=e._self._c||e.$createElement;return n("div",{ref:"container",class:e.containerClass,on:{click:e.onClick}},[n("div",{staticClass:"p-hidden-accessible"},[n("input",{ref:"focusInput",attrs:{type:"text",role:"listbox",id:e.inputId,readonly:"",disabled:e.disabled,tabindex:e.tabindex,"aria-haspopup":"listbox","aria-expanded":e.overlayVisible,"aria-labelledby":e.ariaLabelledBy},on:{focus:e.onFocus,blur:e.onBlur,keydown:e.onKeyDown}})]),e._v(" "),n("div",{staticClass:"p-multiselect-label-container"},[n("div",{class:e.labelClass},[e._t("value",(function(){return["comma"===e.display?[e._v("\n          "+e._s(e.label||"empty")+"\n        ")]:"chip"===e.display?[e._l(e.value,(function(t){return n("div",{key:e.getLabelByValue(t),staticClass:"p-multiselect-token"},[n("span",{staticClass:"p-multiselect-token-label"},[e._v(e._s(e.getLabelByValue(t)))]),e._v(" "),e.disabled?e._e():n("span",{staticClass:"p-multiselect-token-icon pi pi-times-circle",on:{click:function(n){return e.removeChip(t)}}})])})),e._v(" "),e.value&&0!==e.value.length?e._e():[e._v(e._s(e.placeholder||"empty"))]]:e._e()]}),{value:e.value,placeholder:e.placeholder})],2)]),e._v(" "),n("div",{staticClass:"p-multiselect-trigger"},[e._t("indicator",(function(){return[n("span",{staticClass:"p-multiselect-trigger-icon pi pi-chevron-down"})]}))],2),e._v(" "),n("transition",{attrs:{name:"p-connected-overlay"},on:{enter:e.onOverlayEnter,leave:e.onOverlayLeave}},[e.overlayVisible?n("div",{ref:"overlay",staticClass:"p-multiselect-panel p-component"},[e.showToggleAll&&null==e.selectionLimit||e.filter?n("div",{staticClass:"p-multiselect-header"},[e.showToggleAll&&null==e.selectionLimit?n("div",{staticClass:"p-checkbox p-component",attrs:{role:"checkbox","aria-checked":e.allSelected},on:{click:e.onToggleAll}},[n("div",{staticClass:"p-hidden-accessible"},[n("input",{attrs:{type:"checkbox",readonly:""},on:{focus:e.onHeaderCheckboxFocus,blur:e.onHeaderCheckboxBlur}})]),e._v(" "),n("div",{class:["p-checkbox-box",{"p-highlight":e.allSelected,"p-focus":e.headerCheckboxFocused}],attrs:{role:"checkbox","aria-checked":e.allSelected}},[n("span",{class:["p-checkbox-icon",{"pi pi-check":e.allSelected}]})])]):e._e(),e._v(" "),e.filter?n("div",{staticClass:"p-multiselect-filter-container"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.filterValue,expression:"filterValue"}],ref:"filterInput",staticClass:"p-multiselect-filter p-inputtext p-component",attrs:{type:"text",autoComplete:"on",placeholder:e.filterPlaceholder},domProps:{value:e.filterValue},on:{input:[function(n){n.target.composing||(e.filterValue=n.target.value)},e.onFilterChange]}}),e._v(" "),n("span",{staticClass:"p-multiselect-filter-icon pi pi-search"})]):e._e(),e._v(" "),n("button",{directives:[{name:"ripple",rawName:"v-ripple"}],staticClass:"p-multiselect-close p-link",attrs:{type:"button"},on:{click:e.onCloseClick}},[n("span",{staticClass:"p-multiselect-close-icon pi pi-times"})])]):e._e(),e._v(" "),n("div",{ref:"itemsWrapper",staticClass:"p-multiselect-items-wrapper",style:{"max-height":e.scrollHeight}},[n("ul",{staticClass:"p-multiselect-items p-component",attrs:{role:"listbox","aria-multiselectable":"true"}},[e._l(e.visibleOptions,(function(t,i){return n("li",{directives:[{name:"ripple",rawName:"v-ripple"}],key:e.getOptionRenderKey(t),class:["p-multiselect-item",{"p-highlight":e.isSelected(t),"p-disabled":e.isOptionDisabled(t)}],attrs:{role:"option","aria-selected":e.isSelected(t),"aria-label":e.getOptionLabel(t),tabindex:e.tabindex||"0"},on:{click:function(n){return e.onOptionSelect(n,t)},keydown:function(n){return e.onOptionKeyDown(n,t)}}},[n("div",{staticClass:"p-checkbox p-component"},[n("div",{class:["p-checkbox-box",{"p-highlight":e.isSelected(t)}]},[n("span",{class:["p-checkbox-icon",{"pi pi-check":e.isSelected(t)}]})])]),e._v(" "),e._t("option",(function(){return[n("span",[e._v(e._s(e.getOptionLabel(t)))])]}),{option:t,index:i})],2)})),e._v(" "),e.filterValue&&(!e.visibleOptions||e.visibleOptions&&0===e.visibleOptions.length)?n("li",{staticClass:"p-multiselect-empty-message"},[e._v("\n            "+e._s(e.emptyFilterMessage)+"\n          ")]):e._e()],2)])]):e._e()])],1)};b._withStripped=!0;var y=A({render:b,staticRenderFns:[]},(function(e){e&&e("data-v-1b689f3e_0",{source:"\n.p-multiselect {\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  cursor: pointer;\n  position: relative;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.p-multiselect-trigger {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-flex-shrink: 0;\n      -ms-flex-negative: 0;\n          flex-shrink: 0;\n}\n.p-multiselect-label-container {\n  overflow: hidden;\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n  cursor: pointer;\n}\n.p-multiselect-label  {\n  display: block;\n  white-space: nowrap;\n  cursor: pointer;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.p-multiselect-label-empty {\n  overflow: hidden;\n  visibility: hidden;\n}\n.p-multiselect-token {\n  cursor: default;\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-flex: 0;\n  -webkit-flex: 0 0 auto;\n      -ms-flex: 0 0 auto;\n          flex: 0 0 auto;\n}\n.p-multiselect-token-icon {\n  cursor: pointer;\n}\n.p-multiselect .p-multiselect-panel {\n  min-width: 100%;\n}\n.p-multiselect-panel {\n  position: absolute;\n}\n.p-multiselect-items-wrapper {\n  overflow: auto;\n}\n.p-multiselect-items {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n.p-multiselect-item {\n  cursor: pointer;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  font-weight: normal;\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n}\n.p-multiselect-header {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n}\n.p-multiselect-filter-container {\n  position: relative;\n  -webkit-box-flex: 1;\n  -webkit-flex: 1 1 auto;\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto;\n}\n.p-multiselect-filter-icon {\n  position: absolute;\n  top: 50%;\n  margin-top: -.5rem;\n}\n.p-multiselect-filter-container .p-inputtext {\n  width: 100%;\n}\n.p-multiselect-close {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n  -webkit-align-items: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n  -webkit-justify-content: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-flex-shrink: 0;\n      -ms-flex-negative: 0;\n          flex-shrink: 0;\n  overflow: hidden;\n  position: relative;\n  margin-left: auto;\n}\n.p-fluid .p-multiselect {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n",map:{version:3,sources:["/Users/nangongpo/Desktop/开源学习/primevue2/src/components/multiselect/MultiSelect.vue"],names:[],mappings:";AAgjBA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,eAAA;EACA,kBAAA;EACA,yBAAA;KAAA,sBAAA;MAAA,qBAAA;UAAA,iBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,sBAAA;MAAA,oBAAA;UAAA,cAAA;AACA;AAEA;EACA,gBAAA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;EACA,eAAA;AACA;AAEA;EACA,cAAA;EACA,mBAAA;EACA,eAAA;EACA,gBAAA;EACA,uBAAA;AACA;AAEA;EACA,gBAAA;EACA,kBAAA;AACA;AAEA;EACA,eAAA;EACA,2BAAA;EAAA,4BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,kBAAA;AACA;AAEA;EACA,cAAA;AACA;AAEA;EACA,SAAA;EACA,UAAA;EACA,qBAAA;AACA;AAEA;EACA,eAAA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,mBAAA;EACA,mBAAA;EACA,kBAAA;EACA,gBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,yBAAA;EAAA,sCAAA;MAAA,sBAAA;UAAA,8BAAA;AACA;AAEA;EACA,kBAAA;EACA,mBAAA;EAAA,sBAAA;MAAA,kBAAA;UAAA,cAAA;AACA;AAEA;EACA,kBAAA;EACA,QAAA;EACA,kBAAA;AACA;AAEA;EACA,WAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,2BAAA;MAAA,sBAAA;UAAA,mBAAA;EACA,wBAAA;EAAA,+BAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,sBAAA;MAAA,oBAAA;UAAA,cAAA;EACA,gBAAA;EACA,kBAAA;EACA,iBAAA;AACA;AAEA;EACA,oBAAA;EAAA,qBAAA;EAAA,oBAAA;EAAA,aAAA;AACA",file:"MultiSelect.vue",sourcesContent:['<template>\n  <div ref="container" :class="containerClass" @click="onClick">\n    <div class="p-hidden-accessible">\n      <input\n        ref="focusInput"\n        type="text"\n        role="listbox"\n        :id="inputId"\n        readonly\n        :disabled="disabled"\n        @focus="onFocus"\n        @blur="onBlur"\n        @keydown="onKeyDown"\n        :tabindex="tabindex"\n        aria-haspopup="listbox"\n        :aria-expanded="overlayVisible"\n        :aria-labelledby="ariaLabelledBy" />\n    </div>\n    <div class="p-multiselect-label-container">\n      <div :class="labelClass">\n        <slot name="value" :value="value" :placeholder="placeholder">\n          <template v-if="display === \'comma\'">\n            {{ label || "empty" }}\n          </template>\n          <template v-else-if="display === \'chip\'">\n            <div v-for="item of value" class="p-multiselect-token" :key="getLabelByValue(item)">\n              <span class="p-multiselect-token-label">{{ getLabelByValue(item) }}</span>\n              <span\n                v-if="!disabled"\n                class="p-multiselect-token-icon pi pi-times-circle"\n                @click="removeChip(item)"></span>\n            </div>\n            <template v-if="!value || value.length === 0">{{ placeholder || "empty" }}</template>\n          </template>\n        </slot>\n      </div>\n    </div>\n    <div class="p-multiselect-trigger">\n      <slot name="indicator">\n        <span class="p-multiselect-trigger-icon pi pi-chevron-down"></span>\n      </slot>\n    </div>\n    <transition name="p-connected-overlay" @enter="onOverlayEnter" @leave="onOverlayLeave">\n      <div ref="overlay" class="p-multiselect-panel p-component" v-if="overlayVisible">\n        <div class="p-multiselect-header" v-if="(showToggleAll && selectionLimit == null) || filter">\n          <div\n            class="p-checkbox p-component"\n            v-if="showToggleAll && selectionLimit == null"\n            @click="onToggleAll"\n            role="checkbox"\n            :aria-checked="allSelected">\n            <div class="p-hidden-accessible">\n              <input type="checkbox" readonly @focus="onHeaderCheckboxFocus" @blur="onHeaderCheckboxBlur" />\n            </div>\n            <div\n              :class="[\'p-checkbox-box\', { \'p-highlight\': allSelected, \'p-focus\': headerCheckboxFocused }]"\n              role="checkbox"\n              :aria-checked="allSelected">\n              <span :class="[\'p-checkbox-icon\', { \'pi pi-check\': allSelected }]"></span>\n            </div>\n          </div>\n          <div v-if="filter" class="p-multiselect-filter-container">\n            <input\n              type="text"\n              ref="filterInput"\n              v-model="filterValue"\n              class="p-multiselect-filter p-inputtext p-component"\n              autoComplete="on"\n              :placeholder="filterPlaceholder"\n              @input="onFilterChange" />\n            <span class="p-multiselect-filter-icon pi pi-search"></span>\n          </div>\n          <button class="p-multiselect-close p-link" @click="onCloseClick" type="button" v-ripple>\n            <span class="p-multiselect-close-icon pi pi-times" />\n          </button>\n        </div>\n        <div ref="itemsWrapper" class="p-multiselect-items-wrapper" :style="{ \'max-height\': scrollHeight }">\n          <ul class="p-multiselect-items p-component" role="listbox" aria-multiselectable="true">\n            <li\n              v-for="(option, i) of visibleOptions"\n              :class="[\n                \'p-multiselect-item\',\n                { \'p-highlight\': isSelected(option), \'p-disabled\': isOptionDisabled(option) },\n              ]"\n              role="option"\n              :aria-selected="isSelected(option)"\n              :aria-label="getOptionLabel(option)"\n              :key="getOptionRenderKey(option)"\n              @click="onOptionSelect($event, option)"\n              @keydown="onOptionKeyDown($event, option)"\n              :tabindex="tabindex || \'0\'"\n              v-ripple>\n              <div class="p-checkbox p-component">\n                <div :class="[\'p-checkbox-box\', { \'p-highlight\': isSelected(option) }]">\n                  <span :class="[\'p-checkbox-icon\', { \'pi pi-check\': isSelected(option) }]"></span>\n                </div>\n              </div>\n              <slot name="option" :option="option" :index="i">\n                <span>{{ getOptionLabel(option) }}</span>\n              </slot>\n            </li>\n            <li\n              v-if="filterValue && (!visibleOptions || (visibleOptions && visibleOptions.length === 0))"\n              class="p-multiselect-empty-message">\n              {{ emptyFilterMessage }}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, ObjectUtils, DomHandler } from \'primevue2/utils\'\nimport Ripple from \'primevue2/ripple\'\n\nexport default {\n  name: \'MultiSelect\',\n  props: {\n    value: null,\n    options: Array,\n    optionLabel: null,\n    optionValue: null,\n    optionDisabled: null,\n    scrollHeight: {\n      type: String,\n      default: \'200px\'\n    },\n    placeholder: String,\n    disabled: Boolean,\n    filter: Boolean,\n    tabindex: String,\n    inputId: String,\n    dataKey: null,\n    filterPlaceholder: String,\n    filterLocale: String,\n    ariaLabelledBy: null,\n    appendTo: {\n      type: String,\n      default: null\n    },\n    emptyFilterMessage: {\n      type: String,\n      default: \'No results found\'\n    },\n    display: {\n      type: String,\n      default: \'comma\'\n    },\n    selectionLimit: {\n      type: Number,\n      default: null\n    },\n    showToggleAll: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      focused: false,\n      headerCheckboxFocused: false,\n      filterValue: null,\n      overlayVisible: false\n    }\n  },\n  outsideClickListener: null,\n  resizeListener: null,\n  scrollHandler: null,\n  updated() {\n    this.onFilterUpdated()\n  },\n  beforeDestroy() {\n    this.restoreAppend()\n    this.unbindOutsideClickListener()\n    this.unbindResizeListener()\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy()\n      this.scrollHandler = null\n    }\n  },\n  methods: {\n    getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option\n    },\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option\n    },\n    getOptionRenderKey(option) {\n      return this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)\n    },\n    isOptionDisabled(option) {\n      if (this.maxSelectionLimitReached && !this.isSelected(option)) {\n        return true\n      }\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false\n    },\n    isSelected(option) {\n      let selected = false\n      let optionValue = this.getOptionValue(option)\n\n      if (this.value) {\n        for (let val of this.value) {\n          if (ObjectUtils.equals(val, optionValue, this.equalityKey)) {\n            selected = true\n            break\n          }\n        }\n      }\n\n      return selected\n    },\n    show() {\n      this.$emit(\'before-show\')\n      this.overlayVisible = true\n    },\n    hide() {\n      this.$emit(\'before-hide\')\n      this.overlayVisible = false\n    },\n    onFocus() {\n      this.focused = true\n    },\n    onBlur() {\n      this.focused = false\n    },\n    onHeaderCheckboxFocus() {\n      this.headerCheckboxFocused = true\n    },\n    onHeaderCheckboxBlur() {\n      this.headerCheckboxFocused = false\n    },\n    onClick(event) {\n      if (!this.disabled && (!this.$refs.overlay || !this.$refs.overlay.contains(event.target)) && !DomHandler.hasClass(event.target, \'p-multiselect-close\')) {\n        if (this.overlayVisible)\n          this.hide()\n        else\n          this.show()\n\n        this.$refs.focusInput.focus()\n      }\n    },\n    onCloseClick() {\n      this.hide()\n    },\n    onKeyDown(event) {\n      switch (event.which) {\n      //down\n      case 40:\n        if (this.visibleOptions && !this.overlayVisible && event.altKey) {\n          this.show()\n        }\n        break\n\n        //space\n      case 32:\n        if (!this.overlayVisible) {\n          this.show()\n          event.preventDefault()\n        }\n        break\n\n        //enter and escape\n      case 13:\n      case 27:\n        if (this.overlayVisible) {\n          this.hide()\n          event.preventDefault()\n        }\n        break\n\n        //tab\n      case 9:\n        this.hide()\n        break\n\n      default:\n        break\n      }\n    },\n    onOptionSelect(event, option) {\n      if (this.disabled || this.isOptionDisabled(option)) {\n        return\n      }\n\n      let selected = this.isSelected(option)\n      let value = null\n\n      if (selected)\n        value = this.value.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey))\n      else\n        value = [...this.value || [], this.getOptionValue(option)]\n\n      this.$emit(\'input\', value)\n      this.$emit(\'change\', { originalEvent: event, value: value })\n    },\n    onOptionKeyDown(event, option) {\n      let listItem = event.target\n\n      switch (event.which) {\n      //down\n      case 40:\n        var nextItem = this.findNextItem(listItem)\n        if (nextItem) {\n          nextItem.focus()\n        }\n\n        event.preventDefault()\n        break\n\n        //up\n      case 38:\n        var prevItem = this.findPrevItem(listItem)\n        if (prevItem) {\n          prevItem.focus()\n        }\n\n        event.preventDefault()\n        break\n\n        //enter\n      case 13:\n        this.onOptionSelect(event, option)\n        event.preventDefault()\n        break\n\n      default:\n        break\n      }\n    },\n    findNextItem(item) {\n      let nextItem = item.nextElementSibling\n\n      if (nextItem)\n        return DomHandler.hasClass(nextItem, \'p-disabled\') ? this.findNextItem(nextItem) : nextItem\n      else\n        return null\n    },\n    findPrevItem(item) {\n      let prevItem = item.previousElementSibling\n\n      if (prevItem)\n        return DomHandler.hasClass(prevItem, \'p-disabled\') ? this.findPrevItem(prevItem) : prevItem\n      else\n        return null\n    },\n    onOverlayEnter() {\n      this.$refs.overlay.style.zIndex = String(DomHandler.generateZIndex())\n      this.appendContainer()\n      this.alignOverlay()\n      this.bindOutsideClickListener()\n      this.bindScrollListener()\n      this.bindResizeListener()\n      this.$emit(\'show\')\n\n      if (this.filter) {\n        this.$refs.filterInput.focus()\n      }\n    },\n    onOverlayLeave() {\n      this.unbindOutsideClickListener()\n      this.unbindScrollListener()\n      this.unbindResizeListener()\n      this.$emit(\'hide\')\n    },\n    alignOverlay() {\n      if (this.appendTo) {\n        DomHandler.absolutePosition(this.$refs.overlay, this.$refs.container)\n        this.$refs.overlay.style.minWidth = DomHandler.getOuterWidth(this.$refs.container) + \'px\'\n      }\n      else {\n        DomHandler.relativePosition(this.$refs.overlay, this.$refs.container)\n      }\n    },\n    bindOutsideClickListener() {\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = (event) => {\n          if (this.overlayVisible && this.isOutsideClicked(event)) {\n            this.hide()\n          }\n        }\n        document.addEventListener(\'click\', this.outsideClickListener)\n      }\n    },\n    unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener(\'click\', this.outsideClickListener)\n        this.outsideClickListener = null\n      }\n    },\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$el, () => {\n          if (this.overlayVisible) {\n            this.hide()\n          }\n        })\n      }\n\n      this.scrollHandler.bindScrollListener()\n    },\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener()\n      }\n    },\n    bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = () => {\n          if (this.overlayVisible && !DomHandler.isAndroid()) {\n            this.hide()\n          }\n        }\n        window.addEventListener(\'resize\', this.resizeListener)\n      }\n    },\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener(\'resize\', this.resizeListener)\n        this.resizeListener = null\n      }\n    },\n    isOutsideClicked(event) {\n      return !(this.$refs.container.isSameNode(event.target) || this.$refs.container.contains(event.target) || (this.$refs.overlay && this.$refs.overlay.contains(event.target)))\n    },\n    getLabelByValue(val) {\n      let label = null\n\n      if (this.options) {\n        for (let option of this.options) {\n          let optionValue = this.getOptionValue(option)\n\n          if (ObjectUtils.equals(optionValue, val, this.equalityKey)) {\n            label = this.getOptionLabel(option)\n            break\n          }\n        }\n      }\n\n      return label\n    },\n    onToggleAll(event) {\n      const value = this.allSelected ? [] : this.visibleOptions && this.visibleOptions.map(option => this.getOptionValue(option))\n\n      this.$emit(\'input\', value)\n      this.$emit(\'change\', { originalEvent: event, value: value })\n    },\n    appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === \'body\')\n          document.body.appendChild(this.$refs.overlay)\n        else\n          document.getElementById(this.appendTo).appendChild(this.$refs.overlay)\n      }\n    },\n    restoreAppend() {\n      if (this.$refs.overlay && this.appendTo) {\n        if (this.appendTo === \'body\')\n          document.body.removeChild(this.$refs.overlay)\n        else\n          document.getElementById(this.appendTo).removeChild(this.$refs.overlay)\n      }\n    },\n    onFilterChange(event) {\n      this.$emit(\'filter\', { originalEvent: event, value: event.target.value })\n    },\n    onFilterUpdated() {\n      if (this.overlayVisible) {\n        this.alignOverlay()\n      }\n    },\n    removeChip(item) {\n      let value = this.value.filter(val => !ObjectUtils.equals(val, item, this.equalityKey))\n\n      this.$emit(\'input\', value)\n      this.$emit(\'change\', { originalEvent: event, value: value })\n    }\n  },\n  computed: {\n    visibleOptions() {\n      if (this.filterValue && this.filterValue.trim().length > 0)\n        return this.options.filter(option => this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).indexOf(this.filterValue.toLocaleLowerCase(this.filterLocale)) > -1)\n      else\n        return this.options\n    },\n    containerClass() {\n      return [\n        \'p-multiselect p-component p-inputwrapper\',\n        {\n          \'p-multiselect-chip\': this.display === \'chip\',\n          \'p-disabled\': this.disabled,\n          \'p-focus\': this.focused,\n          \'p-inputwrapper-filled\': this.value && this.value.length,\n          \'p-inputwrapper-focus\': this.focused || this.overlayVisible\n        }\n      ]\n    },\n    labelClass() {\n      return [\n        \'p-multiselect-label\',\n        {\n          \'p-placeholder\': this.label === this.placeholder,\n          \'p-multiselect-label-empty\': !this.placeholder && (!this.value || this.value.length === 0)\n        }\n      ]\n    },\n    label() {\n      let label\n\n      if (this.value && this.value.length) {\n        label = \'\'\n        for (let i = 0; i < this.value.length; i++) {\n          if (i !== 0) {\n            label += \', \'\n          }\n\n          label += this.getLabelByValue(this.value[i])\n        }\n      }\n      else {\n        label = this.placeholder\n      }\n\n      return label\n    },\n    allSelected() {\n      if (this.filterValue && this.filterValue.trim().length > 0) {\n        let allSelected = true\n        if (this.visibleOptions.length > 0) {\n          for (let option of this.visibleOptions) {\n            if (!this.isSelected(option)) {\n              allSelected = false\n              break\n            }\n          }\n        }\n        else\n          allSelected = false\n        return allSelected\n      }\n      else {\n        return this.value && this.options && (this.value.length > 0 && this.value.length === this.options.length)\n      }\n    },\n    equalityKey() {\n      return this.optionValue ? null : this.dataKey\n    },\n    maxSelectionLimitReached() {\n      return this.selectionLimit && (this.value && this.value.length === this.selectionLimit)\n    }\n  },\n  directives: {\n    \'ripple\': Ripple\n  }\n}\n<\/script>\n\n<style>\n.p-multiselect {\n  display: inline-flex;\n  cursor: pointer;\n  position: relative;\n  user-select: none;\n}\n\n.p-multiselect-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n.p-multiselect-label-container {\n  overflow: hidden;\n  flex: 1 1 auto;\n  cursor: pointer;\n}\n\n.p-multiselect-label  {\n  display: block;\n  white-space: nowrap;\n  cursor: pointer;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.p-multiselect-label-empty {\n  overflow: hidden;\n  visibility: hidden;\n}\n\n.p-multiselect-token {\n  cursor: default;\n  display: inline-flex;\n  align-items: center;\n  flex: 0 0 auto;\n}\n\n.p-multiselect-token-icon {\n  cursor: pointer;\n}\n\n.p-multiselect .p-multiselect-panel {\n  min-width: 100%;\n}\n\n.p-multiselect-panel {\n  position: absolute;\n}\n\n.p-multiselect-items-wrapper {\n  overflow: auto;\n}\n\n.p-multiselect-items {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n.p-multiselect-item {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-weight: normal;\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n}\n\n.p-multiselect-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.p-multiselect-filter-container {\n  position: relative;\n  flex: 1 1 auto;\n}\n\n.p-multiselect-filter-icon {\n  position: absolute;\n  top: 50%;\n  margin-top: -.5rem;\n}\n\n.p-multiselect-filter-container .p-inputtext {\n  width: 100%;\n}\n\n.p-multiselect-close {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  overflow: hidden;\n  position: relative;\n  margin-left: auto;\n}\n\n.p-fluid .p-multiselect {\n  display: flex;\n}\n</style>\n']},media:void 0})}),m,undefined,false,undefined,!1,d,void 0,void 0);export{y as default};
